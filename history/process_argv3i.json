[{
  "history_id" : "3n3a8ba3s75",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716449407384,
  "history_end_time" : 1716449407384,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ho29rxkb6jv",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716406207373,
  "history_end_time" : 1716406207373,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "1eyhgp41mj0",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716363008050,
  "history_end_time" : 1716363008050,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "zvf9iudnows",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716319808266,
  "history_end_time" : 1716319808266,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "8cs77w3rthk",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716276606852,
  "history_end_time" : 1716276606852,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "vmg8rrqrl4o",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715974207900,
  "history_end_time" : 1715974207900,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "8sxzx04bwce",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715542211521,
  "history_end_time" : 1715542211521,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "i4ld54bcbvo",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715499007184,
  "history_end_time" : 1715499007184,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "heseognsz0x",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715455808463,
  "history_end_time" : 1715455808463,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "b5pseozzcpa",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715412607643,
  "history_end_time" : 1715412607643,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "0t2pn4en4d8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715369408543,
  "history_end_time" : 1715369408543,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "owkx8brwpxq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715326206291,
  "history_end_time" : 1715326206291,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "k7wxyehv3iq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715283010451,
  "history_end_time" : 1715283010451,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "f80pzesmw82",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715239811057,
  "history_end_time" : 1715239811057,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "vi331ojxc98",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715196613663,
  "history_end_time" : 1715196613663,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "boemdr0u58l",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715023809455,
  "history_end_time" : 1715023809455,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "c8cgru4hyoa",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714980608239,
  "history_end_time" : 1714980608239,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "6jmv1abf20q",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714937407868,
  "history_end_time" : 1714937407868,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "nip44kdzmy9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714894206741,
  "history_end_time" : 1714894206741,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "tze4tixbrgh",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714851009445,
  "history_end_time" : 1714851009445,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "lldkc4mif7s",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714807807033,
  "history_end_time" : 1714807807033,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "v9adq4s2asb",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714764609028,
  "history_end_time" : 1714764609028,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "d4fuso0aqv1",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714721408357,
  "history_end_time" : 1714721408357,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "757ajh4sv7g",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714678208836,
  "history_end_time" : 1714678208836,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "xz93dzptb7h",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714635008117,
  "history_end_time" : 1714635008117,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "0bq4l8scvvc",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714591808322,
  "history_end_time" : 1714591808322,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "mnsjnocdws3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714548608968,
  "history_end_time" : 1714548608968,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "pgveagwx4it",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714505407676,
  "history_end_time" : 1714505407676,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "113acsg2hvo",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714462207447,
  "history_end_time" : 1714462207447,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "5fx5cadehdu",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714419007958,
  "history_end_time" : 1714419007958,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ewoyrlyzqcf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714375805667,
  "history_end_time" : 1714375805667,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "srb4nv9vwzt",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714332608182,
  "history_end_time" : 1714332608182,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "x53prnzc167",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714289407067,
  "history_end_time" : 1714289407067,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "0pnpjt2fb4s",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714246207206,
  "history_end_time" : 1714246207206,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "zf5ftszpm10",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714203006999,
  "history_end_time" : 1714203006999,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "33fmztpy6q4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714159808147,
  "history_end_time" : 1714159808147,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "gcosvmkrtua",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714116606445,
  "history_end_time" : 1714116606445,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "rx4n0hduv6r",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714073407214,
  "history_end_time" : 1714073407214,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "8ikaqy23nwz",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714030206566,
  "history_end_time" : 1714030206566,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "nmbhjumusgl",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714028455289,
  "history_end_time" : 1714028455289,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "1wqgfzad47j",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714022735359,
  "history_end_time" : 1714022735359,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "y7z3u4ucze8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714022600806,
  "history_end_time" : 1714022600806,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "xz1vg0xw9mr",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1713987010022,
  "history_end_time" : 1713987010022,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "91r7j2ms1x1",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1713943807433,
  "history_end_time" : 1713943807433,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "e1m5no6tn9w",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1713936140844,
  "history_end_time" : 1713936140844,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "gxkahsow920",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1713935991001,
  "history_end_time" : 1713936031887,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "jyyadbboile",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1713931874292,
  "history_end_time" : 1713931874292,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "vv86n01xeq7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1713900608220,
  "history_end_time" : 1713900608220,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "26ur7bqpqtc",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1713857406215,
  "history_end_time" : 1713857406215,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "t5o59bccosy",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1713814207505,
  "history_end_time" : 1713814207505,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "shlkhc9l1z2",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1713771006349,
  "history_end_time" : 1713771006349,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "w3kr6h0ogyq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1713727807322,
  "history_end_time" : 1713727807322,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "2bj3psc2j9q",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1713684607305,
  "history_end_time" : 1713684607305,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "7ji75p3duvz",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1713641429384,
  "history_end_time" : 1713641429384,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "4zfx8oqizms",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1713598206711,
  "history_end_time" : 1713598206711,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "0ea8ffp5skm",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1713555010885,
  "history_end_time" : 1713555010885,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "temump6mfxl",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1713511807474,
  "history_end_time" : 1713511807474,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "90xd1xciwjt",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1713468608253,
  "history_end_time" : 1713468608253,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ytwg1x1erkf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1713425407647,
  "history_end_time" : 1713425407647,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "o4opxqz9uh3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1713382207833,
  "history_end_time" : 1713382207833,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "z2uz250dmaw",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1713339006412,
  "history_end_time" : 1713339006412,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "rowhap3mzh0",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1713295809039,
  "history_end_time" : 1713295809039,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "5vlww4p501n",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1713252610235,
  "history_end_time" : 1713252610235,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "lbeccpsz9ra",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1713209408422,
  "history_end_time" : 1713209408422,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "kjite8crzs8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1713166206441,
  "history_end_time" : 1713166206441,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "hcdec6mo88k",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1713123007534,
  "history_end_time" : 1713123007534,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "tgwio716scg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1713079806585,
  "history_end_time" : 1713079806585,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "fx05z89rbst",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1713036607662,
  "history_end_time" : 1713036607662,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "p2jifcpgoiy",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1712993405657,
  "history_end_time" : 1712993405657,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "xoc3w8hu48n",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1712950207683,
  "history_end_time" : 1712950207683,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "j9gx857lvb0",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1712907009870,
  "history_end_time" : 1712907009870,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "e17q8ba7t1y",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1712863810108,
  "history_end_time" : 1712863810108,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "p0hec3dzzyf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1712820608961,
  "history_end_time" : 1712820608961,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "my5orp46iwd",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1712777409172,
  "history_end_time" : 1712777409172,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "7stovn56kht",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1712734207679,
  "history_end_time" : 1712734207679,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ufkrczvu3kn",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1712691008483,
  "history_end_time" : 1712691008483,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ttgm2a9fwa8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1712647806891,
  "history_end_time" : 1712647806891,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "njkvhqzc5z3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1712604608479,
  "history_end_time" : 1712604608479,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "dygor8jaf7b",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1712561408362,
  "history_end_time" : 1712561408362,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "42kk3vcwbnt",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1712518207791,
  "history_end_time" : 1712518207791,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ik7hb40ukx8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1712475007949,
  "history_end_time" : 1712475007949,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "bgzfb2ihfkx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1712431807687,
  "history_end_time" : 1712431807687,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ozrigyxeink",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1712388606387,
  "history_end_time" : 1712388606387,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "u3caioj5q45",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1712345407384,
  "history_end_time" : 1712345407384,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "hytt3iuejao",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1712302209211,
  "history_end_time" : 1712302209211,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "y2mbxbmtcza",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1712259007326,
  "history_end_time" : 1712259007326,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "yulxwzx33z6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1712215806393,
  "history_end_time" : 1712215806393,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "66zr5nebv3d",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1712172607306,
  "history_end_time" : 1712172607306,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "l6vuzecm2z0",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1712129406884,
  "history_end_time" : 1712129406884,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "i41bnbbrv7b",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1712086208911,
  "history_end_time" : 1712086208911,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "rymddhax8gm",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1712043006963,
  "history_end_time" : 1712043006963,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "p52kq2j29g8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1711999808370,
  "history_end_time" : 1711999808370,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "r9xeusrsisu",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1711956606860,
  "history_end_time" : 1711956606860,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "nrz839ylyvn",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1711913410592,
  "history_end_time" : 1711913410592,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "00bmeex9yjh",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1711870206639,
  "history_end_time" : 1711870206639,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "7a3jnmbfllf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1711827009317,
  "history_end_time" : 1711827009317,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "s783k70wngl",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1711783806858,
  "history_end_time" : 1711783806858,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "2txk57xdiho",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1711740608611,
  "history_end_time" : 1711740608611,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ru255nujdyw",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1711697407112,
  "history_end_time" : 1711697407112,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "7k05e8v8dqh",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1711654207579,
  "history_end_time" : 1711654207579,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "5huev7y3lhg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1711611008905,
  "history_end_time" : 1711611008905,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "j0e8snwhh1l",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1711567808890,
  "history_end_time" : 1711567808890,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "9sgdygv3stg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1711524609399,
  "history_end_time" : 1711524609399,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "w3q2p4utkcg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1711481408352,
  "history_end_time" : 1711481408352,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "5r3c59wm1kk",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1711438207575,
  "history_end_time" : 1711438207575,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "coslyeielvp",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1711395008354,
  "history_end_time" : 1711395008354,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "nqhb647t9s3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1711351806612,
  "history_end_time" : 1711351806612,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "3m28n47ygm9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1711308608312,
  "history_end_time" : 1711308608312,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ps78lpjfg2j",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1711265407037,
  "history_end_time" : 1711265407037,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "blhgl7bu3zg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1711222207848,
  "history_end_time" : 1711222207848,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "zqpvjffp1ee",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1711179008151,
  "history_end_time" : 1711179008151,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "5ym810avfrk",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1711135808228,
  "history_end_time" : 1711135808228,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "pv9kqt543p9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1710444608101,
  "history_end_time" : 1710444608101,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "kffdyl3lc0a",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1710401409583,
  "history_end_time" : 1710401409583,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "akaljct8waw",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1710358210107,
  "history_end_time" : 1710358210107,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "affn4uf5zph",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1710315007061,
  "history_end_time" : 1710315007061,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "fbhy7lsak4p",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1710271807324,
  "history_end_time" : 1710271807324,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "0tcqlmt6fbt",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1710228607324,
  "history_end_time" : 1710228607324,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "n1eprpswg2c",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1710185407618,
  "history_end_time" : 1710185407618,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "a15mmwe5f0y",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1710142206617,
  "history_end_time" : 1710142206617,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "bveu6mls96q",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1710099008016,
  "history_end_time" : 1710099008016,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "bx8cv27uuqj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1710055809470,
  "history_end_time" : 1710055809470,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "umfx4pvgq4h",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1710016207722,
  "history_end_time" : 1710016207722,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "35b948zfm2e",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709929808609,
  "history_end_time" : 1709929808609,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "7uebji3p6ys",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709757009345,
  "history_end_time" : 1709757009345,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "bhrzeovlkgt",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709713807911,
  "history_end_time" : 1709713807911,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "4h140bn6so8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709670609411,
  "history_end_time" : 1709670609411,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "io10ujbaodh",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709627406859,
  "history_end_time" : 1709627406859,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "74aqidc2sll",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709584208324,
  "history_end_time" : 1709584208324,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "cpfac618u83",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709541006555,
  "history_end_time" : 1709541006555,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "mma4dokh7sr",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709497808332,
  "history_end_time" : 1709497808332,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "m25cp49z6qx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709454606026,
  "history_end_time" : 1709454606026,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "zohse7bqf26",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709411409040,
  "history_end_time" : 1709411409040,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "d0p3u89qg0r",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709325007683,
  "history_end_time" : 1709325007683,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "hhens75bsa3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709281806757,
  "history_end_time" : 1709281806757,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "nk9jaymz7lf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709238608114,
  "history_end_time" : 1709238608114,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ah5ya1kjuhb",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709195407489,
  "history_end_time" : 1709195407489,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "gp6zsbbgzdv",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709152208474,
  "history_end_time" : 1709152208474,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "h2lmljn7yl6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709109007635,
  "history_end_time" : 1709109007635,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "noljgxpl40m",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709065809672,
  "history_end_time" : 1709065809672,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "sal0xszat0v",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709022607804,
  "history_end_time" : 1709022607804,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "vvl95eh4xu0",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708979408420,
  "history_end_time" : 1708979408420,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "rp4bi6wbiod",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708936208974,
  "history_end_time" : 1708936208974,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ed4vic1e0yl",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708893008471,
  "history_end_time" : 1708893008471,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "q1x6ze6gt0w",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708849806352,
  "history_end_time" : 1708849806352,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "cyeoqj390se",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708806610250,
  "history_end_time" : 1708806610250,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "erc540gyczt",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708763406634,
  "history_end_time" : 1708763406634,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "qycgm33vshc",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708547410314,
  "history_end_time" : 1708547410314,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "agr5edmdt24",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708504206921,
  "history_end_time" : 1708504206921,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "t9daolymqg8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708461009381,
  "history_end_time" : 1708461009381,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "c1mzcklv8b4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708417807961,
  "history_end_time" : 1708417807961,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "l4c6qrecab9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708374608904,
  "history_end_time" : 1708374608904,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "3vshs0pd9pt",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708331406430,
  "history_end_time" : 1708331406430,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "40w8czi5typ",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708288208171,
  "history_end_time" : 1708288208171,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "7kgwnon2mw5",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708245006365,
  "history_end_time" : 1708245006365,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "irzkul5ss6g",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708201808538,
  "history_end_time" : 1708201808538,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "o5yucx3nksu",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708158607306,
  "history_end_time" : 1708158607306,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "gxxx13bqwcf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707942608242,
  "history_end_time" : 1707942608242,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "d57lnmg0qpq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707899407013,
  "history_end_time" : 1707899407013,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "zai1lvr0lov",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707856208200,
  "history_end_time" : 1707856208200,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "icnutc4rjij",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707813006265,
  "history_end_time" : 1707813006265,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "5a44pw1py94",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707769807817,
  "history_end_time" : 1707769807817,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ixm9nsuf8w7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707726605955,
  "history_end_time" : 1707726605955,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "b9wprr9b1ku",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707683408390,
  "history_end_time" : 1707683408390,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "o7i6l7d1rnx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707640205956,
  "history_end_time" : 1707640205956,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "tdm85q8glgn",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707597007779,
  "history_end_time" : 1707597007779,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "s11r1p3pxx5",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707553807220,
  "history_end_time" : 1707553807220,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "27dgb3wftr9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707510608452,
  "history_end_time" : 1707510608452,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "opdz0bskdkh",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707467409786,
  "history_end_time" : 1707467409786,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "neme783ldxo",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707424207978,
  "history_end_time" : 1707424207978,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "dpiesmghbz2",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707381006665,
  "history_end_time" : 1707381006665,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "g4hy1k1dgz8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707337808222,
  "history_end_time" : 1707337808222,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "zwm4tyhs43k",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707294606148,
  "history_end_time" : 1707294606148,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "d7378r93amk",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707251410934,
  "history_end_time" : 1707251410934,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "h6ta4cmhtw6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707208206110,
  "history_end_time" : 1707208206110,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "tgdum4ddrfc",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707165008097,
  "history_end_time" : 1707165008097,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "zmp7ep3n69q",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707121806248,
  "history_end_time" : 1707121806248,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "fr7e52d5nai",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707078609246,
  "history_end_time" : 1707078609246,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "9eeud29cw6b",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707035406850,
  "history_end_time" : 1707035406850,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ddu254dlil6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706992207978,
  "history_end_time" : 1706992207978,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "lab52vdi5ll",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706949005649,
  "history_end_time" : 1706949005649,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "0zpurgplmws",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706905812395,
  "history_end_time" : 1706905812395,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "mn9x1uxmtz6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706862609602,
  "history_end_time" : 1706862609602,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "l2u9tbij64i",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706819411150,
  "history_end_time" : 1706819411150,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "s6itv5i42a2",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706776208147,
  "history_end_time" : 1706776208147,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "fdgpq1bhgfg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706733009985,
  "history_end_time" : 1706733009985,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ofdbtxdnvfv",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706689806280,
  "history_end_time" : 1706689806280,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "kpa690hdpvy",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706646607594,
  "history_end_time" : 1706646607594,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ibnusggsfid",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706603406489,
  "history_end_time" : 1706603406489,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "w9gqiud46l8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706560210750,
  "history_end_time" : 1706560210750,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "l9vg1o4n2dg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706517005414,
  "history_end_time" : 1706517005414,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "pg91xppdk4l",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706473807669,
  "history_end_time" : 1706473807669,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "zgcxin383az",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706430606370,
  "history_end_time" : 1706430606370,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "35zx6j4neto",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706387407977,
  "history_end_time" : 1706387407977,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "pvlpj362hwd",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706344206446,
  "history_end_time" : 1706344206446,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ueimju8a5rp",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706301007154,
  "history_end_time" : 1706301007154,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "oh1jt5osz5g",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706257809063,
  "history_end_time" : 1706257809063,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ptevln1h60s",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706214609435,
  "history_end_time" : 1706214609435,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "zyu1iwpxf3s",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706128210689,
  "history_end_time" : 1706128210689,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "3av0p0x6j1h",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706085006100,
  "history_end_time" : 1706085006100,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "qjxp40pubaf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706041809873,
  "history_end_time" : 1706041809873,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "u5k8i0nau42",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705998606281,
  "history_end_time" : 1705998606281,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "a63mh39butf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705955410913,
  "history_end_time" : 1705955410913,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "s3ermd87np6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705912206012,
  "history_end_time" : 1705912206012,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "xj5hc4l56d7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705869008376,
  "history_end_time" : 1705869008376,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "23pgd7o9f7r",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705825806329,
  "history_end_time" : 1705825806329,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "fffhjnxlws9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705782608414,
  "history_end_time" : 1705782608414,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "qekv7wx2cvl",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705696210003,
  "history_end_time" : 1705696210003,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "b2i8qalby8j",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705609807293,
  "history_end_time" : 1705609807293,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "jlopu8declu",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705523407200,
  "history_end_time" : 1705523407200,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "9e18q0ldtur",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705437007736,
  "history_end_time" : 1705437007736,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "cui5on9gcbj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705350607328,
  "history_end_time" : 1705350607328,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "hcba5r67ftm",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705264207570,
  "history_end_time" : 1705264207570,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "g22aujb6df3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705177807155,
  "history_end_time" : 1705177807155,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "5w69f003fkx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705091408079,
  "history_end_time" : 1705091408079,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "zhqpy427f5i",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705005019171,
  "history_end_time" : 1705005019171,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "juhha6epbaz",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704918607498,
  "history_end_time" : 1704918607498,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "6oqtk57gywe",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704832207039,
  "history_end_time" : 1704832207039,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "izgscpupw4g",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704789008092,
  "history_end_time" : 1704789008092,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "iqnwj2ow4es",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704745807602,
  "history_end_time" : 1704745807602,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "srgxpbuwqea",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704702607492,
  "history_end_time" : 1704702607492,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "mr4rp7h2tuh",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704659407772,
  "history_end_time" : 1704659407772,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "e66dzizb6x6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704616210541,
  "history_end_time" : 1704616210541,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "zpvjjhc8whf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704573009471,
  "history_end_time" : 1704573009471,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "dqtw6hrqitv",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704529810733,
  "history_end_time" : 1704529810733,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ozx9gb09u69",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704486609234,
  "history_end_time" : 1704486609234,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "4tjwntffg56",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704443409864,
  "history_end_time" : 1704443409864,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "sa2lx7e3knl",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704400209956,
  "history_end_time" : 1704400209956,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "qqi5n7p093i",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704357009221,
  "history_end_time" : 1704357009221,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "9is8zkezp6m",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704313809179,
  "history_end_time" : 1704313809179,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "a1p3wmnssvj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704270607899,
  "history_end_time" : 1704270607899,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "jo3poa082pd",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704227409899,
  "history_end_time" : 1704227409899,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "wdnn023oiaz",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704184207738,
  "history_end_time" : 1704184207738,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "nuagtr7lx2t",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704141008612,
  "history_end_time" : 1704141008612,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "fypyozvmfui",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704097808362,
  "history_end_time" : 1704097808362,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "g2fwr4tjor4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704054608299,
  "history_end_time" : 1704054608299,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "0aw5kfjyzyz",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704011407982,
  "history_end_time" : 1704011407982,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "du8txknlkgo",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703968208360,
  "history_end_time" : 1703968208360,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "kjm5rd54r16",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703925007550,
  "history_end_time" : 1703925007550,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ktf6oqk2gbv",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703881808114,
  "history_end_time" : 1703881808114,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "06yv8w65lp9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703838608017,
  "history_end_time" : 1703838608017,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "8xfwzklcmel",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703795409101,
  "history_end_time" : 1703795409101,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ay5c45c1cid",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703752210366,
  "history_end_time" : 1703752210366,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "o1knwe6bbik",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703709006980,
  "history_end_time" : 1703709006980,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "d8wu7ord8tj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703665811046,
  "history_end_time" : 1703665811046,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "g6qthbgpnxb",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703622607169,
  "history_end_time" : 1703622607169,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "f7mu5781m9f",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703579408145,
  "history_end_time" : 1703579408145,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "y0f0onlc5vz",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703536207389,
  "history_end_time" : 1703536207389,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "nfir5afrj7q",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703493007006,
  "history_end_time" : 1703493007006,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "o4rrig453wf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703449807597,
  "history_end_time" : 1703449807597,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "kxde3nyx888",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703406608476,
  "history_end_time" : 1703406608476,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "p2b16fkwwg5",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703363407132,
  "history_end_time" : 1703363407132,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "f30o3p1ej0b",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703320207567,
  "history_end_time" : 1703320207567,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "6ny0mj8oufk",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703277009891,
  "history_end_time" : 1703277009891,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "69mpl961eso",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703233809135,
  "history_end_time" : 1703233809135,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "gmuwhy1a491",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703190609020,
  "history_end_time" : 1703190609020,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "a7qgzqhup3v",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703147408239,
  "history_end_time" : 1703147408239,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "wvzol1b7skb",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703104209681,
  "history_end_time" : 1703104209681,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "g50mdwn06tz",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703061008514,
  "history_end_time" : 1703061008514,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "jlaaq7vyoxw",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703017807133,
  "history_end_time" : 1703017807133,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "5oeaz3jxncr",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1702979081176,
  "history_end_time" : 1702979081176,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "a3u4loqj4vi",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1702931407098,
  "history_end_time" : 1702931407098,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "uq5tyepfgxz",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1702888209111,
  "history_end_time" : 1702888209111,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "smvoix6khhj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1702845007112,
  "history_end_time" : 1702845007112,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ddylza73lbz",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1702801808752,
  "history_end_time" : 1702801808752,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "kvh8sgl0c0y",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1702758607177,
  "history_end_time" : 1702758607177,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "0awf6z263oa",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1702715409382,
  "history_end_time" : 1702715409382,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "zmi2jumz7wx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1702672207456,
  "history_end_time" : 1702672207456,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "gcuqiymp8p1",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1702629009435,
  "history_end_time" : 1702629009435,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "yatdbocyh2f",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1702585807517,
  "history_end_time" : 1702585807517,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "e81m86y44xz",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1702542608371,
  "history_end_time" : 1702542608371,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "gx3cr0grlxl",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1702499407630,
  "history_end_time" : 1702499407630,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "2iwjf3wn29l",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1702456207415,
  "history_end_time" : 1702456207415,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "tr97rz4bem7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1702413007627,
  "history_end_time" : 1702413007627,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ifb3ycqz88w",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1702369807687,
  "history_end_time" : 1702369807687,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "tyn8at48il6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1702326607584,
  "history_end_time" : 1702326607584,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ptfkjflocq8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1702283406759,
  "history_end_time" : 1702283406759,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "2zrtsh75sbf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1702240207787,
  "history_end_time" : 1702240207787,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "7jdez2k2gvk",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1702197006995,
  "history_end_time" : 1702197006995,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "s7ntmhq0mhy",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1702153808108,
  "history_end_time" : 1702153808108,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "xiclp51top1",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1702110607773,
  "history_end_time" : 1702110607773,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "wugg5zz10y6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1702067407729,
  "history_end_time" : 1702067407729,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "c1s7dogn8il",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1702024210541,
  "history_end_time" : 1702024210541,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "o3dm736cntj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701981007267,
  "history_end_time" : 1701981007267,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "jbi62h7xohy",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701937807853,
  "history_end_time" : 1701937807853,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "l05cpths315",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701894607510,
  "history_end_time" : 1701894607510,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "jxd0yndo3w0",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701851407914,
  "history_end_time" : 1701851407914,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ujo5qwrjckj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701808207541,
  "history_end_time" : 1701808207541,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "2x1xszq7rk9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701765009214,
  "history_end_time" : 1701765009214,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "1pnvwbdb9yv",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701721807387,
  "history_end_time" : 1701721807387,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "96z0lg977v2",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701678608739,
  "history_end_time" : 1701678608739,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "wrrb6ollzs3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701635407834,
  "history_end_time" : 1701635407834,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "uzpab0ywywj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701592207826,
  "history_end_time" : 1701592207826,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "qinwn3ugysy",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701549007252,
  "history_end_time" : 1701549007252,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "t1ksvrax283",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701505808091,
  "history_end_time" : 1701505808091,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "p6edgn75lds",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701462607356,
  "history_end_time" : 1701462607356,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "4wcypy6wqb7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701419408828,
  "history_end_time" : 1701419408828,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "w2uwerh5lul",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701376207477,
  "history_end_time" : 1701376207477,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "l3s1h03o2p7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701333008684,
  "history_end_time" : 1701333008684,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "fhgywau0gch",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701289811469,
  "history_end_time" : 1701289811469,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "6q499wsq1ee",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701246609422,
  "history_end_time" : 1701246609422,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "g51g5ef4tfm",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701203409428,
  "history_end_time" : 1701203409428,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "7hpd04w53wc",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701160206755,
  "history_end_time" : 1701160206755,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "lkh71l1l7vd",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701117008337,
  "history_end_time" : 1701117008337,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "1f8a2m49eer",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701073806777,
  "history_end_time" : 1701073806777,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "cee5aomepzc",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701030608247,
  "history_end_time" : 1701030608247,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "jh4roqqrutd",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700987406976,
  "history_end_time" : 1700987406976,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "25nsttudt3w",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700944207433,
  "history_end_time" : 1700944207433,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "11au9ln4udw",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700901008267,
  "history_end_time" : 1700901008267,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "pd65435l2x7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700857807648,
  "history_end_time" : 1700857807648,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "3w4jcfqmp6w",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700814606658,
  "history_end_time" : 1700814606658,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "on5efqyygns",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700771407461,
  "history_end_time" : 1700771407461,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "eun03ajf6x2",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700728206637,
  "history_end_time" : 1700728206637,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "vxwbfy9kwh0",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700685008369,
  "history_end_time" : 1700685008369,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "v0e1kwnlmga",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700641808295,
  "history_end_time" : 1700641808295,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "8d67ra02kvt",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700598608183,
  "history_end_time" : 1700598608183,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "uib64q52pos",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700555406982,
  "history_end_time" : 1700555406982,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "3d0eda5s0rs",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700512208045,
  "history_end_time" : 1700512208045,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "41xwj8qv37c",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700469009612,
  "history_end_time" : 1700469009612,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "f5ea3qcovvw",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700425808042,
  "history_end_time" : 1700425808042,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "8gv2n00m96v",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700382608790,
  "history_end_time" : 1700382608790,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "xfgdgd7jkkv",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700339407336,
  "history_end_time" : 1700339407336,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ozayxzap77z",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700296207985,
  "history_end_time" : 1700296207985,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "m1vek8fehow",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700253007562,
  "history_end_time" : 1700253007562,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "tqg7ljtuy0k",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700209808984,
  "history_end_time" : 1700209808984,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "y90d5sn54ej",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700166608809,
  "history_end_time" : 1700166608809,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "jtcokef0pg4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700123408392,
  "history_end_time" : 1700123408392,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "s51rpqqhjc6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700080209759,
  "history_end_time" : 1700080209759,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "nj58feys4er",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700037009106,
  "history_end_time" : 1700037009106,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "okwg4a7pl5e",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1699993810598,
  "history_end_time" : 1699993810598,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ujc8f1nhsxh",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1699950608000,
  "history_end_time" : 1699950608000,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "xnhmwlqy079",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1699907408860,
  "history_end_time" : 1699907408860,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ye124eztuy8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1699864209265,
  "history_end_time" : 1699864209265,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ki3vggeefg4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1699821008015,
  "history_end_time" : 1699821008015,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "qxea0mj2dib",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1699777807314,
  "history_end_time" : 1699777807314,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "dsgo4h3e2yk",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1699734607623,
  "history_end_time" : 1699734607623,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "e7iz9ichrfb",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1699691409250,
  "history_end_time" : 1699691409250,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "zx4fufhsqj8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1699648207555,
  "history_end_time" : 1699648207555,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "913oew51byd",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1699605009346,
  "history_end_time" : 1699605009346,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "e471im455s5",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1699561808858,
  "history_end_time" : 1699561808858,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "0ycpn6rf792",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1699518609229,
  "history_end_time" : 1699518609229,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "gccd9gpxrto",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1699475408420,
  "history_end_time" : 1699475408420,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ma5btgiq5d2",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1699432210792,
  "history_end_time" : 1699432210792,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "d9zrdhq2d7c",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1699389007517,
  "history_end_time" : 1699389007517,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "zto1yazcin7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1699345810996,
  "history_end_time" : 1699345810996,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "eqgwp7yelj8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1699302609218,
  "history_end_time" : 1699302609218,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "6cu556bm9bx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1699259411743,
  "history_end_time" : 1699259411743,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "i1ree503fme",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1699216207787,
  "history_end_time" : 1699216207787,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "h85sebjwv5m",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1699173009585,
  "history_end_time" : 1699173009585,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "jqtxb3d77xc",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1699126208391,
  "history_end_time" : 1699126208391,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "xo847qm6cbq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1699083013831,
  "history_end_time" : 1699083013831,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "lrn45vshk6b",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1699039819074,
  "history_end_time" : 1699039819074,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "23uce0e5tom",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1698996610810,
  "history_end_time" : 1698996610810,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "kq2lzmn3dga",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1698953411313,
  "history_end_time" : 1698953411313,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "2b9bc713btq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1698910210270,
  "history_end_time" : 1698910210270,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "aom6lw9sfh0",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1698867008159,
  "history_end_time" : 1698867008159,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "u4d3ng7t8sm",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1698823810587,
  "history_end_time" : 1698823810587,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "2xz4pectett",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1698780610196,
  "history_end_time" : 1698780610196,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "8yv3o8y89ii",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1698737409589,
  "history_end_time" : 1698737409589,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "oedtut8bjyb",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1698694208228,
  "history_end_time" : 1698694208228,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "cyj56x54fbf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1698651011531,
  "history_end_time" : 1698651011531,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "jkbmf0bhntg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1698607808282,
  "history_end_time" : 1698607808282,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "lw0u7ji29ti",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1698564609890,
  "history_end_time" : 1698564609890,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ay3rui9k9gh",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1698521407842,
  "history_end_time" : 1698521407842,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "84j4oq6ciqc",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1698478210355,
  "history_end_time" : 1698478210355,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "k471gukoxtx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1698435009281,
  "history_end_time" : 1698435009281,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "6qmt3ri1b4l",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1698391810053,
  "history_end_time" : 1698391810053,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "i7r4hcwsldn",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1698348609291,
  "history_end_time" : 1698348609291,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "wbw1hxx4dbf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1698305409292,
  "history_end_time" : 1698305409292,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "i01j7m0xuqc",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1698262207641,
  "history_end_time" : 1698262207641,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "2eje31lccsa",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1698219009883,
  "history_end_time" : 1698219009883,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "p38m7t8pqf7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1698175807230,
  "history_end_time" : 1698175807230,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "tljkxzn5egc",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1698132608528,
  "history_end_time" : 1698132608528,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "eb159gyesmx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1698089408017,
  "history_end_time" : 1698089408017,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "e7x1t6vfw5n",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1698046209065,
  "history_end_time" : 1698046209065,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ygyb3y5ky63",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1698003007007,
  "history_end_time" : 1698003007007,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "gnlv3h248kr",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1697959807854,
  "history_end_time" : 1697959807854,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "1ru2o2x9pjc",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1697916609491,
  "history_end_time" : 1697916609491,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "i2vvunqugdi",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1697873409294,
  "history_end_time" : 1697873409294,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "tmdewbyis6z",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1697830209069,
  "history_end_time" : 1697830209069,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ya6avtp1pvl",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1697787009196,
  "history_end_time" : 1697787009196,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "w1oukpvw29u",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1697743809178,
  "history_end_time" : 1697743809178,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "rx0b58hhl56",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1697700609053,
  "history_end_time" : 1697700609053,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "is3mel82c1s",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1697657408336,
  "history_end_time" : 1697657408336,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "1oyez57xc19",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1697614208081,
  "history_end_time" : 1697614208081,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "20zmq1n748o",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1697571009157,
  "history_end_time" : 1697571009157,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "575z4e11131",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1697527808167,
  "history_end_time" : 1697527808167,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "owfxw3rp7z4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1697484609471,
  "history_end_time" : 1697484609471,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "z9xk94asv2f",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1697441408110,
  "history_end_time" : 1697441408110,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "v25abq6tk1v",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1697398207297,
  "history_end_time" : 1697398207297,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ucdvfkha84e",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1697355008581,
  "history_end_time" : 1697355008581,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "llu2i1z3bkz",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1697311808533,
  "history_end_time" : 1697311808533,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "4avz4wdc5lt",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1697268609125,
  "history_end_time" : 1697268609125,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "1um40ykvoak",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1697225409295,
  "history_end_time" : 1697225409295,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "cfav4qptdvt",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1697182211114,
  "history_end_time" : 1697182211114,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "8l5k27f59mv",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1697139010087,
  "history_end_time" : 1697139010087,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "13aexilwlv3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1697095812319,
  "history_end_time" : 1697095812319,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "7t15enpfjku",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1697052607507,
  "history_end_time" : 1697052607507,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "0stg7jh6w27",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1697009411589,
  "history_end_time" : 1697009411589,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "r14ts4l5vvy",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696966210486,
  "history_end_time" : 1696966210486,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "iqe43rr4ii5",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696923007919,
  "history_end_time" : 1696923007919,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "0rbnbarr2di",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696879807976,
  "history_end_time" : 1696879807976,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "vpuw7c2w2wh",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696836608321,
  "history_end_time" : 1696836608321,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "wgcsaj10r6t",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696793406843,
  "history_end_time" : 1696793406843,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "suu923vegy8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696750208931,
  "history_end_time" : 1696750208931,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "7yzqalcoju8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696707007687,
  "history_end_time" : 1696707007687,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "y2ughkyeyh6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696663808982,
  "history_end_time" : 1696663808982,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "84in6s90ldj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696620607963,
  "history_end_time" : 1696620607963,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "vlosu1aktoa",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696577414495,
  "history_end_time" : 1696577414495,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "so265kmr8mw",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696534208062,
  "history_end_time" : 1696534208062,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "7fiyvq1la4o",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696491011213,
  "history_end_time" : 1696491011213,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ytynadny43l",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696447809731,
  "history_end_time" : 1696447809731,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "84ykf8uy56a",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696404610315,
  "history_end_time" : 1696404610315,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "46kcpj9og84",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696361411415,
  "history_end_time" : 1696361411415,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "srh4hyubvby",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696318210442,
  "history_end_time" : 1696318210442,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "04pt76zfda0",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696275007993,
  "history_end_time" : 1696275007993,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "hvfcqjlid8z",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696231809236,
  "history_end_time" : 1696231809236,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "84m3dhe75ew",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696188606936,
  "history_end_time" : 1696188606936,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "8kuwxt219a8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696145409969,
  "history_end_time" : 1696145409969,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "mykcmg0pcvm",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696102210092,
  "history_end_time" : 1696102210092,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "tzkoki7mfgz",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696059009911,
  "history_end_time" : 1696059009911,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "hxlt7c0szm5",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696015809569,
  "history_end_time" : 1696015809569,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "wivmrp6wsqq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695972608023,
  "history_end_time" : 1695972608023,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "nwaptbygeiz",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695929409610,
  "history_end_time" : 1695929409610,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "188h3fluysx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695886209820,
  "history_end_time" : 1695886209820,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "8fwomv9fgrc",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695843007022,
  "history_end_time" : 1695843007022,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "psht5i9i0ug",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695799808313,
  "history_end_time" : 1695799808313,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "zhpek25lj9j",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695756608185,
  "history_end_time" : 1695756608185,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ut25ftxqi0h",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695713409352,
  "history_end_time" : 1695713409352,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ngh87yt0z5k",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695670210605,
  "history_end_time" : 1695670210605,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "5nr4wwf0chm",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695627011077,
  "history_end_time" : 1695627011077,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "p00jg9igj9q",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695583808235,
  "history_end_time" : 1695583808235,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "omqv4j49g2c",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695540607960,
  "history_end_time" : 1695540607960,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "w6fhk4xyk2o",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695497410217,
  "history_end_time" : 1695497410217,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "hvhk20g37w4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695454207187,
  "history_end_time" : 1695454207187,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "fzw648rnmva",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695411011133,
  "history_end_time" : 1695411011133,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "c3s1pppwy06",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695367807710,
  "history_end_time" : 1695367807710,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "l7wexzfl4d3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695324608483,
  "history_end_time" : 1695324608483,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "8orh1jagelv",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695281407537,
  "history_end_time" : 1695281407537,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ccz04jnpuil",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695238210292,
  "history_end_time" : 1695238210292,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "s112dnwyw9t",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695195007084,
  "history_end_time" : 1695195007084,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "un05wdgd1va",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695151809936,
  "history_end_time" : 1695151809936,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "2rdqbqw5qyj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695108606558,
  "history_end_time" : 1695108606558,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "w6q5oz4qcl5",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695065408231,
  "history_end_time" : 1695065408231,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "oaa1t3nal69",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695022205957,
  "history_end_time" : 1695022205957,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "m94mj9gawcb",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1694979012198,
  "history_end_time" : 1694979012198,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "233nsa273ve",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1694935806555,
  "history_end_time" : 1694935806555,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "hcpaw3n3do6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1694892610110,
  "history_end_time" : 1694892610110,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "8j1ojyp5yxo",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1694849411490,
  "history_end_time" : 1694849411490,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "9w54r07bch5",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1694806210051,
  "history_end_time" : 1694806210051,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ymnzk5aaseg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1694763012472,
  "history_end_time" : 1694763012472,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "w0np4zv0l3r",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1694719811478,
  "history_end_time" : 1694719811478,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "js908p29rs7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1694676612918,
  "history_end_time" : 1694676612918,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "a7884zhogap",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1694633413968,
  "history_end_time" : 1694633413968,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "44nbcsdty1w",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1694590211179,
  "history_end_time" : 1694590211179,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "w050psxbsas",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1694547015152,
  "history_end_time" : 1694547015152,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "bxlmx8yxkvn",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1694503812550,
  "history_end_time" : 1694503812550,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "nm1n1zdhijx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1694460611802,
  "history_end_time" : 1694460611802,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "5h619u57fi8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1694417412828,
  "history_end_time" : 1694417412828,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "y81we2bjaw9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1694374210710,
  "history_end_time" : 1694374210710,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ypga8z6ok81",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1694331014735,
  "history_end_time" : 1694331014735,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "vons9psz23m",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1694287810859,
  "history_end_time" : 1694287810859,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "zto4huyzknc",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1694244611797,
  "history_end_time" : 1694244611797,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "7st04e2in3b",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1694201411679,
  "history_end_time" : 1694201411679,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "38zebvxu33j",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1694158210567,
  "history_end_time" : 1694158210567,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "t7zcn94cq92",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1694115013545,
  "history_end_time" : 1694115013545,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "qhlja1f32gd",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1694071808767,
  "history_end_time" : 1694071808767,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "2onjcj4v937",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1694028612052,
  "history_end_time" : 1694028612052,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "rjns78lf0jf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1693985409172,
  "history_end_time" : 1693985409172,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "kdtuz28bom9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1693942213131,
  "history_end_time" : 1693942213131,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "zk0jz857ezu",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1693899009014,
  "history_end_time" : 1693899009014,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "l0jv56w5mqp",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1693855810142,
  "history_end_time" : 1693855810142,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "0x9kvty7ahl",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1693812610469,
  "history_end_time" : 1693812610469,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "0n03hbahttj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1693769410921,
  "history_end_time" : 1693769410921,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ghobp82ad4z",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1693726211056,
  "history_end_time" : 1693726211056,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "nfj7j8oraqw",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1693683010501,
  "history_end_time" : 1693683010501,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "zizuvn1bhqd",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1693639809186,
  "history_end_time" : 1693639809186,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "bzq7nbd9hq1",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1693596612002,
  "history_end_time" : 1693596612002,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "2u4hw6l79se",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1693553408430,
  "history_end_time" : 1693553408430,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "q7jbkx1qtxb",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1693510209210,
  "history_end_time" : 1693510209210,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "33bfbw6pqoa",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1693467008182,
  "history_end_time" : 1693467008182,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "vs20yqzik5t",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1693423808982,
  "history_end_time" : 1693423808982,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "wyczatiz001",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1693380607880,
  "history_end_time" : 1693380607880,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "p8qwvxn61wg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1693337410008,
  "history_end_time" : 1693337410008,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "tgxn7qibs3e",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1693294207422,
  "history_end_time" : 1693294207422,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "b8x567sdpq2",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1693251008513,
  "history_end_time" : 1693251008513,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "cc8e4y8odot",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1693207807280,
  "history_end_time" : 1693207807280,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "f9hbmvqyisn",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1693164609173,
  "history_end_time" : 1693164609173,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "25ifom1caoa",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1693121407921,
  "history_end_time" : 1693121407921,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "8y8olgc9xz9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1693078209400,
  "history_end_time" : 1693078209400,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "13laplit0ph",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1693035007575,
  "history_end_time" : 1693035007575,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "kdixqnj5o0j",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1692991816394,
  "history_end_time" : 1692991816394,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "9z3eg4y7kuu",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1692819005610,
  "history_end_time" : 1692819005610,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "e8lwjbe1np4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1692775808141,
  "history_end_time" : 1692775808141,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "z8bioo5g1bf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1692732606905,
  "history_end_time" : 1692732606905,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "19wsnfjir7t",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1692689407855,
  "history_end_time" : 1692689407855,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "xsazc8d60xw",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1692646207184,
  "history_end_time" : 1692646207184,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "51akyfjhf5u",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1692603008942,
  "history_end_time" : 1692603008942,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "n4tpwfubsz2",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1692559806740,
  "history_end_time" : 1692559806740,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "79f5e7mv9n4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1692516606848,
  "history_end_time" : 1692516606848,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "b7yd73429wo",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1692473408581,
  "history_end_time" : 1692473408581,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "kswv21ik7ov",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1692430208277,
  "history_end_time" : 1692430208277,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "94woq0qmf39",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1692387015172,
  "history_end_time" : 1692387015172,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "dljatdporro",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1692343814935,
  "history_end_time" : 1692343814935,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "m6mfstv4doo",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1692300610184,
  "history_end_time" : 1692300610184,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "oanh3ey0gmh",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1692257408869,
  "history_end_time" : 1692257408869,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ze01trnihdc",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1692214209008,
  "history_end_time" : 1692214209008,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "vlqpkwloyic",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1692171011123,
  "history_end_time" : 1692171011123,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ag34k08wpsk",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1692127809417,
  "history_end_time" : 1692127809417,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "oyavpttugwp",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1692084610158,
  "history_end_time" : 1692084610158,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "nctmquqlpzu",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1692041409611,
  "history_end_time" : 1692041409611,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "3x12t6u1qme",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691998209360,
  "history_end_time" : 1691998209360,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "vdhpayeidcv",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691955009913,
  "history_end_time" : 1691955009913,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "0qizw05xct6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691911815998,
  "history_end_time" : 1691911815998,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "toy5nc9jsp6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691868616413,
  "history_end_time" : 1691868616413,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "b6n1n8ae3yw",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691825409433,
  "history_end_time" : 1691825409433,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "7unwoxgk6q7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691782209011,
  "history_end_time" : 1691782209011,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "nksrzbvwdkd",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691739008071,
  "history_end_time" : 1691739008071,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "afm7t80lqss",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691695811416,
  "history_end_time" : 1691695811416,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "29z9jrxdzm4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691652611528,
  "history_end_time" : 1691652611528,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "4na8x03qu7l",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691609409547,
  "history_end_time" : 1691609409547,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "qvg3flek1kv",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691566211184,
  "history_end_time" : 1691566211184,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ejlm0cyl5eb",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691523013442,
  "history_end_time" : 1691523013442,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "0mhqs6aotzf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691479806771,
  "history_end_time" : 1691479806771,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "zi6bufut115",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691436609390,
  "history_end_time" : 1691436609390,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "8vwsgyu6o1y",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691393406998,
  "history_end_time" : 1691393406998,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "xtcri51phkk",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691350209144,
  "history_end_time" : 1691350209144,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "joasoxbxpvf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691307007564,
  "history_end_time" : 1691307007564,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "32apxkxq59x",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691263809911,
  "history_end_time" : 1691263809911,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "h8k9l2rvscd",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691220606241,
  "history_end_time" : 1691220606241,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "9eeknxrvf70",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691177408111,
  "history_end_time" : 1691177408111,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "off0716u1hn",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691134207233,
  "history_end_time" : 1691134207233,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "prli8x1zpc5",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691091008600,
  "history_end_time" : 1691091008600,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ly163ad5g8u",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691047821079,
  "history_end_time" : 1691047821079,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "46fhulpt9pp",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691004608638,
  "history_end_time" : 1691004608638,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "zqhy44og8zi",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1690961406375,
  "history_end_time" : 1690961406375,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "b9vhovl3qci",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1690918208291,
  "history_end_time" : 1690918208291,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "liss2m0ta8q",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1690875008730,
  "history_end_time" : 1690875008730,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "7cdi3xbnkc4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1690831808096,
  "history_end_time" : 1690831808096,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "i6xrv2tsa43",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1690788607044,
  "history_end_time" : 1690788607044,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "jzcrwlxz7fx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1690745408451,
  "history_end_time" : 1690745408451,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "2smcgucpbvf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1690702208943,
  "history_end_time" : 1690702208943,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "uhdue1llbd2",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1690659010577,
  "history_end_time" : 1690659010577,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "6k9ei652s3z",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1690615808428,
  "history_end_time" : 1690615808428,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "w6jzcsie2oy",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1690572609666,
  "history_end_time" : 1690572609666,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "rv69xz3xbdv",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1690529409039,
  "history_end_time" : 1690529409039,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "tgg7vimxwj6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1690486210479,
  "history_end_time" : 1690486210479,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "q50sunl6x7g",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1690443009788,
  "history_end_time" : 1690443009788,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "andxuff0ibi",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1690399811504,
  "history_end_time" : 1690399811504,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "j544w866h6i",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1690356608756,
  "history_end_time" : 1690356608756,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "a7prmpkb4mb",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1690313409095,
  "history_end_time" : 1690313409095,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "264mmmw1wge",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1690270210105,
  "history_end_time" : 1690270210105,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "5as58t8445m",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1690227009153,
  "history_end_time" : 1690227009153,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "15x9givcigs",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1690183809886,
  "history_end_time" : 1690183809886,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "49vrak3txb6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1690140608771,
  "history_end_time" : 1690140608771,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "hz6v7g5utl2",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1690097409368,
  "history_end_time" : 1690097409368,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "xxazgekr26h",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1690054208613,
  "history_end_time" : 1690054208613,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "2vd058ee6as",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1690011009135,
  "history_end_time" : 1690011009135,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "azby0lc3wdv",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1689967809235,
  "history_end_time" : 1689967809235,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "zz82f1sfjhf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1689924609196,
  "history_end_time" : 1689924609196,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "i35irld457j",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1689881408296,
  "history_end_time" : 1689881408296,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "j1103wblgrf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1689838207711,
  "history_end_time" : 1689838207711,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "rk6auvf41nu",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1689795008524,
  "history_end_time" : 1689795008524,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "dxxvndijbnz",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1689751809831,
  "history_end_time" : 1689751809831,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "c0a3tbjou4x",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1689708609761,
  "history_end_time" : 1689708609761,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "99tfzd26cqd",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1689665409071,
  "history_end_time" : 1689665409071,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "z0oqjgooq18",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1689622209011,
  "history_end_time" : 1689622209011,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "y28u51ygf51",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1689579008428,
  "history_end_time" : 1689579008428,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "5vw79qv70i3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1689535808735,
  "history_end_time" : 1689535808735,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "7xbfbimcoj6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1689492608749,
  "history_end_time" : 1689492608749,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "cui11iwx9z1",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1689449408918,
  "history_end_time" : 1689449408918,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "l9tgluu9989",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1689406209544,
  "history_end_time" : 1689406209544,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "61yjwadg1hu",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1689363009410,
  "history_end_time" : 1689363009410,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "87r8rvz1pn0",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1689319809644,
  "history_end_time" : 1689319809644,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "wv2tsha7jdd",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1689276610089,
  "history_end_time" : 1689276610089,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "mqt4itnifxb",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1689233408952,
  "history_end_time" : 1689233408952,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "6yl37j2y7li",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1689190208724,
  "history_end_time" : 1689190208724,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "rsl4jo6apo3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1689147007450,
  "history_end_time" : 1689147007450,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "yvwd0bcyxfh",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1689103807631,
  "history_end_time" : 1689103807631,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "jm2pdo15wd4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1689060608178,
  "history_end_time" : 1689060608178,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "qmmj0lb6vhe",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1689017408316,
  "history_end_time" : 1689017408316,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "nyn019e0iag",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1688974208520,
  "history_end_time" : 1688974208520,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "a8b173mq0fm",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1688931007728,
  "history_end_time" : 1688931007728,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "uj23jcksxav",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1688887807238,
  "history_end_time" : 1688887807238,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "nd3j2r5smrk",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1688844607190,
  "history_end_time" : 1688844607190,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "hwu0e9ao5be",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1688801408596,
  "history_end_time" : 1688801408596,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "0wesu51n9aa",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1688758208059,
  "history_end_time" : 1688758208059,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "emg89od9gq3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1688715008930,
  "history_end_time" : 1688715008930,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "nlqzt86kplk",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1688671808688,
  "history_end_time" : 1688671808688,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ee11z96qhk8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1688628606554,
  "history_end_time" : 1688628606554,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "xhg2cuthw4b",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1688585407910,
  "history_end_time" : 1688585407910,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "aaoabr72cgi",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1688542208325,
  "history_end_time" : 1688542208325,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "xv1453jmekf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1688499007212,
  "history_end_time" : 1688499007212,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "64my9le2jkv",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1688455808888,
  "history_end_time" : 1688455808888,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ow6t0rvbsys",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1688412608005,
  "history_end_time" : 1688412608005,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "7bv1607w8fl",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1688369407359,
  "history_end_time" : 1688369407359,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "4iph6z5okle",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1688326208519,
  "history_end_time" : 1688326208519,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "rjfkarlvcrn",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1688283009590,
  "history_end_time" : 1688283009590,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "5yut2rx5z5z",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1688239817168,
  "history_end_time" : 1688239817168,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "vd7ns1kf2jl",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1688196608832,
  "history_end_time" : 1688196608832,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "w7icxv1i7my",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1688153408471,
  "history_end_time" : 1688153408471,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "2l88ijzt7x9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1688110207895,
  "history_end_time" : 1688110207895,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "a5rxlw4ipu2",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1688067007898,
  "history_end_time" : 1688067007898,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "mjjnc3kwgaq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1688023806775,
  "history_end_time" : 1688023806775,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "d8xcomvx6rs",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1687980609268,
  "history_end_time" : 1687980609268,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "nt6bsugz13v",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1687937407342,
  "history_end_time" : 1687937407342,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ykknvqr7980",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1687894208611,
  "history_end_time" : 1687894208611,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "2j8g52a7b6l",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1687851007427,
  "history_end_time" : 1687851007427,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "vjn9pwprl1c",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1687807810161,
  "history_end_time" : 1687807810161,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "a6aihhtlpg6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1687764608175,
  "history_end_time" : 1687764608175,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "cnyaoxjx413",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1687721408148,
  "history_end_time" : 1687721408148,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "qit5if1fm2v",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1687678206295,
  "history_end_time" : 1687678206295,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "sdj7a630lyg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1687635008686,
  "history_end_time" : 1687635008686,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "o1i168jsouq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1687591805486,
  "history_end_time" : 1687591805486,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "c61it257rtw",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1687548608429,
  "history_end_time" : 1687548608429,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "j1g0yq6zfn7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1687505408297,
  "history_end_time" : 1687505408297,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "0obc9nc07o4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1687462215564,
  "history_end_time" : 1687462215564,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "1i1x8jz7a15",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1687419006269,
  "history_end_time" : 1687419006269,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "6tot1k8ttdf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1687375808593,
  "history_end_time" : 1687375808593,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "nxuhptqessq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1687332606939,
  "history_end_time" : 1687332606939,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "0jfi3ayhoge",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1687289408894,
  "history_end_time" : 1687289408894,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "oeih051s2f4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1687246206147,
  "history_end_time" : 1687246206147,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "a875jqat9n1",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1687203018777,
  "history_end_time" : 1687203018777,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "6q1wvr0n3iq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1687159806986,
  "history_end_time" : 1687159806986,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "h2rkhieng7h",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1687116608266,
  "history_end_time" : 1687116608266,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "6tfk4fno4h3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1687073406860,
  "history_end_time" : 1687073406860,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "glaozimx7ed",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1687030207945,
  "history_end_time" : 1687030207945,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "zsababbcjiy",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1686987006964,
  "history_end_time" : 1686987006964,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "qw9xkpx0qdf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1686943807886,
  "history_end_time" : 1686943807886,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ba6dlxyxys6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1686900606105,
  "history_end_time" : 1686900606105,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "jt1ll78dpws",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1686857408647,
  "history_end_time" : 1686857408647,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "z8tcy76fy3w",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1686814206689,
  "history_end_time" : 1686814206689,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "0tvpzgtkum5",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1686771009188,
  "history_end_time" : 1686771009188,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "kvsb2fpndlw",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1686727806670,
  "history_end_time" : 1686727806670,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "klbpifhyqe3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1686684611609,
  "history_end_time" : 1686684611609,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "q8uru7rymfz",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1686641406198,
  "history_end_time" : 1686641406198,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "mi3u83g9rpm",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1686598208012,
  "history_end_time" : 1686598208012,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "unb0q9n0h2q",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1686555006020,
  "history_end_time" : 1686555006020,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "x1hrt2kp813",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1686511807344,
  "history_end_time" : 1686511807344,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ybk1uodxi7e",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1686468606082,
  "history_end_time" : 1686468606082,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "yddq88rlkg1",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1686425407492,
  "history_end_time" : 1686425407492,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "vryfgdq0x47",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1686382207270,
  "history_end_time" : 1686382207270,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "7w5swiozlea",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1686339008640,
  "history_end_time" : 1686339008640,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "xe0wsk5t14n",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1686295808087,
  "history_end_time" : 1686295808087,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "1tq326rpwws",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1686252606393,
  "history_end_time" : 1686252606393,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "eua477cqq6f",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1686234279220,
  "history_end_time" : 1686234279220,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "aqt8fv",
  "indicator" : "Skipped"
},{
  "history_id" : "9tu4yr7d8h7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1686209407846,
  "history_end_time" : 1686209407846,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "gfc29njk7he",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1686166208889,
  "history_end_time" : 1686166208889,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "spnhegwxsl4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1686123012992,
  "history_end_time" : 1686123012992,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ymi02m4lej9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1686079807842,
  "history_end_time" : 1686079807842,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "21f8og7omwp",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1686036608452,
  "history_end_time" : 1686036608452,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "dslqz978ivr",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1685993408891,
  "history_end_time" : 1685993408891,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "0lrs1vb0wx5",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1685950205986,
  "history_end_time" : 1685950205986,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "rpc2rrsvhbg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1685907008152,
  "history_end_time" : 1685907008152,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "fxjdkcrvam6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1685863807738,
  "history_end_time" : 1685863807738,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "rulezchpyia",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1685820608363,
  "history_end_time" : 1685820608363,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "frl76xbm9b6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1685777408021,
  "history_end_time" : 1685777408021,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "e6jzkcr8093",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1685734208256,
  "history_end_time" : 1685734208256,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "fp9nx2y34jg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1685691009027,
  "history_end_time" : 1685691009027,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "6ts0wf9ouqf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1685647809071,
  "history_end_time" : 1685647809071,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "oisb9ra7j8b",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1685604609381,
  "history_end_time" : 1685604609381,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ou5he54rsn9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1685561421297,
  "history_end_time" : 1685561421297,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "2b83lkjwk3s",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1685518208379,
  "history_end_time" : 1685518208379,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "g03s7ee0lr0",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1685475008662,
  "history_end_time" : 1685475008662,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ccfoxyz42vr",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1685431806475,
  "history_end_time" : 1685431806475,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "7h6db2xsvin",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1685388610399,
  "history_end_time" : 1685388610399,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ie9tao5yp87",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1685345407572,
  "history_end_time" : 1685345407572,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "rdjqmohq5gy",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1685302207004,
  "history_end_time" : 1685302207004,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "2kqjckfpfn4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1685259007104,
  "history_end_time" : 1685259007104,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ewsawr8tnqs",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1685215808114,
  "history_end_time" : 1685215808114,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ny3ubi2xqwg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1685172607509,
  "history_end_time" : 1685172607509,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "wep7c9awfx1",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1685129411257,
  "history_end_time" : 1685129411257,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "0gf2pkcskq1",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1685086207991,
  "history_end_time" : 1685086207991,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "uvdbfm750cz",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1685043008954,
  "history_end_time" : 1685043008954,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "0u33dtdfi6x",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1684999808218,
  "history_end_time" : 1684999808218,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "lncr4a2u9rd",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1684956608910,
  "history_end_time" : 1684956608910,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "7ka09c3ntd0",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1684913406895,
  "history_end_time" : 1684913406895,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "aberav2xfpx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1684870209886,
  "history_end_time" : 1684870209886,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "2avmdtybhif",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1684827008023,
  "history_end_time" : 1684827008023,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ucwotgpgx4c",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1684783811295,
  "history_end_time" : 1684783811295,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ju6xnlidcbv",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1684740607884,
  "history_end_time" : 1684740607884,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "mi9q95jczn3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1684697408124,
  "history_end_time" : 1684697408124,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "r15a2t0mrhu",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1684654208420,
  "history_end_time" : 1684654208420,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "733t4io2gi3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1684611008271,
  "history_end_time" : 1684611008271,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "n1b7qei3q59",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1684567807968,
  "history_end_time" : 1684567807968,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "aiib50dgmc1",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1684524610335,
  "history_end_time" : 1684524610335,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "g7ofthbhgm0",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1684481408289,
  "history_end_time" : 1684481408289,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "wtgtswsnvbn",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1684438208800,
  "history_end_time" : 1684438208800,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "h78gxguow4c",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1684395009387,
  "history_end_time" : 1684395009387,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "o3fqplx15i2",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1684351808819,
  "history_end_time" : 1684351808819,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ovtmxxcpgea",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1684308608255,
  "history_end_time" : 1684308608255,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ii624czyxxf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1684265409050,
  "history_end_time" : 1684265409050,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "a6ius4b3mju",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1684222209074,
  "history_end_time" : 1684222209074,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "0zx3dfiq3l9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1684179009174,
  "history_end_time" : 1684179009174,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ekju7c60tks",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1684135806728,
  "history_end_time" : 1684135806728,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "s5f3v9uxdf1",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1684092609189,
  "history_end_time" : 1684092609189,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "psererxi34k",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1684049408525,
  "history_end_time" : 1684049408525,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "iw1ijs269ph",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1684006208533,
  "history_end_time" : 1684006208533,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "2fskp7i9bff",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1683963008139,
  "history_end_time" : 1683963008139,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "9zldiqb431c",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1683919812760,
  "history_end_time" : 1683919812760,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "xy5f58qpfwa",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1683876609263,
  "history_end_time" : 1683876609263,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "3msj68pieba",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1683833409520,
  "history_end_time" : 1683833409520,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "quucc01xkhn",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1683790209461,
  "history_end_time" : 1683790209461,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "97mxox6nzo0",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1683747010276,
  "history_end_time" : 1683747010276,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ux6ofpa539v",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1683703813305,
  "history_end_time" : 1683703813305,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "f7ecqa1qqvb",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1683660608627,
  "history_end_time" : 1683660608627,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "m5ahdk11j5t",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1683617408815,
  "history_end_time" : 1683617408815,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "v68p5a0ccd7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1683574208341,
  "history_end_time" : 1683574208341,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "fj8laz2dfe8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1683531006719,
  "history_end_time" : 1683531006719,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "1dh28ih261q",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1683487808352,
  "history_end_time" : 1683487808352,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "zumpnpd81wk",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1683444608160,
  "history_end_time" : 1683444608160,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "jpp0we67pd2",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1683401407968,
  "history_end_time" : 1683401407968,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "mh8sc2i4qgi",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1683358208012,
  "history_end_time" : 1683358208012,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ou2iclw8btq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1683315009151,
  "history_end_time" : 1683315009151,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "axixnd018o9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1683271808508,
  "history_end_time" : 1683271808508,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "d76bvtrs8lu",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1683228608128,
  "history_end_time" : 1683228608128,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "a8a940nd125",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1683185409287,
  "history_end_time" : 1683185409287,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "l9f07h3ymeu",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1683142208356,
  "history_end_time" : 1683142208356,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "d73wl0jvyxy",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1683099007380,
  "history_end_time" : 1683099007380,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "dguikifv2r9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1683055809545,
  "history_end_time" : 1683055809545,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "tep74o262dg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1683012608388,
  "history_end_time" : 1683012608388,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "h0up73jno3t",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1682969409025,
  "history_end_time" : 1682969409025,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "zqmoh9ez618",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1682926208917,
  "history_end_time" : 1682926208917,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "6w8hyro08hq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1682883008417,
  "history_end_time" : 1682883008417,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "bo73bhqkmi3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1682839806725,
  "history_end_time" : 1682839806725,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "4t3qbhlvkiu",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1682796608715,
  "history_end_time" : 1682796608715,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "syt91jy90dy",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1682753408368,
  "history_end_time" : 1682753408368,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "7uszporxok0",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1682710208145,
  "history_end_time" : 1682710208145,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "pne78f502mb",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1682667009029,
  "history_end_time" : 1682667009029,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "3s89np0tdmx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1682623810166,
  "history_end_time" : 1682623810166,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "qhg4xwjzkt8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1682580608254,
  "history_end_time" : 1682580608254,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "tgo895theb2",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1682537408598,
  "history_end_time" : 1682537408598,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "23clpht2d2b",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1682494208659,
  "history_end_time" : 1682494208659,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "2indy0laugd",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1682451010594,
  "history_end_time" : 1682451010594,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "t78bqk79ygj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1682407809264,
  "history_end_time" : 1682407809264,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "fx8ph5pz00r",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1682364611722,
  "history_end_time" : 1682364611722,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "p35gvgy4w6l",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1682321408689,
  "history_end_time" : 1682321408689,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "2beboi3b24i",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1682278207924,
  "history_end_time" : 1682278207924,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "1gki1rvk3ak",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1682235009870,
  "history_end_time" : 1682235009870,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ufx746su7pe",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1682191808728,
  "history_end_time" : 1682191808728,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "yx1bfmfv7pa",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1682148608547,
  "history_end_time" : 1682148608547,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "q95x7uuplto",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1682105407439,
  "history_end_time" : 1682105407439,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "fojmtscejnc",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1682062207831,
  "history_end_time" : 1682062207831,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "t6296qwjivl",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1682019008396,
  "history_end_time" : 1682019008396,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "js37rsc9lmy",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1681975808321,
  "history_end_time" : 1681975808321,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "eeqx0mfupqo",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1681932608200,
  "history_end_time" : 1681932608200,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "tfp3vm5kg5w",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1681889409015,
  "history_end_time" : 1681889409015,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "9y9tra1k4ll",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1681846208901,
  "history_end_time" : 1681846208901,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "v13kzxkwvm5",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1681803007950,
  "history_end_time" : 1681803007950,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "hio9wl5abgp",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1681759808389,
  "history_end_time" : 1681759808389,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "hluho39l0in",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1681716605926,
  "history_end_time" : 1681716605926,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "x2y3qv44tw0",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1681673407188,
  "history_end_time" : 1681673407188,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "07l5nk8e62a",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1681630207363,
  "history_end_time" : 1681630207363,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "0ojj2q5ho5j",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1681587008686,
  "history_end_time" : 1681587008686,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "9mckk497smu",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1681543808144,
  "history_end_time" : 1681543808144,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "a5x59ss2yw2",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1681500608576,
  "history_end_time" : 1681500608576,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "m1dv6mx9d4v",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1681457408875,
  "history_end_time" : 1681457408875,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "c8hbp7ej1tc",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1681414208855,
  "history_end_time" : 1681414208855,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "a03pkaa53bv",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1681371008413,
  "history_end_time" : 1681371008413,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "qv6vvj1bsqf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1681327808950,
  "history_end_time" : 1681327808950,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "bhqn9hahclj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1681284608429,
  "history_end_time" : 1681284608429,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "pca11932pl7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1681241411598,
  "history_end_time" : 1681241411598,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "u0khp9m1pyd",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1681198209308,
  "history_end_time" : 1681198209308,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "aenuqb4uun5",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1681155008135,
  "history_end_time" : 1681155008135,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ucqgi5qr6ch",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1681111808567,
  "history_end_time" : 1681111808567,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "rvllynryf1z",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1681068607319,
  "history_end_time" : 1681068607319,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "g9fua9o3rhq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1681025408948,
  "history_end_time" : 1681025408948,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "dblg495yngz",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1680982208444,
  "history_end_time" : 1680982208444,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "y3zvmj5wgte",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1680939009072,
  "history_end_time" : 1680939009072,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "0yh6wd877sm",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1680895811648,
  "history_end_time" : 1680895811648,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "23t8ovfh825",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1680852608610,
  "history_end_time" : 1680852608610,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "atweriy0m1o",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1680809408069,
  "history_end_time" : 1680809408069,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "0ln3xtu5lq9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1680766211391,
  "history_end_time" : 1680766211391,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "aytwwxe3epe",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1680723008322,
  "history_end_time" : 1680723008322,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "xrpav1f6mw5",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1680679808778,
  "history_end_time" : 1680679808778,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "f53j7i4mk7w",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1680636608160,
  "history_end_time" : 1680636608160,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "xqjpqmk3hvm",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1680593406980,
  "history_end_time" : 1680593406980,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "bd6etizlqf3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1680550209005,
  "history_end_time" : 1680550209005,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "z25y89zmuxk",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1680507264583,
  "history_end_time" : 1680507264583,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "oth2raf3hg5",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1680463808120,
  "history_end_time" : 1680463808120,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "s5ux5t53a63",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1680420608330,
  "history_end_time" : 1680420608330,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "9goowj31lbx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1680377409827,
  "history_end_time" : 1680377409827,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "wc0zadix8ce",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1680334209266,
  "history_end_time" : 1680334209266,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "re5i5debrmm",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1680291008382,
  "history_end_time" : 1680291008382,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "e5uf6g8znfq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1680247809420,
  "history_end_time" : 1680247809420,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "89rm0azl2wf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1680204610806,
  "history_end_time" : 1680204610806,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "fsd26cb94zh",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1680161408414,
  "history_end_time" : 1680161408414,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "u4caka39hd3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1680118212491,
  "history_end_time" : 1680118212491,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "p1aqel6w0tj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1680075010326,
  "history_end_time" : 1680075010326,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "nivc3vvtr5v",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1680031810908,
  "history_end_time" : 1680031810908,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "5z2mx6sz1fz",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1679988608817,
  "history_end_time" : 1679988608817,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "8dw39c0ed0s",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1679945409637,
  "history_end_time" : 1679945409637,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "kyxbxrmr14k",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1679902210779,
  "history_end_time" : 1679902210779,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "8gobgsohqp9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1679859008516,
  "history_end_time" : 1679859008516,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "x6trkm8sb77",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1679815807011,
  "history_end_time" : 1679815807011,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "4lb54phjsip",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1679772612496,
  "history_end_time" : 1679772612496,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "npivbdnv62j",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1679729406744,
  "history_end_time" : 1679729406744,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ub9vcuafrpg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1679686211194,
  "history_end_time" : 1679686211194,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "53cp7ag63qc",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1679643008588,
  "history_end_time" : 1679643008588,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "xq3l2k04iko",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1679599808693,
  "history_end_time" : 1679599808693,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "v8cgfvomy6h",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1679556609736,
  "history_end_time" : 1679556609736,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "2f0y641n9r0",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1679513409333,
  "history_end_time" : 1679513409333,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "8vrt9ch16um",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1679470211762,
  "history_end_time" : 1679470211762,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "2w66flzwixs",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1679427008574,
  "history_end_time" : 1679427008574,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "7b8skswa2hd",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1679383811313,
  "history_end_time" : 1679383811313,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "lqirhyuruv5",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1679340608726,
  "history_end_time" : 1679340608726,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "wrvnn33j5o7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1679297411982,
  "history_end_time" : 1679297411982,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "3yz0mwstxp1",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1679254208052,
  "history_end_time" : 1679254208052,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "y371yepu371",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1679211011430,
  "history_end_time" : 1679211011430,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "sdq5ep306a2",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1679167809048,
  "history_end_time" : 1679167809048,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "g5870cjg52y",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1679124610711,
  "history_end_time" : 1679124610711,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "x05l2rgc0hf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1679081408972,
  "history_end_time" : 1679081408972,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "be6hfczuucp",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1679038208910,
  "history_end_time" : 1679038208910,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "sx9k6lwo0lm",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678995009663,
  "history_end_time" : 1678995009663,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "dq4e4kmehtp",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678951810147,
  "history_end_time" : 1678951810147,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "srszsbrn86u",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678941905824,
  "history_end_time" : 1678941905824,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "aqt8fv",
  "indicator" : "Skipped"
},{
  "history_id" : "0dh4fzynkbu",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678939928024,
  "history_end_time" : 1678939928024,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "aqt8fv",
  "indicator" : "Skipped"
},{
  "history_id" : "tdlmd737juv",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678908611881,
  "history_end_time" : 1678908611881,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "or38kb9mz5x",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678822341695,
  "history_end_time" : 1678822341695,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "et6vxwn8roc",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678779280133,
  "history_end_time" : 1678779280133,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "b2cofz8o8o4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678692854263,
  "history_end_time" : 1678692854263,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "2kvvq67mx4l",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678650413721,
  "history_end_time" : 1678650413721,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "eok6hw639v1",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678608050123,
  "history_end_time" : 1678608050123,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "5hr4b4rzksp",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678566737036,
  "history_end_time" : 1678566737036,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ldx3ehx8mto",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678523584562,
  "history_end_time" : 1678523584562,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "5pgmpowxfa3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678480338166,
  "history_end_time" : 1678480338166,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "zw2yf5zstlr",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678437180233,
  "history_end_time" : 1678437180233,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "lpgsdg3c1oo",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678393940361,
  "history_end_time" : 1678393940361,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "1o9tx4fn9pl",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678350781260,
  "history_end_time" : 1678350781260,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "klm837azo75",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678307537362,
  "history_end_time" : 1678307537362,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "vkpmvoznk0c",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678264380622,
  "history_end_time" : 1678264380622,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ygcil0pcb8l",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678221134345,
  "history_end_time" : 1678221134345,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "3jfzd1t8qnx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678177975754,
  "history_end_time" : 1678177975754,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "3nzr5r6qmdr",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678134738661,
  "history_end_time" : 1678134738661,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "xh45wr54xj1",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678091575899,
  "history_end_time" : 1678091575899,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "4u7ts5r4t2q",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678048333750,
  "history_end_time" : 1678048333750,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "55qxuuj190l",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678005299154,
  "history_end_time" : 1678005299154,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "540ghfmm9v9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677961935075,
  "history_end_time" : 1677961935075,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "det9tlrt2i8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677918805506,
  "history_end_time" : 1677918805506,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "orfo3jl0tv0",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677875544746,
  "history_end_time" : 1677875544746,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "xk6pa7jw3u7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677832380817,
  "history_end_time" : 1677832380817,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "fkug2xsmtwv",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677789143630,
  "history_end_time" : 1677789143630,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "uyssu4lcy8r",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677745982564,
  "history_end_time" : 1677745982564,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ygqwm9rln3e",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677702743649,
  "history_end_time" : 1677702743649,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "fku4xm99x79",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677659572257,
  "history_end_time" : 1677659572257,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "xd6kjdjjaif",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677616493712,
  "history_end_time" : 1677616493712,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "t0jvnc57yyo",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677573171533,
  "history_end_time" : 1677573171533,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "bcvkrj72j0s",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677530697299,
  "history_end_time" : 1677530697299,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ziieeeinezx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677486780064,
  "history_end_time" : 1677486780064,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "nd4wy9xs95b",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677443536141,
  "history_end_time" : 1677443536141,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "uuh3vlxq1fh",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677400368371,
  "history_end_time" : 1677400368371,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "nmyka0k422h",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677357138604,
  "history_end_time" : 1677357138604,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "424f9i0t5kk",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677313969554,
  "history_end_time" : 1677313969554,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "iwh7urpuxxh",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677270742359,
  "history_end_time" : 1677270742359,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "6vm8opjl05x",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677227584954,
  "history_end_time" : 1677227584954,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "0bu2wl9voeg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677184352194,
  "history_end_time" : 1677184352194,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "sv6vvpzb2sa",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677141232717,
  "history_end_time" : 1677141232717,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "pbm73izfjtj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677097939971,
  "history_end_time" : 1677097939971,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "2tvr21rflys",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677054811687,
  "history_end_time" : 1677054811687,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "qmt1aujhvju",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677011544164,
  "history_end_time" : 1677011544164,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ky5k2k8pzsr",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1676968381986,
  "history_end_time" : 1676968381986,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "jqp5b5e6ix3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1676925146586,
  "history_end_time" : 1676925146586,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "qu0sh6mdknl",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1676882014433,
  "history_end_time" : 1676882014433,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "5dlsheqmoiy",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1676838738165,
  "history_end_time" : 1676838738165,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "4dwrbkuwxso",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1676795583397,
  "history_end_time" : 1676795583397,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "0h004wkjz6q",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1676752335375,
  "history_end_time" : 1676752335375,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "r1t4d114jmr",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1676709187183,
  "history_end_time" : 1676709187183,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ma9u4jcsav8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1676666159100,
  "history_end_time" : 1676666159100,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "sxgkufkrdp8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1676622829311,
  "history_end_time" : 1676622829311,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "4qcq3311vro",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1676579540705,
  "history_end_time" : 1676579540705,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "rlux1vskfl8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1676536850431,
  "history_end_time" : 1676536850431,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "e3l38m2mc1b",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1676493144498,
  "history_end_time" : 1676493144498,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "vfj4f0q485g",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1676449986314,
  "history_end_time" : 1676449986314,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "0c0hb1mg8rr",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1676406753275,
  "history_end_time" : 1676406753275,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "uxmskb120hi",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1676363608074,
  "history_end_time" : 1676363608074,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "9002ejy2srt",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1676320356983,
  "history_end_time" : 1676320356983,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "1axdsgheemn",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1676277177432,
  "history_end_time" : 1676277177432,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "z08lghqqkvs",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1676233930983,
  "history_end_time" : 1676233930983,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "6xu98w2pi2n",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1676190763864,
  "history_end_time" : 1676190763864,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "jssamey4cw9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1676147520238,
  "history_end_time" : 1676147520238,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "35uqkf48m8i",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1676104377301,
  "history_end_time" : 1676104377301,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "13j5unvus2s",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1676061122738,
  "history_end_time" : 1676061122738,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "8emiu9jni1r",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1676017981448,
  "history_end_time" : 1676017981448,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "513kmm7xe7s",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1675975351127,
  "history_end_time" : 1675975351127,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "0raijvjer5q",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1675931569054,
  "history_end_time" : 1675931569054,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "pvw8ym6jb7c",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1675888392146,
  "history_end_time" : 1675888392146,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "i0hin7jek6e",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1675845182658,
  "history_end_time" : 1675845182658,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "3cexlojnscs",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1675825149869,
  "history_end_time" : 1675826081451,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "aqt8fv",
  "indicator" : "Stopped"
},{
  "history_id" : "dkrnmsboro3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1675801935004,
  "history_end_time" : 1675801935004,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "hvpufnd5l0k",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1675758933586,
  "history_end_time" : 1675758933586,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "prhfx2cgq9y",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1675715591779,
  "history_end_time" : 1675715591779,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "03sb0mtjj1p",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1675672397196,
  "history_end_time" : 1675672397196,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "k7q8fqxslhb",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1675629118293,
  "history_end_time" : 1675629118293,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "rti9t52zji1",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1675585917200,
  "history_end_time" : 1675585917200,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "r4oz2kek66h",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1675542713415,
  "history_end_time" : 1675542713415,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "tbhuvcpcbj3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1675506009724,
  "history_end_time" : 1675506009724,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "y9dsfk0dii7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1675456331349,
  "history_end_time" : 1675456331349,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "nsruxmivhdk",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1675413188435,
  "history_end_time" : 1675413188435,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "qo2pl9kp1ae",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1675369940229,
  "history_end_time" : 1675369940229,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "xwfum3hivqv",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1675326765626,
  "history_end_time" : 1675326765626,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ebvgxdii6ge",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1675283536955,
  "history_end_time" : 1675283536955,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "efm0c9ibysw",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1675240369359,
  "history_end_time" : 1675240369359,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "b4aipvx7nj0",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1675197131269,
  "history_end_time" : 1675197131269,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "4mpkdcbd0ct",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1675154004743,
  "history_end_time" : 1675154004743,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "bbplai15t4n",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1675110738800,
  "history_end_time" : 1675110738800,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "nzp9gos6xiq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1675067574753,
  "history_end_time" : 1675067574753,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "qx2d83rl667",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1675024334079,
  "history_end_time" : 1675024334079,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "4eajn4oxavs",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1674981162591,
  "history_end_time" : 1674981162591,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "64oaqh62qtt",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1674937936210,
  "history_end_time" : 1674937936210,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "jzh6zzu1ms3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1674894798577,
  "history_end_time" : 1674894798577,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "n2dupfnogrb",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1674851533391,
  "history_end_time" : 1674851533391,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "c9n2nnycrwq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1674808393312,
  "history_end_time" : 1674808393312,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "g2sjic11r2f",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1674765144719,
  "history_end_time" : 1674765144719,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "yav86q0264l",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1674721959112,
  "history_end_time" : 1674721959112,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "00wwk39tww6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1674678721330,
  "history_end_time" : 1674678721330,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "5710izdftde",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1674635590073,
  "history_end_time" : 1674635590073,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "w56gl5z69bu",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1674592314422,
  "history_end_time" : 1674592314422,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ij4woxlv896",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1674549161536,
  "history_end_time" : 1674549161536,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "93ek19kv4kd",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1674505918600,
  "history_end_time" : 1674505918600,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "iskormkncis",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1674462779715,
  "history_end_time" : 1674462779715,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "sjx9v54glb6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1674419516430,
  "history_end_time" : 1674419516430,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "bdeqjyfi4z7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1674376375229,
  "history_end_time" : 1674376375229,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "5xpn4x7i49i",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1674333116077,
  "history_end_time" : 1674333116077,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "5dmrr3866h6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1674289963719,
  "history_end_time" : 1674289963719,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "vqgs02vy8nx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1674246719056,
  "history_end_time" : 1674246719056,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "2qovht8riap",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1674203564915,
  "history_end_time" : 1674203564915,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "pdrfkc6e87f",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1674160331320,
  "history_end_time" : 1674160331320,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "4qodoy9tcif",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1674117168049,
  "history_end_time" : 1674117168049,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "xvcptxn57js",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1674073937648,
  "history_end_time" : 1674073937648,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "g48hjrlt999",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1674030755821,
  "history_end_time" : 1674030755821,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "jrwljmhb6jr",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1673987532487,
  "history_end_time" : 1673987532487,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "b0kcazs8bqe",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1673944374818,
  "history_end_time" : 1673944374818,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "66vu5u7s05r",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1673901125095,
  "history_end_time" : 1673901125095,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "2sg59fz7uv1",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1673857979293,
  "history_end_time" : 1673857979293,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "xusnsokobuo",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1673814720262,
  "history_end_time" : 1673814720262,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "nf92dqh92au",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1673771575497,
  "history_end_time" : 1673771575497,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "0hnkjze8yfz",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1673728321190,
  "history_end_time" : 1673728321190,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "qw43f3yodat",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1673685166365,
  "history_end_time" : 1673685166365,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "uqnc4p0jh1a",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1673641933807,
  "history_end_time" : 1673641933807,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "tdwoiymxxsl",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1673598800308,
  "history_end_time" : 1673598800308,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "7daldy71eh3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1673555528213,
  "history_end_time" : 1673555528213,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "r0p8no2hdn5",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1673512380047,
  "history_end_time" : 1673512380047,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "xh4wrz9c93p",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1673469124883,
  "history_end_time" : 1673469124883,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "lg0335ih3m0",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1673425987264,
  "history_end_time" : 1673425987264,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "c4r0gd6zio1",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1673382726164,
  "history_end_time" : 1673382726164,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "83gbwm1x4x1",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1673339582532,
  "history_end_time" : 1673339582532,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "w9t7echuotg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1673296322006,
  "history_end_time" : 1673296322006,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "mp0vico5kq3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1673253165863,
  "history_end_time" : 1673253165863,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "vcvom9pqbfu",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1673209923396,
  "history_end_time" : 1673209923396,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ingrl7tp5fj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1673166791631,
  "history_end_time" : 1673166791631,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "sl3dn2od5ym",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1673123520809,
  "history_end_time" : 1673123520809,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "42f95uirosq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1673080378353,
  "history_end_time" : 1673080378353,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "30u71qbgegh",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1673037127089,
  "history_end_time" : 1673037127089,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "8qigoy8b093",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1672993982189,
  "history_end_time" : 1672993982189,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "qpqyb6l3nd8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1672950735760,
  "history_end_time" : 1672950735760,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "jhq5829x72x",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1672907571195,
  "history_end_time" : 1672907571195,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "70uylmu7dd7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1672864330985,
  "history_end_time" : 1672864330985,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ii9on9bcuy0",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1672821186779,
  "history_end_time" : 1672821186779,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "go8yxt8q6yb",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1672777929527,
  "history_end_time" : 1672777929527,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "jp6rhe21jah",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1672734765138,
  "history_end_time" : 1672734765138,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "mcexm69owui",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1672691529237,
  "history_end_time" : 1672691529237,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "f7bu9drernc",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1672648376393,
  "history_end_time" : 1672648376393,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "vb3q3he8rv4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1672605136301,
  "history_end_time" : 1672605136301,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "djwcmgo4g1l",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1672562720557,
  "history_end_time" : 1672562720557,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "3df0ct0emmu",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1672518730273,
  "history_end_time" : 1672518730273,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "xb7tf41s7fo",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1672476007072,
  "history_end_time" : 1672476007072,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "kn7nln59vam",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1672432318437,
  "history_end_time" : 1672432318437,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "7hlgyeukrfp",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1672391128148,
  "history_end_time" : 1672391128148,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "apx1evhb0l2",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1672345942153,
  "history_end_time" : 1672345942153,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "hr4n3h7s0mr",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1672302807030,
  "history_end_time" : 1672302807030,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "1dmi6x841nz",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1672259543464,
  "history_end_time" : 1672259543464,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "5hblkdz2why",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1672217011811,
  "history_end_time" : 1672217011811,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "xzri9xyxx5l",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1672173742196,
  "history_end_time" : 1672173742196,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "8zfuynvouso",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1672130602372,
  "history_end_time" : 1672130602372,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ffr486bwrcg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1672086734135,
  "history_end_time" : 1672086734135,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "iwjmzuxtilg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1672043588068,
  "history_end_time" : 1672043588068,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "xktc5vxcud6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1672000329874,
  "history_end_time" : 1672000329874,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "fav9h341xsm",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1671957300653,
  "history_end_time" : 1671957300653,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ppeghvpbvjl",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1671913960285,
  "history_end_time" : 1671913960285,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "f1truuet5mu",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1671870900880,
  "history_end_time" : 1671870900880,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "dkkp1oewtee",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1671827534534,
  "history_end_time" : 1671827534534,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "s2mzq4ese4b",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1671784393254,
  "history_end_time" : 1671784393254,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "w41ndhh4k9w",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1671741133619,
  "history_end_time" : 1671741133619,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "j3pwl06d7i8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1671697976974,
  "history_end_time" : 1671697976974,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "3h97o56gmfi",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1671654731433,
  "history_end_time" : 1671654731433,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "8miic5m29fe",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1671611575635,
  "history_end_time" : 1671611575635,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "d0pxwk2wa4b",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1671568328939,
  "history_end_time" : 1671568328939,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "4b2s0713xxg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1671525181975,
  "history_end_time" : 1671525181975,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "n8ly5vhoryf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1671481925930,
  "history_end_time" : 1671481925930,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "bnxi8r78fk1",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1671395514522,
  "history_end_time" : 1671395514522,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "f6u6bk05ntm",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1671352376080,
  "history_end_time" : 1671352376080,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "aihnliqyow3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1671309127602,
  "history_end_time" : 1671309127602,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "9oitfxlja23",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1671265964199,
  "history_end_time" : 1671265964199,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "dzqnkovgx6o",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1671222728318,
  "history_end_time" : 1671222728318,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "mklfboakslb",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1671179569573,
  "history_end_time" : 1671179569573,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "vpysbbylmws",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1671136320352,
  "history_end_time" : 1671136320352,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "5qoqxvjmc67",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1671093174042,
  "history_end_time" : 1671093174042,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "4vueryi15z3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1671049921610,
  "history_end_time" : 1671049921610,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "r7ncrwfkpf9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1671006778541,
  "history_end_time" : 1671006778541,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "jwop6q3kpyy",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1670963530252,
  "history_end_time" : 1670963530252,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "kl8tu4477bx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1670920371397,
  "history_end_time" : 1670920371397,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "j1dys5jp8a2",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1670877123981,
  "history_end_time" : 1670877123981,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "o1in5zhjagm",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1670833969505,
  "history_end_time" : 1670833969505,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "wyery3msg9s",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1670790720221,
  "history_end_time" : 1670790720221,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "deme6x0nonk",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1670747561578,
  "history_end_time" : 1670747561578,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "6gxv5zv3erw",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1670704321364,
  "history_end_time" : 1670704321364,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "k9sxh6zk95p",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1670661177774,
  "history_end_time" : 1670661177774,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "oagd08q29xo",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1670617928333,
  "history_end_time" : 1670617928333,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "vkmz0f2on68",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1670574785992,
  "history_end_time" : 1670574785992,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "zx7wz00gfac",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1670531523161,
  "history_end_time" : 1670531523161,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "7uktgo9e4hk",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1670488361598,
  "history_end_time" : 1670488361598,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "cp2an2m6fqz",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1670445118197,
  "history_end_time" : 1670445118197,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "7mbwdefndyf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1670401967460,
  "history_end_time" : 1670401967460,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "qkaaow7nrus",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1670358733591,
  "history_end_time" : 1670358733591,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "eslp7rek7pv",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1670315637562,
  "history_end_time" : 1670315637562,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "jzx0d3cnvuc",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1670272333847,
  "history_end_time" : 1670272333847,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "wc8fign5w9m",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1670229159312,
  "history_end_time" : 1670229159312,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "tcffgizxbbw",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1670185947682,
  "history_end_time" : 1670185947682,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ke3qp43fx9d",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1670142775531,
  "history_end_time" : 1670142775531,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "i0231qcg3b4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1670099535687,
  "history_end_time" : 1670099535687,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "vt93j9fwkf7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1670056385343,
  "history_end_time" : 1670056385343,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "d5agbyi92uz",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1670013146664,
  "history_end_time" : 1670013146664,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "xpzq42w8yrw",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1669927693763,
  "history_end_time" : 1669927693763,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "s0jy2mnku8d",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1669884083628,
  "history_end_time" : 1669884083628,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "pax07h2dggr",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1669840341334,
  "history_end_time" : 1669840341334,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "2ghdkf1fkos",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1669797187976,
  "history_end_time" : 1669797187976,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "s2nw8ami139",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1669753952182,
  "history_end_time" : 1669753952182,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "4neyyw2i3lq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1669710787439,
  "history_end_time" : 1669710787439,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "cpl01fturit",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1669667539557,
  "history_end_time" : 1669667539557,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "7c319iegxqx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1669624380208,
  "history_end_time" : 1669624380208,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "hyyu6m62tew",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1669581140789,
  "history_end_time" : 1669581140789,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "mptl89locan",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1669537978982,
  "history_end_time" : 1669537978982,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "b5uvjsuvsqj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1669494898684,
  "history_end_time" : 1669494898684,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "jd860pv5qh8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1669451595311,
  "history_end_time" : 1669451595311,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "3xfsglpryov",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1669408322346,
  "history_end_time" : 1669408322346,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "y8pa4h7u08f",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1669365189222,
  "history_end_time" : 1669365189222,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "jinesk133e9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1669321928922,
  "history_end_time" : 1669321928922,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "gf1gb4qs867",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1669278794843,
  "history_end_time" : 1669278794843,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "6mqr9qqqyad",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1669235598123,
  "history_end_time" : 1669235598123,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "g8fytq02s92",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1669192375653,
  "history_end_time" : 1669192375653,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "9g20dbci1wc",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1669149137898,
  "history_end_time" : 1669149137898,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "7ukxgc5a0y1",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1669106022969,
  "history_end_time" : 1669106022969,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "onjvw5iaxfe",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1669062731795,
  "history_end_time" : 1669062731795,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "or1ufbifvmm",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1669019561399,
  "history_end_time" : 1669019561399,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "zmz28t34geh",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1668976327816,
  "history_end_time" : 1668976327816,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "6hqewzvnjie",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1668933167366,
  "history_end_time" : 1668933167366,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "utyz3796zv3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1668889929574,
  "history_end_time" : 1668889929574,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "j3wcj6qcivb",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1668880794140,
  "history_end_time" : 1668880794140,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "6o2l3eva7iw",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1668875254055,
  "history_end_time" : 1668875254055,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "j0m0ktubs7k",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1668874708289,
  "history_end_time" : 1668874708289,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "uld414a91ex",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1668846768808,
  "history_end_time" : 1668846768808,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "kig8mztmbqb",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1668803525827,
  "history_end_time" : 1668803525827,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "v6ctxh6pwbm",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1668760360301,
  "history_end_time" : 1668760360301,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "2j3aj8ndjne",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1668717141706,
  "history_end_time" : 1668717141706,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "zcn3msnf01h",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1668673964069,
  "history_end_time" : 1668673964069,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "o6p8ksgqy0y",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1668630733223,
  "history_end_time" : 1668630733223,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "p1b357hqi0q",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1668587538228,
  "history_end_time" : 1668587538228,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "dkynzvp80h4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1668544393040,
  "history_end_time" : 1668544393040,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "qgh7ik4quwm",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1668523454251,
  "history_end_time" : 1668523454251,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "r7dv6cxu0cj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1668501127520,
  "history_end_time" : 1668501127520,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "pq4k5qes5lo",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1668494654723,
  "history_end_time" : 1668494654723,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "uid5b0txqan",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1668494001511,
  "history_end_time" : 1668494001511,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "5k91ypmmn7a",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1668489995817,
  "history_end_time" : 1668489995817,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "wz0elzazguz",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1668488903221,
  "history_end_time" : 1668488903221,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "p1bc7x9q2ap",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1668457958550,
  "history_end_time" : 1668457958550,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "vrvfxw3imjy",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1668414794286,
  "history_end_time" : 1668414794286,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "bpd5b887r5w",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1668414748410,
  "history_end_time" : 1668414748410,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "g9mvs28yw4h",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1668393912744,
  "history_end_time" : 1668393912744,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ksmh8w1nn9v",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1668393588373,
  "history_end_time" : 1668393588373,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ruthcque21b",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1668392272045,
  "history_end_time" : 1668392272045,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "jq415j6nk9a",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1668371545476,
  "history_end_time" : 1668371545476,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "to7mstr1yqz",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1668328377128,
  "history_end_time" : 1668328377128,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "lhjw6bd9a0l",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1668328339677,
  "history_end_time" : 1668328339677,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ueaehslezrn",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1668320544916,
  "history_end_time" : 1668320544916,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "aqt8fv",
  "indicator" : "Skipped"
},{
  "history_id" : "vwxrcgv4832",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1668285139152,
  "history_end_time" : 1668285139152,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "bkhoqlcdj4h",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1668241974020,
  "history_end_time" : 1668241974020,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "5jmb3z0rnjy",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1668241942495,
  "history_end_time" : 1668241942495,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "tjy8ebpjedf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1668198740189,
  "history_end_time" : 1668198740189,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "fo4s1afp0ao",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1668158309817,
  "history_end_time" : 1668158309817,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "aqt8fv",
  "indicator" : "Skipped"
},{
  "history_id" : "wuojmeuy9cw",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1668158213555,
  "history_end_time" : 1668158291250,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "aqt8fv",
  "indicator" : "Stopped"
},{
  "history_id" : "w7512715iyo",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1668157835965,
  "history_end_time" : 1668158199059,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "aqt8fv",
  "indicator" : "Stopped"
},{
  "history_id" : "sofhcfm4u80",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1668157660579,
  "history_end_time" : 1668157816036,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "aqt8fv",
  "indicator" : "Stopped"
},{
  "history_id" : "gk6ritscher",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1668155584805,
  "history_end_time" : 1668155584805,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "jo95xhaz0sj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1668155562206,
  "history_end_time" : 1668155562206,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "h4ypy9n92dy",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1668112351697,
  "history_end_time" : 1668112351697,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "xgn2m0sktxm",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1668069186880,
  "history_end_time" : 1668069186880,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "11shpt6naq8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1668069143267,
  "history_end_time" : 1668069143267,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "o3p4bbixe9i",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1668025938601,
  "history_end_time" : 1668025938601,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "6eeie5y0mtn",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1667982777375,
  "history_end_time" : 1667982777375,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ujc4wkzfpu0",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1667982740725,
  "history_end_time" : 1667982740725,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "s8klayxxtrm",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1667939538486,
  "history_end_time" : 1667939538486,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "io5e1ax79ta",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1667925180738,
  "history_end_time" : 1667950923698,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "aqt8fv",
  "indicator" : "Stopped"
},{
  "history_id" : "4eciquhi9dt",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1667896383369,
  "history_end_time" : 1667896383369,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ubna3q2u7sm",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1667896336036,
  "history_end_time" : 1667896336036,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "igbs51kudho",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1667892171012,
  "history_end_time" : 1667892171012,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "aqt8fv",
  "indicator" : "Skipped"
},{
  "history_id" : "w1v4t8jloxs",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1667853145768,
  "history_end_time" : 1667853145768,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "n9of8nk4xmp",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1667809981025,
  "history_end_time" : 1667809981025,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "o83cu8dua2g",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1667809939845,
  "history_end_time" : 1667809939845,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "b1ylkiwzi2i",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1667766743568,
  "history_end_time" : 1667766743568,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "cy4c1fuentf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1667723576498,
  "history_end_time" : 1667723576498,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "c23fsfe81e5",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1667723539854,
  "history_end_time" : 1667723539854,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "yg7ll85ecmn",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1667676741904,
  "history_end_time" : 1667676741904,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ki6pat42fkj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1667633577976,
  "history_end_time" : 1667633577976,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "qvlm1me69ol",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1667633538011,
  "history_end_time" : 1667633538011,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "8med4gc939t",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1667590349856,
  "history_end_time" : 1667590349856,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "sdgcdva47fm",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1667547151063,
  "history_end_time" : 1667547151063,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "fiqzodpeag0",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1667547147601,
  "history_end_time" : 1667547147601,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ye6pt08bqxs",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1667503965922,
  "history_end_time" : 1667503965922,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "n8n4sln909k",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1667460796952,
  "history_end_time" : 1667460796952,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "uvwvk2s0g93",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1667460751126,
  "history_end_time" : 1667460751126,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "pfankcptazc",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1667417543277,
  "history_end_time" : 1667417543277,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "9ojz4c5ppys",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1667374392320,
  "history_end_time" : 1667374392320,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "865ho91sav3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1667374357882,
  "history_end_time" : 1667374357882,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "hooze8ogp18",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1667331153594,
  "history_end_time" : 1667331153594,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "8s6rxedlhaj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1667288001268,
  "history_end_time" : 1667288001268,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "83tz48smsr7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1667287944135,
  "history_end_time" : 1667287944135,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "123hf2rvm6c",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1667248996008,
  "history_end_time" : 1667248996008,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ocf8h2h3tl5",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1667210248378,
  "history_end_time" : 1667210248378,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "z1jciyatvs1",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1667210096276,
  "history_end_time" : 1667210096276,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "0ez60nzfr3y",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1667158340206,
  "history_end_time" : 1667158340206,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "xksqe9c3e6t",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1667115171140,
  "history_end_time" : 1667115171140,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "d73tls1caiv",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1667115147066,
  "history_end_time" : 1667115147066,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "1vgv370586v",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1667071946110,
  "history_end_time" : 1667071946110,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "hutrt549xc2",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1667028791825,
  "history_end_time" : 1667028791825,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "84vr5bxp6un",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1667028743087,
  "history_end_time" : 1667028743087,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "9tdwnsz1uhj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1666985551446,
  "history_end_time" : 1666985551446,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "5g6rwiozuyo",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1666942379955,
  "history_end_time" : 1666942379955,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "8zr0btctkic",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1666942348154,
  "history_end_time" : 1666942348154,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "7qc04z2m8c7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1666899140245,
  "history_end_time" : 1666899140245,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "z1e004uv4gp",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1666855977648,
  "history_end_time" : 1666855977648,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "kxnfpe1p6od",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1666855945771,
  "history_end_time" : 1666855945771,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "u6s28esnctl",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1666812744285,
  "history_end_time" : 1666812744285,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "iexrgy6bmui",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1666769577605,
  "history_end_time" : 1666769577605,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "vjc3tl3fwpz",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1666769543563,
  "history_end_time" : 1666769543563,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "sv79ujyru6m",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1666726781151,
  "history_end_time" : 1666726781151,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "vmg38t95qjd",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1666685317286,
  "history_end_time" : 1666685918671,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "aqt8fv",
  "indicator" : "Stopped"
},{
  "history_id" : "c1gc5pfhcr8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1666683154094,
  "history_end_time" : 1666683154094,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "s8sxbprm345",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1666682218473,
  "history_end_time" : 1666683406476,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "aqt8fv",
  "indicator" : "Stopped"
},{
  "history_id" : "qz29r17cb3h",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1666681701596,
  "history_end_time" : 1666681701596,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "aqt8fv",
  "indicator" : "Skipped"
},{
  "history_id" : "wni2oihrb0u",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1666681684443,
  "history_end_time" : 1667950920480,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "aqt8fv",
  "indicator" : "Stopped"
},{
  "history_id" : "hsfm4prlqja",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1666681592841,
  "history_end_time" : 1666681655024,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "aqt8fv",
  "indicator" : "Stopped"
},{
  "history_id" : "7f4u804c3cy",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1666678879110,
  "history_end_time" : 1666678879110,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "aqt8fv",
  "indicator" : "Skipped"
},{
  "history_id" : "voeijy2qlvg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1666639949855,
  "history_end_time" : 1666639949855,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "wyqzjh66j26",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1666596747776,
  "history_end_time" : 1666596747776,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "px48yi3lh2g",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1666576238783,
  "history_end_time" : 1666577006606,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "aqt8fv",
  "indicator" : "Stopped"
},{
  "history_id" : "py1izr70f6f",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1666553584601,
  "history_end_time" : 1666553584601,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "rmxsar9evv4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1666553421654,
  "history_end_time" : 1666553446561,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "aqt8fv",
  "indicator" : "Stopped"
},{
  "history_id" : "wgej0j9iaak",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1666542247436,
  "history_end_time" : 1666553383592,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "aqt8fv",
  "indicator" : "Stopped"
},{
  "history_id" : "0hbsdjgofpj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1666510444467,
  "history_end_time" : 1666510444467,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ac7h48cbj52",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1666424621369,
  "history_end_time" : 1666424621369,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "fm8fub315z4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1666386160650,
  "history_end_time" : 1666386160650,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "d9ru8jxiyty",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1666342783312,
  "history_end_time" : 1666342783312,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "bahmfv1augv",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1666294579620,
  "history_end_time" : 1666294579620,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "l6k9xmizn8a",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1666258170067,
  "history_end_time" : 1666258170067,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "lna09a6r4ro",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1666207940661,
  "history_end_time" : 1666207940661,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "b2zz2l6lodd",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1666164736206,
  "history_end_time" : 1666164736206,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "2cwf28jj2v2",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1666121538470,
  "history_end_time" : 1666121538470,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "o4e8c5uek05",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1666078347077,
  "history_end_time" : 1666078347077,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "e4ve9poj4f3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1666035140698,
  "history_end_time" : 1666035140698,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "0wylizwuo2n",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665991941824,
  "history_end_time" : 1665991941824,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ldnn1ovdym0",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665964650800,
  "history_end_time" : 1665964650800,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "f5lo77ddia3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665963670300,
  "history_end_time" : 1665963670300,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ysn6w8d9rag",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665962361827,
  "history_end_time" : 1665962361827,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "z237ubc1qn5",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665942665776,
  "history_end_time" : 1665942665776,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "1edyvpb7egu",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665942216100,
  "history_end_time" : 1665942216100,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "1zwfq6iyn5i",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665938877675,
  "history_end_time" : 1665938877675,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "fobulbv9rq6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665937968755,
  "history_end_time" : 1665937968755,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "z4eu82055lc",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665934797892,
  "history_end_time" : 1665935665907,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "aqt8fv",
  "indicator" : "Stopped"
},{
  "history_id" : "pya8ce9odin",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665932107414,
  "history_end_time" : 1665934029279,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "aqt8fv",
  "indicator" : "Stopped"
},{
  "history_id" : "lzd92z56twr",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665930832272,
  "history_end_time" : 1665930832272,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "aqt8fv",
  "indicator" : "Skipped"
},{
  "history_id" : "g75r3tf32dv",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665930614410,
  "history_end_time" : 1665930705189,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "aqt8fv",
  "indicator" : "Stopped"
},{
  "history_id" : "k8sdm66lezs",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665930050047,
  "history_end_time" : 1665930589617,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "aqt8fv",
  "indicator" : "Stopped"
},{
  "history_id" : "9dyxqc6srej",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665928489267,
  "history_end_time" : 1665928489267,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "aqt8fv",
  "indicator" : "Skipped"
},{
  "history_id" : "vrv2n95nra2",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665926308968,
  "history_end_time" : 1665926308968,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "aqt8fv",
  "indicator" : "Skipped"
},{
  "history_id" : "n0rrzkxuq5r",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665023826541,
  "history_end_time" : 1665032721238,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "6rhf30s4pw6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665021841877,
  "history_end_time" : 1665023784708,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "plpahtoophc",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665007808645,
  "history_end_time" : 1665007808645,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "aqt8fv",
  "indicator" : "Skipped"
},{
  "history_id" : "kftw6kt8i4v",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1664983201506,
  "history_end_time" : 1665009008625,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "aqt8fv",
  "indicator" : "Stopped"
},{
  "history_id" : "3e0qov4w2pl",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1664949775855,
  "history_end_time" : 1664949775855,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "aqt8fv",
  "indicator" : "Skipped"
},{
  "history_id" : "9hcncbnnron",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1664505829132,
  "history_end_time" : 1664505829132,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "aqt8fv",
  "indicator" : "Skipped"
},{
  "history_id" : "661220vskn5",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1664428239188,
  "history_end_time" : 1664428239188,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "aqt8fv",
  "indicator" : "Skipped"
},{
  "history_id" : "zv2ohd2t23d",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1664427014314,
  "history_end_time" : 1664427014314,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "aqt8fv",
  "indicator" : "Skipped"
},{
  "history_id" : "iozu3hdjgn9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1664426709292,
  "history_end_time" : 1664426992849,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "aqt8fv",
  "indicator" : "Stopped"
},{
  "history_id" : "JWFeeyrEqYOi",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation_one_year.csv\")\nobs['Latitude'] = obs['Latitude'].astype(float)\nobs['Longitude'] = obs['Longitude'].astype(float)\nobs['YYYYMMDDHH'] = obs['YYYYMMDDHH'].astype(str)\nprint(\"obs head: \", obs.columns, obs.head())\nref_stations=pd.read_csv(f\"{cmaq_folder}/updated_station_to_cell.csv\")\nref_stations = ref_stations.astype(float)\nprint(\"ref_stations head: \", ref_stations.columns, ref_stations.head())\n\nprint(\"obs shape: \", obs.shape)\nprint(\"ref_station shape: \", ref_stations.shape)\n\nchunksize = 10000\ncount = 0\nwith pd.read_csv(\"/groups/ESS3/aalnaim/cmaq/merged_cmaq_one_year.csv\", chunksize=chunksize) as reader:\n  for chunk in reader:\n    chunk = chunk[pd.to_numeric(chunk['Latitude'], errors='coerce').notnull()]\n    chunk = chunk[pd.to_numeric(chunk['Longitude'], errors='coerce').notnull()]\n    chunk['Latitude'] = chunk['Latitude'].astype(float)\n    chunk['Longitude'] = chunk['Longitude'].astype(float)\n    new_df = pd.merge(chunk,  ref_stations, how='left', left_on=['Latitude','Longitude'], right_on = ['Lat_cmaq','Lon_cmaq'])\n    new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\n    new_df['Lat_airnow'] = new_df['Lat_airnow'].astype(float)\n    new_df['Lon_airnow'] = new_df['Lon_airnow'].astype(float)\n    new_df['YYYYMMDDHH'] = new_df['YYYYMMDDHH'].astype(str)\n    chunk_final = pd.merge(new_df, obs, how='left', left_on=['Lat_airnow','Lon_airnow','YYYYMMDDHH'], right_on = ['Latitude','Longitude','YYYYMMDDHH'])\n    chunk_final['month'] = chunk_final['YYYYMMDDHH'].str[4:6]\n    chunk_final['day'] = chunk_final['YYYYMMDDHH'].str[6:8]\n    chunk_final['hours'] = chunk_final['YYYYMMDDHH'].str[8:10]\n    new_chunk_df=chunk_final.drop(['YYYYMMDDHH'],axis=1)\n    final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\n    #print(\"final_chunk_df\", final_chunk_df)\n    #count += 1\n    #if count == 10:\n    final_chunk_df.to_csv(f\"{cmaq_folder}/training_new_one_year_valid_test.csv\",mode='a',index=False)\n    break\n    \n    \nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/training_new_one_year_valid_test.csv\")\n\n\n",
  "history_output" : "obs head:  Index(['StationID', 'Latitude', 'Longitude', 'AirNOW_O3', 'YYYYMMDDHH'], dtype='object')    StationID   Latitude   Longitude  AirNOW_O3  YYYYMMDDHH\n0  483951076  31.168888  -96.481941     -999.0  2021080112\n1  080699991  40.277802 -105.545303     -999.0  2021080112\n2  530639995  47.808228 -117.343269     -999.0  2021080112\n3  530639997  47.663963 -117.257652     -999.0  2021080112\n4  530639996  47.660568 -117.084503     -999.0  2021080112\nref_stations head:  Index(['Lat_airnow', 'Lon_airnow', 'Lat_cmaq', 'Lon_cmaq'], dtype='object')    Lat_airnow  Lon_airnow   Lat_cmaq   Lon_cmaq\n0   31.169399  -81.496399  31.131332 -81.537930\n1   42.062199  -87.673599  42.088024 -87.710205\n2   39.758900  -86.397202  39.801613 -86.452760\n3   40.931396  -81.123520  40.971100 -81.189270\n4   43.435001  -88.527802  43.455270 -88.565704\nobs shape:  (15279463, 5)\nref_station shape:  (2833, 4)\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nAll records should be incorporated into : /groups/ESS/zsun/cmaq//training_new_one_year_valid_test.csv\n",
  "history_begin_time" : 1664134571151,
  "history_end_time" : 1664134644278,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "LO6XeP8l8i3T",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation_one_year.csv\")\nobs['Latitude'] = obs['Latitude'].astype(float)\nobs['Longitude'] = obs['Longitude'].astype(float)\nobs['YYYYMMDDHH'] = obs['YYYYMMDDHH'].astype(str)\nprint(\"obs head: \", obs.columns, obs.head())\nref_stations=pd.read_csv(f\"{cmaq_folder}/updated_station_to_cell.csv\")\nref_stations = ref_stations.astype(float)\nprint(\"ref_stations head: \", ref_stations.columns, ref_stations.head())\n\nprint(\"obs shape: \", obs.shape)\nprint(\"ref_station shape: \", ref_stations.shape)\n\nchunksize = 10000\ncount = 0\nwith pd.read_csv(\"/groups/ESS3/aalnaim/cmaq/merged_cmaq_one_year.csv\", chunksize=chunksize) as reader:\n  for chunk in reader:\n    chunk = chunk[pd.to_numeric(chunk['Latitude'], errors='coerce').notnull()]\n    chunk = chunk[pd.to_numeric(chunk['Longitude'], errors='coerce').notnull()]\n    chunk['Latitude'] = chunk['Latitude'].astype(float)\n    chunk['Longitude'] = chunk['Longitude'].astype(float)\n    new_df = pd.merge(chunk,  ref_stations, how='left', left_on=['Latitude','Longitude'], right_on = ['Lat_cmaq','Lon_cmaq'])\n    new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\n    new_df['Lat_airnow'] = new_df['Lat_airnow'].astype(float)\n    new_df['Lon_airnow'] = new_df['Lon_airnow'].astype(float)\n    new_df['YYYYMMDDHH'] = new_df['YYYYMMDDHH'].astype(str)\n    chunk_final = pd.merge(new_df, obs, how='left', left_on=['Lat_airnow','Lon_airnow','YYYYMMDDHH'], right_on = ['Latitude','Longitude','YYYYMMDDHH'])\n    chunk_final['month'] = chunk_final['YYYYMMDDHH'].str[4:6]\n    chunk_final['day'] = chunk_final['YYYYMMDDHH'].str[6:8]\n    chunk_final['hours'] = chunk_final['YYYYMMDDHH'].str[8:10]\n    new_chunk_df=chunk_final.drop(['YYYYMMDDHH'],axis=1)\n    final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\n    #print(\"final_chunk_df\", final_chunk_df)\n    #count += 1\n    #if count == 10:\n    break\n    final_chunk_df.to_csv(f\"{cmaq_folder}/training_new_one_year_valid_test.csv\",mode='a',index=False)\n    \n    \nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/training_new_one_year_valid_test.csv\")\n\n\n",
  "history_output" : "obs head:  Index(['StationID', 'Latitude', 'Longitude', 'AirNOW_O3', 'YYYYMMDDHH'], dtype='object')    StationID   Latitude   Longitude  AirNOW_O3  YYYYMMDDHH\n0  483951076  31.168888  -96.481941     -999.0  2021080112\n1  080699991  40.277802 -105.545303     -999.0  2021080112\n2  530639995  47.808228 -117.343269     -999.0  2021080112\n3  530639997  47.663963 -117.257652     -999.0  2021080112\n4  530639996  47.660568 -117.084503     -999.0  2021080112\nref_stations head:  Index(['Lat_airnow', 'Lon_airnow', 'Lat_cmaq', 'Lon_cmaq'], dtype='object')    Lat_airnow  Lon_airnow   Lat_cmaq   Lon_cmaq\n0   31.169399  -81.496399  31.131332 -81.537930\n1   42.062199  -87.673599  42.088024 -87.710205\n2   39.758900  -86.397202  39.801613 -86.452760\n3   40.931396  -81.123520  40.971100 -81.189270\n4   43.435001  -88.527802  43.455270 -88.565704\nobs shape:  (15279463, 5)\nref_station shape:  (2833, 4)\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nAll records should be incorporated into : /groups/ESS/zsun/cmaq//training_new_one_year_valid_test.csv\n",
  "history_begin_time" : 1664134415821,
  "history_end_time" : 1664134518662,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "uRjxpOtiMYw2",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation_one_year.csv\")\nobs['Latitude'] = obs['Latitude'].astype(float)\nobs['Longitude'] = obs['Longitude'].astype(float)\nobs['YYYYMMDDHH'] = obs['YYYYMMDDHH'].astype(str)\nprint(\"obs head: \", obs.columns, obs.head())\nref_stations=pd.read_csv(f\"{cmaq_folder}/updated_station_to_cell.csv\")\nref_stations = ref_stations.astype(float)\nprint(\"ref_stations head: \", ref_stations.columns, ref_stations.head())\n\nprint(\"obs shape: \", obs.shape)\nprint(\"ref_station shape: \", ref_stations.shape)\n\nchunksize = 10000\ncount = 0\nwith pd.read_csv(\"/groups/ESS3/aalnaim/cmaq/merged_cmaq_one_year.csv\", chunksize=chunksize) as reader:\n  for chunk in reader:\n    chunk = chunk[pd.to_numeric(chunk['Latitude'], errors='coerce').notnull()]\n    chunk = chunk[pd.to_numeric(chunk['Longitude'], errors='coerce').notnull()]\n    chunk['Latitude'] = chunk['Latitude'].astype(float)\n    chunk['Longitude'] = chunk['Longitude'].astype(float)\n    new_df = pd.merge(chunk,  ref_stations, how='left', left_on=['Latitude','Longitude'], right_on = ['Lat_cmaq','Lon_cmaq'])\n    new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\n    new_df['Lat_airnow'] = new_df['Lat_airnow'].astype(float)\n    new_df['Lon_airnow'] = new_df['Lon_airnow'].astype(float)\n    new_df['YYYYMMDDHH'] = new_df['YYYYMMDDHH'].astype(str)\n    chunk_final = pd.merge(new_df, obs, how='left', left_on=['Lat_airnow','Lon_airnow','YYYYMMDDHH'], right_on = ['Latitude','Longitude','YYYYMMDDHH'])\n    chunk_final['month'] = chunk_final['YYYYMMDDHH'].str[4:6]\n    chunk_final['day'] = chunk_final['YYYYMMDDHH'].str[6:8]\n    chunk_final['hours'] = chunk_final['YYYYMMDDHH'].str[8:10]\n    new_chunk_df=chunk_final.drop(['YYYYMMDDHH'],axis=1)\n    final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\n    #print(\"final_chunk_df\", final_chunk_df)\n    #count += 1\n    #if count == 10:\n    #  break\n    final_chunk_df.to_csv(f\"{cmaq_folder}/training_new_one_year_valid.csv\",mode='a',index=False, header=False)\n    \n    \nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/training_new_one_year_valid.csv\")\n\n\n",
  "history_output" : "obs head:  Index(['StationID', 'Latitude', 'Longitude', 'AirNOW_O3', 'YYYYMMDDHH'], dtype='object')    StationID   Latitude   Longitude  AirNOW_O3  YYYYMMDDHH\n0  483951076  31.168888  -96.481941     -999.0  2021080112\n1  080699991  40.277802 -105.545303     -999.0  2021080112\n2  530639995  47.808228 -117.343269     -999.0  2021080112\n3  530639997  47.663963 -117.257652     -999.0  2021080112\n4  530639996  47.660568 -117.084503     -999.0  2021080112\nref_stations head:  Index(['Lat_airnow', 'Lon_airnow', 'Lat_cmaq', 'Lon_cmaq'], dtype='object')    Lat_airnow  Lon_airnow   Lat_cmaq   Lon_cmaq\n0   31.169399  -81.496399  31.131332 -81.537930\n1   42.062199  -87.673599  42.088024 -87.710205\n2   39.758900  -86.397202  39.801613 -86.452760\n3   40.931396  -81.123520  40.971100 -81.189270\n4   43.435001  -88.527802  43.455270 -88.565704\nobs shape:  (15279463, 5)\nref_station shape:  (2833, 4)\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\n",
  "history_begin_time" : 1664128844798,
  "history_end_time" : 1664134444436,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "0ZcUWh8Ya91Q",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation_one_year.csv\")\nobs['Latitude'] = obs['Latitude'].astype(float)\nobs['Longitude'] = obs['Longitude'].astype(float)\nobs['YYYYMMDDHH'] = obs['YYYYMMDDHH'].astype(str)\nprint(\"obs head: \", obs.columns, obs.head())\nref_stations=pd.read_csv(f\"{cmaq_folder}/updated_station_to_cell.csv\")\nprint(\"ref_stations head: \", ref_stations.columns, ref_stations.head())\n\nprint(\"obs shape: \", obs.shape)\nprint(\"ref_station shape: \", ref_stations.shape)\n\nchunksize = 10000\ncount = 0\nwith pd.read_csv(\"/groups/ESS3/aalnaim/cmaq/merged_cmaq_one_year.csv\", chunksize=chunksize) as reader:\n  for chunk in reader:\n    #print(\"chunk :\", chunk)\n    chunk = chunk[pd.to_numeric(chunk['Latitude'], errors='coerce').notnull()]\n    chunk = chunk[pd.to_numeric(chunk['Longitude'], errors='coerce').notnull()]\n    chunk['Latitude'] = chunk['Latitude'].astype(float)\n    chunk['Longitude'] = chunk['Longitude'].astype(float)\n    new_df = pd.merge(chunk,  ref_stations, how='left', left_on=['Latitude','Longitude'], right_on = ['Lat_cmaq','Lon_cmaq'])\n    new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\n    #print(\"new_df after merge ref shape: \", new_df[['Lat_cmaq','Latitude','Lat_airnow','YYYYMMDDHH']].head(), new_df.shape)\n    #new_df.to_csv(f\"{cmaq_folder}/subset.csv\")\n    new_df['Lat_airnow'] = new_df['Lat_airnow'].astype(float)\n    new_df['Lon_airnow'] = new_df['Lon_airnow'].astype(float)\n    new_df['YYYYMMDDHH'] = new_df['YYYYMMDDHH'].astype(str)\n    chunk_final = pd.merge(new_df, obs, how='left', left_on=['Lat_airnow','Lon_airnow','YYYYMMDDHH'], right_on = ['Latitude','Longitude','YYYYMMDDHH'])\n    #print(\"new_df after merge all three shape: \", chunk_final[['Lat_airnow','Lon_airnow','YYYYMMDDHH']].head(), chunk_final.shape)\n    #test_obs_merge = pd.merge(obs,  ref_stations, how='left', left_on=['Latitude','Longitude'], right_on = ['Lat_airnow','Lon_airnow'])\n    #print(\"test_obs_merge shape:\", test_obs_merge.shape, test_obs_merge[[\"Latitude\", \"Lat_airnow\"]].head())\n    #chunk_final=chunk_final.drop_duplicates(keep=False)\n    #training_data = chunk_final.loc[:,~chunk_final.columns.duplicated()]\n\n    #chunk_final['YYYYMMDDHH'] = chunk_final['YYYYMMDDHH'].map(str)\n    chunk_final['month'] = chunk_final['YYYYMMDDHH'].str[4:6]\n    chunk_final['day'] = chunk_final['YYYYMMDDHH'].str[6:8]\n    chunk_final['hours'] = chunk_final['YYYYMMDDHH'].str[8:10]\n    new_chunk_df=chunk_final.drop(['YYYYMMDDHH'],axis=1)\n    #print(new_chunk_df.head())\n    final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\n    \n    print(\"final_chunk_df\", final_chunk_df)\n    count += 1\n    if count == 10:\n      break\n    final_chunk_df.to_csv(f\"{cmaq_folder}/training_new_one_year_valid.csv\",mode='a',index=False, header=False)\n    \n    \nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/training_new_one_year_valid.csv\")\n\n\n",
  "history_output" : "obs head:  Index(['StationID', 'Latitude', 'Longitude', 'AirNOW_O3', 'YYYYMMDDHH'], dtype='object')    StationID   Latitude   Longitude  AirNOW_O3  YYYYMMDDHH\n0  483951076  31.168888  -96.481941     -999.0  2021080112\n1  080699991  40.277802 -105.545303     -999.0  2021080112\n2  530639995  47.808228 -117.343269     -999.0  2021080112\n3  530639997  47.663963 -117.257652     -999.0  2021080112\n4  530639996  47.660568 -117.084503     -999.0  2021080112\nref_stations head:  Index(['Lat_airnow', 'Lon_airnow', 'Lat_cmaq', 'Lon_cmaq'], dtype='object')    Lat_airnow  Lon_airnow   Lat_cmaq   Lon_cmaq\n0   31.169399  -81.496399  31.131332 -81.537930\n1   42.062199  -87.673599  42.088024 -87.710205\n2   39.758900  -86.397202  39.801613 -86.452760\n3   40.931396  -81.123520  40.971100 -81.189270\n4   43.435001  -88.527802  43.455270 -88.565704\nobs shape:  (15279463, 5)\nref_station shape:  (2833, 4)\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nfinal_chunk_df     Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n10   26.157295    -97.76709  ...   -97.712502        8.0\n11   26.258575    -98.24072  ...   -98.291069       10.0\n\n[2 rows x 24 columns]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:44: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nfinal_chunk_df      Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n3     25.628311   -80.315060  ...   -80.326897        7.0\n4     25.712883   -80.178250  ...   -80.162201       19.0\n12    26.285812   -81.739590  ...   -81.720001       18.0\n13    26.063736   -80.344910  ...   -80.338600       12.0\n14    26.044365   -80.229004  ...   -80.257607       12.0\n21    26.128952   -80.091400  ...   -80.111397       13.0\n23    26.530144   -81.933750  ...   -81.979698       14.0\n26    26.233055   -80.069550  ...   -80.096901       17.0\n30    27.752789   -97.421265  ...   -97.434250        9.0\n39    27.858750   -97.542360  ...   -97.555801        7.0\n50    26.565243   -80.120180  ...   -80.058914       15.0\n54    27.123196   -82.306366  ...   -82.362503       20.0\n55    27.262135   -82.523254  ...   -82.570297       23.0\n57    27.367142   -82.504240  ...   -82.479698       11.0\n58    27.191406   -81.324100  ...   -81.340302       13.0\n60    27.472190   -82.485200  ...   -82.521896       13.0\n61    27.126205   -80.244660  ...   -80.240692       13.0\n63    27.594150   -82.584690  ...   -82.545799       17.0\n66    27.354744   -80.318480  ...   -80.311035       14.0\n67    28.820580   -97.060974  ...   -97.005600        7.0\n68    27.837933   -82.784580  ...   -82.739998       14.0\n70    27.787518   -82.427734  ...   -82.465599       14.0\n74    27.943192   -82.765780  ...   -82.736099       13.0\n75    27.909664   -82.527530  ...   -82.538300       14.0\n79    27.892704   -82.408480  ...   -82.454697       13.0\n80    29.023174   -95.471310  ...   -95.473602        1.0\n82    28.048492   -82.746950  ...   -82.700798       11.0\n85    27.980778   -82.270020  ...   -82.230614        7.0\n86    27.946102   -82.031890  ...   -82.000298       10.0\n91    28.153816   -82.728030  ...   -82.757797        0.0\n92    28.051258   -82.012085  ...   -81.971901        8.0\n93    27.812168   -80.467410  ...   -80.455399       15.0\n95    29.240390   -98.287600  ...   -98.311699        3.0\n97    29.226238   -94.854250  ...   -94.856400       18.0\n104   28.313725   -82.330960  ...   -82.305603        8.0\n105   28.060188   -80.661350  ...   -80.628304       12.0\n\n[36 rows x 24 columns]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:44: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nfinal_chunk_df      Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n0     29.277943  -103.200320  ...  -103.178101       23.0\n7     28.313519   -81.593690  ...   -81.636703        9.0\n8     29.556270   -98.662140  ...   -98.620003        7.0\n13    29.556270   -95.337860  ...   -95.392502        0.0\n18    29.549755   -94.968600  ...   -95.015602        3.0\n..          ...          ...  ...          ...        ...\n192   30.248066   -81.461365  ...   -81.453300       28.0\n193   30.892830   -85.637210  ...   -85.604401       17.0\n194   30.408016   -81.808105  ...   -81.840790       22.0\n199   31.609673   -97.063200  ...   -97.070602        8.0\n201   30.477814   -81.541720  ...   -81.586899       29.0\n\n[86 rows x 24 columns]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:44: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nfinal_chunk_df      Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n4     31.634686  -106.308914  ...  -106.287743       26.0\n7     32.038914   -96.428070  ...   -96.399200        9.0\n11    31.730682  -106.447784  ...  -106.402802       22.0\n13    31.730682  -106.447784  ...  -106.501114       30.0\n17    31.730682  -106.447784  ...  -106.455002       33.0\n..          ...          ...  ...          ...        ...\n173   32.616135  -115.503204  ...  -115.504204        0.0\n177   33.256145  -111.328400  ...  -111.292801       43.0\n179   33.960266   -89.758514  ...   -89.799004       15.0\n180   33.448830   -84.205930  ...   -84.161697       19.0\n187   33.293674  -111.859070  ...  -111.884300       17.0\n\n[68 rows x 24 columns]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:44: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nfinal_chunk_df      Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n0     33.841225    -86.89383  ...   -86.942497       11.0\n1     33.540535    -84.05939  ...   -84.066704       16.0\n3     32.912480    -79.60388  ...   -79.656998       34.0\n6     32.578003   -116.93384  ...  -116.929489       10.0\n15    33.382553   -112.00775  ...  -112.073097       14.0\n..          ...          ...  ...          ...        ...\n336   36.219997    -86.69931  ...   -86.744400       20.0\n338   35.958614    -84.17151  ...   -84.223099       26.0\n345   35.181824    -78.65912  ...   -78.728035       22.0\n346   34.435528   -119.86667  ...  -119.827797        5.0\n347   34.462390   -119.73958  ...  -119.690910        8.0\n\n[171 rows x 24 columns]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:44: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nfinal_chunk_df      Latitude_x  Longitude_x  ... Longitude_y AirNOW_O3\n1     36.327705   -86.684080  ...  -86.652496      17.0\n3     36.035057   -83.887270  ...  -83.876099      28.0\n5     35.557697   -80.328460  ...  -80.395042      23.0\n7     34.920830   -76.563020  ...  -76.620300      20.0\n10    34.513260  -120.026520  ... -120.045799      26.0\n..          ...          ...  ...         ...       ...\n314   38.474270  -109.865340  ... -109.821098      50.0\n315   38.928993  -104.752335  ... -104.816704      35.0\n316   39.163296   -94.690125  ...  -94.635597      13.0\n318   39.092290   -92.313446  ...  -92.316322       8.0\n319   39.028034   -90.918150  ...  -90.849190      19.0\n\n[148 rows x 24 columns]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:44: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nfinal_chunk_df      Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n1     37.508420   -77.358610  ...   -77.400269       34.0\n15    36.983610  -119.986680  ...  -120.034103       19.0\n16    37.323597  -118.269620  ...  -118.330833       22.0\n17    39.276980   -94.966890  ...   -94.951302       15.0\n18    39.265930   -94.406310  ...   -94.376389       18.0\n..          ...          ...  ...          ...        ...\n494   40.741936  -112.031250  ...  -112.008667       36.0\n495   40.759712  -111.889984  ...  -111.945000       44.0\n497   40.759712  -111.889984  ...  -111.930901       31.0\n498   40.759712  -111.889984  ...  -111.871696       55.0\n500   41.333050  -106.186615  ...  -106.239899       56.0\n\n[210 rows x 24 columns]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:44: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nfinal_chunk_df      Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n0     41.633568   -93.590210  ...   -93.643303       18.0\n3     41.510098   -90.550964  ...   -90.587502       19.0\n4     41.510098   -90.550964  ...   -90.517197       20.0\n8     41.094402   -85.092440  ...   -85.101814       15.0\n11    40.687600   -81.545410  ...   -81.598335       19.0\n..          ...          ...  ...          ...        ...\n429   43.861904  -104.131850  ...  -104.191902       47.0\n430   43.980347   -92.415070  ...   -92.449699       19.0\n431   43.725853   -87.778900  ...   -87.716103       24.0\n432   42.390995   -76.659300  ...   -76.653801       30.0\n434   41.418490   -71.580720  ...   -71.524849       17.0\n\n[218 rows x 24 columns]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:44: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nfinal_chunk_df      Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n3     43.833443   -87.763730  ...   -87.791939       23.0\n9     41.757412   -72.658080  ...   -72.629700        7.0\n11    41.552605   -71.679990  ...   -71.719704        9.0\n12    41.492640   -71.401610  ...   -71.421898       26.0\n16    43.918697  -106.550200  ...  -106.509743       35.0\n..          ...          ...  ...          ...        ...\n257   45.171486   -78.896850  ...   -78.931396       24.0\n259   43.917873   -71.678925  ...   -71.700798        8.0\n261   43.612170   -70.242310  ...   -70.268967       13.0\n262   43.612170   -70.242310  ...   -70.207321       19.0\n263   43.870820  -123.083466  ...  -123.035378        1.0\n\n[105 rows x 24 columns]\nmerge_training_data.py:25: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:44: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nfinal_chunk_df      Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n0     43.974533  -123.125990  ...  -123.083771        4.0\n9     46.684097   -92.530550  ...   -92.511719       16.0\n11    46.607346   -90.653900  ...   -90.698601       18.0\n12    46.299446   -85.989290  ...   -85.950302       15.0\n14    44.491653   -72.864440  ...   -72.868973       11.0\n..          ...          ...  ...          ...        ...\n224   46.726097   -75.384674  ...   -75.431900        3.0\n226   46.402090   -72.921050  ...   -72.892799       11.0\n241   48.363087  -107.900910  ...  -107.862473       29.0\n242   48.689632  -102.429720  ...  -102.402199       20.0\n249   47.446537  -117.568390  ...  -117.529800       31.0\n\n[72 rows x 24 columns]\nAll records should be incorporated into : /groups/ESS/zsun/cmaq//training_new_one_year_valid.csv\n",
  "history_begin_time" : 1664128314202,
  "history_end_time" : 1664128466777,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "PJPXEbyclLpX",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation_one_year.csv\")\nobs['Latitude'] = obs['Latitude'].astype(float)\nobs['Longitude'] = obs['Longitude'].astype(float)\nprint(\"obs head: \", obs.columns, obs.head())\nref_stations=pd.read_csv(f\"{cmaq_folder}/updated_station_to_cell.csv\")\nprint(\"ref_stations head: \", ref_stations.columns, ref_stations.head())\n\nprint(\"obs shape: \", obs.shape)\nprint(\"ref_station shape: \", ref_stations.shape)\n\nchunksize = 10000\ncount = 0\nwith pd.read_csv(\"/groups/ESS3/aalnaim/cmaq/merged_cmaq_one_year.csv\", chunksize=chunksize) as reader:\n  for chunk in reader:\n    #print(\"chunk :\", chunk)\n    chunk = chunk[pd.to_numeric(chunk['Latitude'], errors='coerce').notnull()]\n    chunk = chunk[pd.to_numeric(chunk['Longitude'], errors='coerce').notnull()]\n    chunk['Latitude'] = chunk['Latitude'].astype(float)\n    chunk['Longitude'] = chunk['Longitude'].astype(float)\n    new_df = pd.merge(chunk,  ref_stations, how='left', left_on=['Latitude','Longitude'], right_on = ['Lat_cmaq','Lon_cmaq'])\n    new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\n    #print(\"new_df after merge ref shape: \", new_df[['Lat_cmaq','Latitude','Lat_airnow','YYYYMMDDHH']].head(), new_df.shape)\n    #new_df.to_csv(f\"{cmaq_folder}/subset.csv\")\n    new_df['Lat_airnow'] = new_df['Lat_airnow'].astype(float)\n    new_df['Lon_airnow'] = new_df['Lon_airnow'].astype(float)\n    chunk_final = pd.merge(new_df, obs, how='left', left_on=['Lat_airnow','Lon_airnow','YYYYMMDDHH'], right_on = ['Latitude','Longitude','YYYYMMDDHH'])\n    #print(\"new_df after merge all three shape: \", chunk_final[['Lat_airnow','Lon_airnow','YYYYMMDDHH']].head(), chunk_final.shape)\n    #test_obs_merge = pd.merge(obs,  ref_stations, how='left', left_on=['Latitude','Longitude'], right_on = ['Lat_airnow','Lon_airnow'])\n    #print(\"test_obs_merge shape:\", test_obs_merge.shape, test_obs_merge[[\"Latitude\", \"Lat_airnow\"]].head())\n    #chunk_final=chunk_final.drop_duplicates(keep=False)\n    #training_data = chunk_final.loc[:,~chunk_final.columns.duplicated()]\n\n    chunk_final['YYYYMMDDHH'] = chunk_final['YYYYMMDDHH'].map(str)\n    chunk_final['month'] = chunk_final['YYYYMMDDHH'].str[4:6]\n    chunk_final['day'] = chunk_final['YYYYMMDDHH'].str[6:8]\n    chunk_final['hours'] = chunk_final['YYYYMMDDHH'].str[8:10]\n    new_chunk_df=chunk_final.drop(['YYYYMMDDHH'],axis=1)\n    #print(new_chunk_df.head())\n    final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\n    \n    print(\"final_chunk_df\", final_chunk_df)\n    count += 1\n    if count == 10:\n      break\n    final_chunk_df.to_csv(f\"{cmaq_folder}/training_new_one_year_valid.csv\",mode='a',index=False, header=False)\n    \n    \nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/training_new_one_year_valid.csv\")\n\n\n",
  "history_output" : "obs head:  Index(['StationID', 'Latitude', 'Longitude', 'AirNOW_O3', 'YYYYMMDDHH'], dtype='object')    StationID   Latitude   Longitude  AirNOW_O3  YYYYMMDDHH\n0  483951076  31.168888  -96.481941     -999.0  2021080112\n1  080699991  40.277802 -105.545303     -999.0  2021080112\n2  530639995  47.808228 -117.343269     -999.0  2021080112\n3  530639997  47.663963 -117.257652     -999.0  2021080112\n4  530639996  47.660568 -117.084503     -999.0  2021080112\nref_stations head:  Index(['Lat_airnow', 'Lon_airnow', 'Lat_cmaq', 'Lon_cmaq'], dtype='object')    Lat_airnow  Lon_airnow   Lat_cmaq   Lon_cmaq\n0   31.169399  -81.496399  31.131332 -81.537930\n1   42.062199  -87.673599  42.088024 -87.710205\n2   39.758900  -86.397202  39.801613 -86.452760\n3   40.931396  -81.123520  40.971100 -81.189270\n4   43.435001  -88.527802  43.455270 -88.565704\nobs shape:  (15279463, 5)\nref_station shape:  (2833, 4)\nmerge_training_data.py:24: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nfinal_chunk_df     Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n10   26.157295    -97.76709  ...   -97.712502        8.0\n11   26.258575    -98.24072  ...   -98.291069       10.0\n\n[2 rows x 24 columns]\nmerge_training_data.py:24: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:42: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nfinal_chunk_df      Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n3     25.628311   -80.315060  ...   -80.326897        7.0\n4     25.712883   -80.178250  ...   -80.162201       19.0\n12    26.285812   -81.739590  ...   -81.720001       18.0\n13    26.063736   -80.344910  ...   -80.338600       12.0\n14    26.044365   -80.229004  ...   -80.257607       12.0\n21    26.128952   -80.091400  ...   -80.111397       13.0\n23    26.530144   -81.933750  ...   -81.979698       14.0\n26    26.233055   -80.069550  ...   -80.096901       17.0\n30    27.752789   -97.421265  ...   -97.434250        9.0\n39    27.858750   -97.542360  ...   -97.555801        7.0\n50    26.565243   -80.120180  ...   -80.058914       15.0\n54    27.123196   -82.306366  ...   -82.362503       20.0\n55    27.262135   -82.523254  ...   -82.570297       23.0\n57    27.367142   -82.504240  ...   -82.479698       11.0\n58    27.191406   -81.324100  ...   -81.340302       13.0\n60    27.472190   -82.485200  ...   -82.521896       13.0\n61    27.126205   -80.244660  ...   -80.240692       13.0\n63    27.594150   -82.584690  ...   -82.545799       17.0\n66    27.354744   -80.318480  ...   -80.311035       14.0\n67    28.820580   -97.060974  ...   -97.005600        7.0\n68    27.837933   -82.784580  ...   -82.739998       14.0\n70    27.787518   -82.427734  ...   -82.465599       14.0\n74    27.943192   -82.765780  ...   -82.736099       13.0\n75    27.909664   -82.527530  ...   -82.538300       14.0\n79    27.892704   -82.408480  ...   -82.454697       13.0\n80    29.023174   -95.471310  ...   -95.473602        1.0\n82    28.048492   -82.746950  ...   -82.700798       11.0\n85    27.980778   -82.270020  ...   -82.230614        7.0\n86    27.946102   -82.031890  ...   -82.000298       10.0\n91    28.153816   -82.728030  ...   -82.757797        0.0\n92    28.051258   -82.012085  ...   -81.971901        8.0\n93    27.812168   -80.467410  ...   -80.455399       15.0\n95    29.240390   -98.287600  ...   -98.311699        3.0\n97    29.226238   -94.854250  ...   -94.856400       18.0\n104   28.313725   -82.330960  ...   -82.305603        8.0\n105   28.060188   -80.661350  ...   -80.628304       12.0\n\n[36 rows x 24 columns]\nmerge_training_data.py:24: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:42: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nfinal_chunk_df      Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n0     29.277943  -103.200320  ...  -103.178101       23.0\n7     28.313519   -81.593690  ...   -81.636703        9.0\n8     29.556270   -98.662140  ...   -98.620003        7.0\n13    29.556270   -95.337860  ...   -95.392502        0.0\n18    29.549755   -94.968600  ...   -95.015602        3.0\n..          ...          ...  ...          ...        ...\n192   30.248066   -81.461365  ...   -81.453300       28.0\n193   30.892830   -85.637210  ...   -85.604401       17.0\n194   30.408016   -81.808105  ...   -81.840790       22.0\n199   31.609673   -97.063200  ...   -97.070602        8.0\n201   30.477814   -81.541720  ...   -81.586899       29.0\n\n[86 rows x 24 columns]\nmerge_training_data.py:24: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:42: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nfinal_chunk_df      Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n4     31.634686  -106.308914  ...  -106.287743       26.0\n7     32.038914   -96.428070  ...   -96.399200        9.0\n11    31.730682  -106.447784  ...  -106.402802       22.0\n13    31.730682  -106.447784  ...  -106.501114       30.0\n17    31.730682  -106.447784  ...  -106.455002       33.0\n..          ...          ...  ...          ...        ...\n173   32.616135  -115.503204  ...  -115.504204        0.0\n177   33.256145  -111.328400  ...  -111.292801       43.0\n179   33.960266   -89.758514  ...   -89.799004       15.0\n180   33.448830   -84.205930  ...   -84.161697       19.0\n187   33.293674  -111.859070  ...  -111.884300       17.0\n\n[68 rows x 24 columns]\nmerge_training_data.py:24: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:42: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nfinal_chunk_df      Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n0     33.841225    -86.89383  ...   -86.942497       11.0\n1     33.540535    -84.05939  ...   -84.066704       16.0\n3     32.912480    -79.60388  ...   -79.656998       34.0\n6     32.578003   -116.93384  ...  -116.929489       10.0\n15    33.382553   -112.00775  ...  -112.073097       14.0\n..          ...          ...  ...          ...        ...\n336   36.219997    -86.69931  ...   -86.744400       20.0\n338   35.958614    -84.17151  ...   -84.223099       26.0\n345   35.181824    -78.65912  ...   -78.728035       22.0\n346   34.435528   -119.86667  ...  -119.827797        5.0\n347   34.462390   -119.73958  ...  -119.690910        8.0\n\n[171 rows x 24 columns]\nmerge_training_data.py:24: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nTraceback (most recent call last):\n  File \"merge_training_data.py\", line 29, in <module>\n    chunk_final = pd.merge(new_df, obs, how='left', left_on=['Lat_airnow','Lon_airnow','YYYYMMDDHH'], right_on = ['Latitude','Longitude','YYYYMMDDHH'])\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/reshape/merge.py\", line 107, in merge\n    op = _MergeOperation(\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/reshape/merge.py\", line 704, in __init__\n    self._maybe_coerce_merge_keys()\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/reshape/merge.py\", line 1257, in _maybe_coerce_merge_keys\n    raise ValueError(msg)\nValueError: You are trying to merge on object and int64 columns. If you wish to proceed you should use pd.concat\n",
  "history_begin_time" : 1664128112357,
  "history_end_time" : 1664128207999,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "GTUe96huyJCl",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation_one_year.csv\")\nprint(\"obs head: \", obs.columns, obs.head())\nref_stations=pd.read_csv(f\"{cmaq_folder}/updated_station_to_cell.csv\")\nprint(\"ref_stations head: \", ref_stations.columns, ref_stations.head())\n\nprint(\"obs shape: \", obs.shape)\nprint(\"ref_station shape: \", ref_stations.shape)\n\nchunksize = 10000\ncount = 0\nwith pd.read_csv(\"/groups/ESS3/aalnaim/cmaq/merged_cmaq_one_year.csv\", chunksize=chunksize) as reader:\n  for chunk in reader:\n    print(\"chunk :\", chunk)\n    chunk = chunk[pd.to_numeric(chunk['Latitude'], errors='coerce').notnull()]\n    chunk = chunk[pd.to_numeric(chunk['Longitude'], errors='coerce').notnull()]\n    chunk['Latitude'] = chunk['Latitude'].astype(float)\n    chunk['Longitude'] = chunk['Longitude'].astype(float)\n    new_df = pd.merge(chunk,  ref_stations, how='left', left_on=['Latitude','Longitude'], right_on = ['Lat_cmaq','Lon_cmaq'])\n    new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\n    #print(\"new_df after merge ref shape: \", new_df[['Lat_cmaq','Latitude','Lat_airnow','YYYYMMDDHH']].head(), new_df.shape)\n    #new_df.to_csv(f\"{cmaq_folder}/subset.csv\")\n    chunk_final = pd.merge(new_df, obs, how='left', left_on=['Lat_airnow','Lon_airnow','YYYYMMDDHH'], right_on = ['Latitude','Longitude','YYYYMMDDHH'])\n    #print(\"new_df after merge all three shape: \", chunk_final[['Lat_airnow','Lon_airnow','YYYYMMDDHH']].head(), chunk_final.shape)\n    #test_obs_merge = pd.merge(obs,  ref_stations, how='left', left_on=['Latitude','Longitude'], right_on = ['Lat_airnow','Lon_airnow'])\n    #print(\"test_obs_merge shape:\", test_obs_merge.shape, test_obs_merge[[\"Latitude\", \"Lat_airnow\"]].head())\n    #chunk_final=chunk_final.drop_duplicates(keep=False)\n    #training_data = chunk_final.loc[:,~chunk_final.columns.duplicated()]\n\n    chunk_final['YYYYMMDDHH'] = chunk_final['YYYYMMDDHH'].map(str)\n    chunk_final['month'] = chunk_final['YYYYMMDDHH'].str[4:6]\n    chunk_final['day'] = chunk_final['YYYYMMDDHH'].str[6:8]\n    chunk_final['hours'] = chunk_final['YYYYMMDDHH'].str[8:10]\n    new_chunk_df=chunk_final.drop(['YYYYMMDDHH'],axis=1)\n    #print(new_chunk_df.head())\n    final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\n    \n    print(\"final_chunk_df\", final_chunk_df)\n    count += 1\n    if count == 10:\n      break\n    final_chunk_df.to_csv(f\"{cmaq_folder}/training_new_one_year_valid.csv\",mode='a',index=False, header=False)\n    \n    \nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/training_new_one_year_valid.csv\")\n\n\n",
  "history_output" : "obs head:  Index(['StationID', 'Latitude', 'Longitude', 'AirNOW_O3', 'YYYYMMDDHH'], dtype='object')    StationID   Latitude   Longitude  AirNOW_O3  YYYYMMDDHH\n0  483951076  31.168888  -96.481941     -999.0  2021080112\n1  080699991  40.277802 -105.545303     -999.0  2021080112\n2  530639995  47.808228 -117.343269     -999.0  2021080112\n3  530639997  47.663963 -117.257652     -999.0  2021080112\n4  530639996  47.660568 -117.084503     -999.0  2021080112\nref_stations head:  Index(['Lat_airnow', 'Lon_airnow', 'Lat_cmaq', 'Lon_cmaq'], dtype='object')    Lat_airnow  Lon_airnow   Lat_cmaq   Lon_cmaq\n0   31.169399  -81.496399  31.131332 -81.537930\n1   42.062199  -87.673599  42.088024 -87.710205\n2   39.758900  -86.397202  39.801613 -86.452760\n3   40.931396  -81.123520  40.971100 -81.189270\n4   43.435001  -88.527802  43.455270 -88.565704\nobs shape:  (15279463, 5)\nref_station shape:  (2833, 4)\nchunk :        Latitude   Longitude  YYYYMMDDHH  ...  month  day  hours\n0     21.829086 -120.620790  2021080112  ...      8    1     12\n1     21.855751 -120.512500  2021080112  ...      8    1     12\n2     21.882309 -120.404144  2021080112  ...      8    1     12\n3     21.908745 -120.295715  2021080112  ...      8    1     12\n4     21.935051 -120.187225  2021080112  ...      8    1     12\n...         ...         ...         ...  ...    ...  ...    ...\n9995  26.737213  -89.563050  2021080112  ...      8    1     12\n9996  26.728450  -89.444580  2021080112  ...      8    1     12\n9997  26.719570  -89.326170  2021080112  ...      8    1     12\n9998  26.710556  -89.207760  2021080112  ...      8    1     12\n9999  26.701397  -89.089420  2021080112  ...      8    1     12\n\n[10000 rows x 17 columns]\nmerge_training_data.py:22: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nfinal_chunk_df     Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n10   26.157295    -97.76709  ...   -97.712502        8.0\n11   26.258575    -98.24072  ...   -98.291069       10.0\n\n[2 rows x 24 columns]\nchunk :         Latitude   Longitude  YYYYMMDDHH  ...  month  day  hours\n10000  26.692100  -88.971070  2021080112  ...      8    1     12\n10001  26.682660  -88.852750  2021080112  ...      8    1     12\n10002  26.673100  -88.734470  2021080112  ...      8    1     12\n10003  26.663387  -88.616210  2021080112  ...      8    1     12\n10004  26.653545  -88.497986  2021080112  ...      8    1     12\n...          ...         ...         ...  ...    ...  ...    ...\n19995  28.691060 -109.645080  2021080112  ...      8    1     12\n19996  28.705803 -109.524445  2021080112  ...      8    1     12\n19997  28.720413 -109.403780  2021080112  ...      8    1     12\n19998  28.734886 -109.283050  2021080112  ...      8    1     12\n19999  28.749210 -109.162290  2021080112  ...      8    1     12\n\n[10000 rows x 17 columns]\nmerge_training_data.py:22: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:38: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nfinal_chunk_df      Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n3     25.628311   -80.315060  ...   -80.326897        7.0\n4     25.712883   -80.178250  ...   -80.162201       19.0\n12    26.285812   -81.739590  ...   -81.720001       18.0\n13    26.063736   -80.344910  ...   -80.338600       12.0\n14    26.044365   -80.229004  ...   -80.257607       12.0\n21    26.128952   -80.091400  ...   -80.111397       13.0\n23    26.530144   -81.933750  ...   -81.979698       14.0\n26    26.233055   -80.069550  ...   -80.096901       17.0\n30    27.752789   -97.421265  ...   -97.434250        9.0\n39    27.858750   -97.542360  ...   -97.555801        7.0\n50    26.565243   -80.120180  ...   -80.058914       15.0\n54    27.123196   -82.306366  ...   -82.362503       20.0\n55    27.262135   -82.523254  ...   -82.570297       23.0\n57    27.367142   -82.504240  ...   -82.479698       11.0\n58    27.191406   -81.324100  ...   -81.340302       13.0\n60    27.472190   -82.485200  ...   -82.521896       13.0\n61    27.126205   -80.244660  ...   -80.240692       13.0\n63    27.594150   -82.584690  ...   -82.545799       17.0\n66    27.354744   -80.318480  ...   -80.311035       14.0\n67    28.820580   -97.060974  ...   -97.005600        7.0\n68    27.837933   -82.784580  ...   -82.739998       14.0\n70    27.787518   -82.427734  ...   -82.465599       14.0\n74    27.943192   -82.765780  ...   -82.736099       13.0\n75    27.909664   -82.527530  ...   -82.538300       14.0\n79    27.892704   -82.408480  ...   -82.454697       13.0\n80    29.023174   -95.471310  ...   -95.473602        1.0\n82    28.048492   -82.746950  ...   -82.700798       11.0\n85    27.980778   -82.270020  ...   -82.230614        7.0\n86    27.946102   -82.031890  ...   -82.000298       10.0\n91    28.153816   -82.728030  ...   -82.757797        0.0\n92    28.051258   -82.012085  ...   -81.971901        8.0\n93    27.812168   -80.467410  ...   -80.455399       15.0\n95    29.240390   -98.287600  ...   -98.311699        3.0\n97    29.226238   -94.854250  ...   -94.856400       18.0\n104   28.313725   -82.330960  ...   -82.305603        8.0\n105   28.060188   -80.661350  ...   -80.628304       12.0\n\n[36 rows x 24 columns]\nchunk :         Latitude   Longitude  YYYYMMDDHH  ...  month  day  hours\n20000  28.763401 -109.041504  2021080112  ...      8    1     12\n20001  28.777440 -108.920654  2021080112  ...      8    1     12\n20002  28.791344 -108.799774  2021080112  ...      8    1     12\n20003  28.805122 -108.678830  2021080112  ...      8    1     12\n20004  28.818733 -108.557860  2021080112  ...      8    1     12\n...          ...         ...         ...  ...    ...  ...    ...\n29995  29.627544  -75.544680  2021080112  ...      8    1     12\n29996  29.602425  -75.424930  2021080112  ...      8    1     12\n29997  29.577171  -75.305240  2021080112  ...      8    1     12\n29998  29.551777  -75.185610  2021080112  ...      8    1     12\n29999  29.526234  -75.066070  2021080112  ...      8    1     12\n\n[10000 rows x 17 columns]\nmerge_training_data.py:22: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:38: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nfinal_chunk_df      Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n0     29.277943  -103.200320  ...  -103.178101       23.0\n7     28.313519   -81.593690  ...   -81.636703        9.0\n8     29.556270   -98.662140  ...   -98.620003        7.0\n13    29.556270   -95.337860  ...   -95.392502        0.0\n18    29.549755   -94.968600  ...   -95.015602        3.0\n..          ...          ...  ...          ...        ...\n192   30.248066   -81.461365  ...   -81.453300       28.0\n193   30.892830   -85.637210  ...   -85.604401       17.0\n194   30.408016   -81.808105  ...   -81.840790       22.0\n199   31.609673   -97.063200  ...   -97.070602        8.0\n201   30.477814   -81.541720  ...   -81.586899       29.0\n\n[86 rows x 24 columns]\nchunk :         Latitude  Longitude  YYYYMMDDHH  ...  month  day  hours\n30000  29.500584 -74.946594  2021080112  ...      8    1     12\n30001  29.474789 -74.827210  2021080112  ...      8    1     12\n30002  29.448845 -74.707920  2021080112  ...      8    1     12\n30003  29.422783 -74.588684  2021080112  ...      8    1     12\n30004  29.396576 -74.469540  2021080112  ...      8    1     12\n...          ...        ...         ...  ...    ...  ...    ...\n39995  34.304348 -96.148895  2021080112  ...      8    1     12\n39996  34.303250 -96.017975  2021080112  ...      8    1     12\n39997  34.302010 -95.887054  2021080112  ...      8    1     12\n39998  34.300617 -95.756134  2021080112  ...      8    1     12\n39999  34.299060 -95.625210  2021080112  ...      8    1     12\n\n[10000 rows x 17 columns]\nmerge_training_data.py:22: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:38: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nfinal_chunk_df      Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n4     31.634686  -106.308914  ...  -106.287743       26.0\n7     32.038914   -96.428070  ...   -96.399200        9.0\n11    31.730682  -106.447784  ...  -106.402802       22.0\n13    31.730682  -106.447784  ...  -106.501114       30.0\n17    31.730682  -106.447784  ...  -106.455002       33.0\n..          ...          ...  ...          ...        ...\n173   32.616135  -115.503204  ...  -115.504204        0.0\n177   33.256145  -111.328400  ...  -111.292801       43.0\n179   33.960266   -89.758514  ...   -89.799004       15.0\n180   33.448830   -84.205930  ...   -84.161697       19.0\n187   33.293674  -111.859070  ...  -111.884300       17.0\n\n[68 rows x 24 columns]\nchunk :         Latitude  Longitude  YYYYMMDDHH  ...  month  day  hours\n40000  34.297337  -95.49429  2021080112  ...      8    1     12\n40001  34.295464  -95.36340  2021080112  ...      8    1     12\n40002  34.293440  -95.23248  2021080112  ...      8    1     12\n40003  34.291264  -95.10162  2021080112  ...      8    1     12\n40004  34.288920  -94.97073  2021080112  ...      8    1     12\n...          ...        ...         ...  ...    ...  ...    ...\n49995  34.773323 -118.20764  2021080112  ...      8    1     12\n49996  34.798280 -118.07941  2021080112  ...      8    1     12\n49997  34.823086 -117.95108  2021080112  ...      8    1     12\n49998  34.847736 -117.82269  2021080112  ...      8    1     12\n49999  34.872257 -117.69420  2021080112  ...      8    1     12\n\n[10000 rows x 17 columns]\nmerge_training_data.py:22: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:38: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nfinal_chunk_df      Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n0     33.841225    -86.89383  ...   -86.942497       11.0\n1     33.540535    -84.05939  ...   -84.066704       16.0\n3     32.912480    -79.60388  ...   -79.656998       34.0\n6     32.578003   -116.93384  ...  -116.929489       10.0\n15    33.382553   -112.00775  ...  -112.073097       14.0\n..          ...          ...  ...          ...        ...\n336   36.219997    -86.69931  ...   -86.744400       20.0\n338   35.958614    -84.17151  ...   -84.223099       26.0\n345   35.181824    -78.65912  ...   -78.728035       22.0\n346   34.435528   -119.86667  ...  -119.827797        5.0\n347   34.462390   -119.73958  ...  -119.690910        8.0\n\n[171 rows x 24 columns]\nchunk :         Latitude   Longitude  YYYYMMDDHH  ...  month  day  hours\n50000   Latitude   Longitude  YYYYMMDDHH  ...  month  day  hours\n50001  34.896618  -117.56563  2021080112  ...      8    1     12\n50002   34.92083  -117.43698  2021080112  ...      8    1     12\n50003    34.9449  -117.30823  2021080112  ...      8    1     12\n50004  34.968807  -117.17941  2021080112  ...      8    1     12\n...          ...         ...         ...  ...    ...  ...    ...\n59995   38.07941   -80.99509  2021080112  ...      8    1     12\n59996  38.060326  -80.859375  2021080112  ...      8    1     12\n59997  38.041073  -80.723755  2021080112  ...      8    1     12\n59998   38.02166   -80.58823  2021080112  ...      8    1     12\n59999  38.002098   -80.45276  2021080112  ...      8    1     12\n\n[10000 rows x 17 columns]\nmerge_training_data.py:22: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nTraceback (most recent call last):\n  File \"merge_training_data.py\", line 25, in <module>\n    chunk_final = pd.merge(new_df, obs, how='left', left_on=['Lat_airnow','Lon_airnow','YYYYMMDDHH'], right_on = ['Latitude','Longitude','YYYYMMDDHH'])\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/reshape/merge.py\", line 107, in merge\n    op = _MergeOperation(\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/reshape/merge.py\", line 704, in __init__\n    self._maybe_coerce_merge_keys()\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/reshape/merge.py\", line 1257, in _maybe_coerce_merge_keys\n    raise ValueError(msg)\nValueError: You are trying to merge on object and int64 columns. If you wish to proceed you should use pd.concat\n",
  "history_begin_time" : 1664127804956,
  "history_end_time" : 1664127898438,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "mi7JFk4UYArh",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation_one_year.csv\")\nprint(\"obs head: \", obs.columns, obs.head())\nref_stations=pd.read_csv(f\"{cmaq_folder}/updated_station_to_cell.csv\")\nprint(\"ref_stations head: \", ref_stations.columns, ref_stations.head())\n\nprint(\"obs shape: \", obs.shape)\nprint(\"ref_station shape: \", ref_stations.shape)\n\nchunksize = 10000\ncount = 0\nwith pd.read_csv(\"/groups/ESS3/aalnaim/cmaq/merged_cmaq_one_year.csv\", chunksize=chunksize) as reader:\n  for chunk in reader:\n    print(\"chunk :\", chunk)\n    \n    chunk['Latitude'] = chunk['Latitude'].astype(float)\n    chunk['Longitude'] = chunk['Longitude'].astype(float)\n    new_df = pd.merge(chunk,  ref_stations, how='left', left_on=['Latitude','Longitude'], right_on = ['Lat_cmaq','Lon_cmaq'])\n    new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\n    #print(\"new_df after merge ref shape: \", new_df[['Lat_cmaq','Latitude','Lat_airnow','YYYYMMDDHH']].head(), new_df.shape)\n    #new_df.to_csv(f\"{cmaq_folder}/subset.csv\")\n    chunk_final = pd.merge(new_df, obs, how='left', left_on=['Lat_airnow','Lon_airnow','YYYYMMDDHH'], right_on = ['Latitude','Longitude','YYYYMMDDHH'])\n    #print(\"new_df after merge all three shape: \", chunk_final[['Lat_airnow','Lon_airnow','YYYYMMDDHH']].head(), chunk_final.shape)\n    #test_obs_merge = pd.merge(obs,  ref_stations, how='left', left_on=['Latitude','Longitude'], right_on = ['Lat_airnow','Lon_airnow'])\n    #print(\"test_obs_merge shape:\", test_obs_merge.shape, test_obs_merge[[\"Latitude\", \"Lat_airnow\"]].head())\n    #chunk_final=chunk_final.drop_duplicates(keep=False)\n    #training_data = chunk_final.loc[:,~chunk_final.columns.duplicated()]\n\n    chunk_final['YYYYMMDDHH'] = chunk_final['YYYYMMDDHH'].map(str)\n    chunk_final['month'] = chunk_final['YYYYMMDDHH'].str[4:6]\n    chunk_final['day'] = chunk_final['YYYYMMDDHH'].str[6:8]\n    chunk_final['hours'] = chunk_final['YYYYMMDDHH'].str[8:10]\n    new_chunk_df=chunk_final.drop(['YYYYMMDDHH'],axis=1)\n    #print(new_chunk_df.head())\n    final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\n    \n    print(\"final_chunk_df\", final_chunk_df)\n    count += 1\n    if count == 10:\n      break\n    final_chunk_df.to_csv(f\"{cmaq_folder}/training_new_one_year_valid.csv\",mode='a',index=False, header=False)\n    \n    \nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/training_new_one_year_valid.csv\")\n\n\n",
  "history_output" : "obs head:  Index(['StationID', 'Latitude', 'Longitude', 'AirNOW_O3', 'YYYYMMDDHH'], dtype='object')    StationID   Latitude   Longitude  AirNOW_O3  YYYYMMDDHH\n0  483951076  31.168888  -96.481941     -999.0  2021080112\n1  080699991  40.277802 -105.545303     -999.0  2021080112\n2  530639995  47.808228 -117.343269     -999.0  2021080112\n3  530639997  47.663963 -117.257652     -999.0  2021080112\n4  530639996  47.660568 -117.084503     -999.0  2021080112\nref_stations head:  Index(['Lat_airnow', 'Lon_airnow', 'Lat_cmaq', 'Lon_cmaq'], dtype='object')    Lat_airnow  Lon_airnow   Lat_cmaq   Lon_cmaq\n0   31.169399  -81.496399  31.131332 -81.537930\n1   42.062199  -87.673599  42.088024 -87.710205\n2   39.758900  -86.397202  39.801613 -86.452760\n3   40.931396  -81.123520  40.971100 -81.189270\n4   43.435001  -88.527802  43.455270 -88.565704\nobs shape:  (15279463, 5)\nref_station shape:  (2833, 4)\nchunk :        Latitude   Longitude  YYYYMMDDHH  ...  month  day  hours\n0     21.829086 -120.620790  2021080112  ...      8    1     12\n1     21.855751 -120.512500  2021080112  ...      8    1     12\n2     21.882309 -120.404144  2021080112  ...      8    1     12\n3     21.908745 -120.295715  2021080112  ...      8    1     12\n4     21.935051 -120.187225  2021080112  ...      8    1     12\n...         ...         ...         ...  ...    ...  ...    ...\n9995  26.737213  -89.563050  2021080112  ...      8    1     12\n9996  26.728450  -89.444580  2021080112  ...      8    1     12\n9997  26.719570  -89.326170  2021080112  ...      8    1     12\n9998  26.710556  -89.207760  2021080112  ...      8    1     12\n9999  26.701397  -89.089420  2021080112  ...      8    1     12\n\n[10000 rows x 17 columns]\nmerge_training_data.py:21: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nfinal_chunk_df     Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n10   26.157295    -97.76709  ...   -97.712502        8.0\n11   26.258575    -98.24072  ...   -98.291069       10.0\n\n[2 rows x 24 columns]\nchunk :         Latitude   Longitude  YYYYMMDDHH  ...  month  day  hours\n10000  26.692100  -88.971070  2021080112  ...      8    1     12\n10001  26.682660  -88.852750  2021080112  ...      8    1     12\n10002  26.673100  -88.734470  2021080112  ...      8    1     12\n10003  26.663387  -88.616210  2021080112  ...      8    1     12\n10004  26.653545  -88.497986  2021080112  ...      8    1     12\n...          ...         ...         ...  ...    ...  ...    ...\n19995  28.691060 -109.645080  2021080112  ...      8    1     12\n19996  28.705803 -109.524445  2021080112  ...      8    1     12\n19997  28.720413 -109.403780  2021080112  ...      8    1     12\n19998  28.734886 -109.283050  2021080112  ...      8    1     12\n19999  28.749210 -109.162290  2021080112  ...      8    1     12\n\n[10000 rows x 17 columns]\nmerge_training_data.py:21: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:37: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nfinal_chunk_df      Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n3     25.628311   -80.315060  ...   -80.326897        7.0\n4     25.712883   -80.178250  ...   -80.162201       19.0\n12    26.285812   -81.739590  ...   -81.720001       18.0\n13    26.063736   -80.344910  ...   -80.338600       12.0\n14    26.044365   -80.229004  ...   -80.257607       12.0\n21    26.128952   -80.091400  ...   -80.111397       13.0\n23    26.530144   -81.933750  ...   -81.979698       14.0\n26    26.233055   -80.069550  ...   -80.096901       17.0\n30    27.752789   -97.421265  ...   -97.434250        9.0\n39    27.858750   -97.542360  ...   -97.555801        7.0\n50    26.565243   -80.120180  ...   -80.058914       15.0\n54    27.123196   -82.306366  ...   -82.362503       20.0\n55    27.262135   -82.523254  ...   -82.570297       23.0\n57    27.367142   -82.504240  ...   -82.479698       11.0\n58    27.191406   -81.324100  ...   -81.340302       13.0\n60    27.472190   -82.485200  ...   -82.521896       13.0\n61    27.126205   -80.244660  ...   -80.240692       13.0\n63    27.594150   -82.584690  ...   -82.545799       17.0\n66    27.354744   -80.318480  ...   -80.311035       14.0\n67    28.820580   -97.060974  ...   -97.005600        7.0\n68    27.837933   -82.784580  ...   -82.739998       14.0\n70    27.787518   -82.427734  ...   -82.465599       14.0\n74    27.943192   -82.765780  ...   -82.736099       13.0\n75    27.909664   -82.527530  ...   -82.538300       14.0\n79    27.892704   -82.408480  ...   -82.454697       13.0\n80    29.023174   -95.471310  ...   -95.473602        1.0\n82    28.048492   -82.746950  ...   -82.700798       11.0\n85    27.980778   -82.270020  ...   -82.230614        7.0\n86    27.946102   -82.031890  ...   -82.000298       10.0\n91    28.153816   -82.728030  ...   -82.757797        0.0\n92    28.051258   -82.012085  ...   -81.971901        8.0\n93    27.812168   -80.467410  ...   -80.455399       15.0\n95    29.240390   -98.287600  ...   -98.311699        3.0\n97    29.226238   -94.854250  ...   -94.856400       18.0\n104   28.313725   -82.330960  ...   -82.305603        8.0\n105   28.060188   -80.661350  ...   -80.628304       12.0\n\n[36 rows x 24 columns]\nchunk :         Latitude   Longitude  YYYYMMDDHH  ...  month  day  hours\n20000  28.763401 -109.041504  2021080112  ...      8    1     12\n20001  28.777440 -108.920654  2021080112  ...      8    1     12\n20002  28.791344 -108.799774  2021080112  ...      8    1     12\n20003  28.805122 -108.678830  2021080112  ...      8    1     12\n20004  28.818733 -108.557860  2021080112  ...      8    1     12\n...          ...         ...         ...  ...    ...  ...    ...\n29995  29.627544  -75.544680  2021080112  ...      8    1     12\n29996  29.602425  -75.424930  2021080112  ...      8    1     12\n29997  29.577171  -75.305240  2021080112  ...      8    1     12\n29998  29.551777  -75.185610  2021080112  ...      8    1     12\n29999  29.526234  -75.066070  2021080112  ...      8    1     12\n\n[10000 rows x 17 columns]\nmerge_training_data.py:21: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:37: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nfinal_chunk_df      Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n0     29.277943  -103.200320  ...  -103.178101       23.0\n7     28.313519   -81.593690  ...   -81.636703        9.0\n8     29.556270   -98.662140  ...   -98.620003        7.0\n13    29.556270   -95.337860  ...   -95.392502        0.0\n18    29.549755   -94.968600  ...   -95.015602        3.0\n..          ...          ...  ...          ...        ...\n192   30.248066   -81.461365  ...   -81.453300       28.0\n193   30.892830   -85.637210  ...   -85.604401       17.0\n194   30.408016   -81.808105  ...   -81.840790       22.0\n199   31.609673   -97.063200  ...   -97.070602        8.0\n201   30.477814   -81.541720  ...   -81.586899       29.0\n\n[86 rows x 24 columns]\nchunk :         Latitude  Longitude  YYYYMMDDHH  ...  month  day  hours\n30000  29.500584 -74.946594  2021080112  ...      8    1     12\n30001  29.474789 -74.827210  2021080112  ...      8    1     12\n30002  29.448845 -74.707920  2021080112  ...      8    1     12\n30003  29.422783 -74.588684  2021080112  ...      8    1     12\n30004  29.396576 -74.469540  2021080112  ...      8    1     12\n...          ...        ...         ...  ...    ...  ...    ...\n39995  34.304348 -96.148895  2021080112  ...      8    1     12\n39996  34.303250 -96.017975  2021080112  ...      8    1     12\n39997  34.302010 -95.887054  2021080112  ...      8    1     12\n39998  34.300617 -95.756134  2021080112  ...      8    1     12\n39999  34.299060 -95.625210  2021080112  ...      8    1     12\n\n[10000 rows x 17 columns]\nmerge_training_data.py:21: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:37: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nfinal_chunk_df      Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n4     31.634686  -106.308914  ...  -106.287743       26.0\n7     32.038914   -96.428070  ...   -96.399200        9.0\n11    31.730682  -106.447784  ...  -106.402802       22.0\n13    31.730682  -106.447784  ...  -106.501114       30.0\n17    31.730682  -106.447784  ...  -106.455002       33.0\n..          ...          ...  ...          ...        ...\n173   32.616135  -115.503204  ...  -115.504204        0.0\n177   33.256145  -111.328400  ...  -111.292801       43.0\n179   33.960266   -89.758514  ...   -89.799004       15.0\n180   33.448830   -84.205930  ...   -84.161697       19.0\n187   33.293674  -111.859070  ...  -111.884300       17.0\n\n[68 rows x 24 columns]\nchunk :         Latitude  Longitude  YYYYMMDDHH  ...  month  day  hours\n40000  34.297337  -95.49429  2021080112  ...      8    1     12\n40001  34.295464  -95.36340  2021080112  ...      8    1     12\n40002  34.293440  -95.23248  2021080112  ...      8    1     12\n40003  34.291264  -95.10162  2021080112  ...      8    1     12\n40004  34.288920  -94.97073  2021080112  ...      8    1     12\n...          ...        ...         ...  ...    ...  ...    ...\n49995  34.773323 -118.20764  2021080112  ...      8    1     12\n49996  34.798280 -118.07941  2021080112  ...      8    1     12\n49997  34.823086 -117.95108  2021080112  ...      8    1     12\n49998  34.847736 -117.82269  2021080112  ...      8    1     12\n49999  34.872257 -117.69420  2021080112  ...      8    1     12\n\n[10000 rows x 17 columns]\nmerge_training_data.py:21: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:37: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nfinal_chunk_df      Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n0     33.841225    -86.89383  ...   -86.942497       11.0\n1     33.540535    -84.05939  ...   -84.066704       16.0\n3     32.912480    -79.60388  ...   -79.656998       34.0\n6     32.578003   -116.93384  ...  -116.929489       10.0\n15    33.382553   -112.00775  ...  -112.073097       14.0\n..          ...          ...  ...          ...        ...\n336   36.219997    -86.69931  ...   -86.744400       20.0\n338   35.958614    -84.17151  ...   -84.223099       26.0\n345   35.181824    -78.65912  ...   -78.728035       22.0\n346   34.435528   -119.86667  ...  -119.827797        5.0\n347   34.462390   -119.73958  ...  -119.690910        8.0\n\n[171 rows x 24 columns]\nchunk :         Latitude   Longitude  YYYYMMDDHH  ...  month  day  hours\n50000   Latitude   Longitude  YYYYMMDDHH  ...  month  day  hours\n50001  34.896618  -117.56563  2021080112  ...      8    1     12\n50002   34.92083  -117.43698  2021080112  ...      8    1     12\n50003    34.9449  -117.30823  2021080112  ...      8    1     12\n50004  34.968807  -117.17941  2021080112  ...      8    1     12\n...          ...         ...         ...  ...    ...  ...    ...\n59995   38.07941   -80.99509  2021080112  ...      8    1     12\n59996  38.060326  -80.859375  2021080112  ...      8    1     12\n59997  38.041073  -80.723755  2021080112  ...      8    1     12\n59998   38.02166   -80.58823  2021080112  ...      8    1     12\n59999  38.002098   -80.45276  2021080112  ...      8    1     12\n\n[10000 rows x 17 columns]\nTraceback (most recent call last):\n  File \"merge_training_data.py\", line 18, in <module>\n    chunk['Latitude'] = chunk['Latitude'].astype(float)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/generic.py\", line 5920, in astype\n    new_data = self._mgr.astype(dtype=dtype, copy=copy, errors=errors)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/internals/managers.py\", line 419, in astype\n    return self.apply(\"astype\", dtype=dtype, copy=copy, errors=errors)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/internals/managers.py\", line 304, in apply\n    applied = getattr(b, f)(**kwargs)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/internals/blocks.py\", line 580, in astype\n    new_values = astype_array_safe(values, dtype, copy=copy, errors=errors)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/dtypes/cast.py\", line 1292, in astype_array_safe\n    new_values = astype_array(values, dtype, copy=copy)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/dtypes/cast.py\", line 1237, in astype_array\n    values = astype_nansafe(values, dtype, copy=copy)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/dtypes/cast.py\", line 1181, in astype_nansafe\n    return arr.astype(dtype, copy=True)\nValueError: could not convert string to float: 'Latitude'\n",
  "history_begin_time" : 1664127207277,
  "history_end_time" : 1664127300367,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "kp12VOjwhjXn",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation_one_year.csv\")\nprint(\"obs head: \", obs.columns, obs.head())\nref_stations=pd.read_csv(f\"{cmaq_folder}/updated_station_to_cell.csv\")\nprint(\"ref_stations head: \", ref_stations.columns, ref_stations.head())\n\nprint(\"obs shape: \", obs.shape)\nprint(\"ref_station shape: \", ref_stations.shape)\n\nchunksize = 10000\ncount = 0\nwith pd.read_csv(\"/groups/ESS3/aalnaim/cmaq/merged_cmaq_one_year.csv\", chunksize=chunksize) as reader:\n  for chunk in reader:\n    #print(\"chunk :\", chunk)\n    chunk['Latitude'] = chunk['Latitude'].astype(float)\n    chunk['Longitude'] = chunk['Longitude'].astype(float)\n    new_df = pd.merge(chunk,  ref_stations, how='left', left_on=['Latitude','Longitude'], right_on = ['Lat_cmaq','Lon_cmaq'])\n    new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\n    #print(\"new_df after merge ref shape: \", new_df[['Lat_cmaq','Latitude','Lat_airnow','YYYYMMDDHH']].head(), new_df.shape)\n    #new_df.to_csv(f\"{cmaq_folder}/subset.csv\")\n    chunk_final = pd.merge(new_df, obs, how='left', left_on=['Lat_airnow','Lon_airnow','YYYYMMDDHH'], right_on = ['Latitude','Longitude','YYYYMMDDHH'])\n    #print(\"new_df after merge all three shape: \", chunk_final[['Lat_airnow','Lon_airnow','YYYYMMDDHH']].head(), chunk_final.shape)\n    #test_obs_merge = pd.merge(obs,  ref_stations, how='left', left_on=['Latitude','Longitude'], right_on = ['Lat_airnow','Lon_airnow'])\n    #print(\"test_obs_merge shape:\", test_obs_merge.shape, test_obs_merge[[\"Latitude\", \"Lat_airnow\"]].head())\n    #chunk_final=chunk_final.drop_duplicates(keep=False)\n    #training_data = chunk_final.loc[:,~chunk_final.columns.duplicated()]\n\n    chunk_final['YYYYMMDDHH'] = chunk_final['YYYYMMDDHH'].map(str)\n    chunk_final['month'] = chunk_final['YYYYMMDDHH'].str[4:6]\n    chunk_final['day'] = chunk_final['YYYYMMDDHH'].str[6:8]\n    chunk_final['hours'] = chunk_final['YYYYMMDDHH'].str[8:10]\n    new_chunk_df=chunk_final.drop(['YYYYMMDDHH'],axis=1)\n    #print(new_chunk_df.head())\n    final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\n    \n    print(\"final_chunk_df\", final_chunk_df)\n    count += 1\n    if count == 10:\n      break\n    final_chunk_df.to_csv(f\"{cmaq_folder}/training_new_one_year_valid.csv\",mode='a',index=False, header=False)\n    \n    \nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/training_new_one_year_valid.csv\")\n\n\n",
  "history_output" : "obs head:  Index(['StationID', 'Latitude', 'Longitude', 'AirNOW_O3', 'YYYYMMDDHH'], dtype='object')    StationID   Latitude   Longitude  AirNOW_O3  YYYYMMDDHH\n0  483951076  31.168888  -96.481941     -999.0  2021080112\n1  080699991  40.277802 -105.545303     -999.0  2021080112\n2  530639995  47.808228 -117.343269     -999.0  2021080112\n3  530639997  47.663963 -117.257652     -999.0  2021080112\n4  530639996  47.660568 -117.084503     -999.0  2021080112\nref_stations head:  Index(['Lat_airnow', 'Lon_airnow', 'Lat_cmaq', 'Lon_cmaq'], dtype='object')    Lat_airnow  Lon_airnow   Lat_cmaq   Lon_cmaq\n0   31.169399  -81.496399  31.131332 -81.537930\n1   42.062199  -87.673599  42.088024 -87.710205\n2   39.758900  -86.397202  39.801613 -86.452760\n3   40.931396  -81.123520  40.971100 -81.189270\n4   43.435001  -88.527802  43.455270 -88.565704\nobs shape:  (15279463, 5)\nref_station shape:  (2833, 4)\nmerge_training_data.py:20: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nfinal_chunk_df     Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n10   26.157295    -97.76709  ...   -97.712502        8.0\n11   26.258575    -98.24072  ...   -98.291069       10.0\n\n[2 rows x 24 columns]\nmerge_training_data.py:20: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:36: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nfinal_chunk_df      Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n3     25.628311   -80.315060  ...   -80.326897        7.0\n4     25.712883   -80.178250  ...   -80.162201       19.0\n12    26.285812   -81.739590  ...   -81.720001       18.0\n13    26.063736   -80.344910  ...   -80.338600       12.0\n14    26.044365   -80.229004  ...   -80.257607       12.0\n21    26.128952   -80.091400  ...   -80.111397       13.0\n23    26.530144   -81.933750  ...   -81.979698       14.0\n26    26.233055   -80.069550  ...   -80.096901       17.0\n30    27.752789   -97.421265  ...   -97.434250        9.0\n39    27.858750   -97.542360  ...   -97.555801        7.0\n50    26.565243   -80.120180  ...   -80.058914       15.0\n54    27.123196   -82.306366  ...   -82.362503       20.0\n55    27.262135   -82.523254  ...   -82.570297       23.0\n57    27.367142   -82.504240  ...   -82.479698       11.0\n58    27.191406   -81.324100  ...   -81.340302       13.0\n60    27.472190   -82.485200  ...   -82.521896       13.0\n61    27.126205   -80.244660  ...   -80.240692       13.0\n63    27.594150   -82.584690  ...   -82.545799       17.0\n66    27.354744   -80.318480  ...   -80.311035       14.0\n67    28.820580   -97.060974  ...   -97.005600        7.0\n68    27.837933   -82.784580  ...   -82.739998       14.0\n70    27.787518   -82.427734  ...   -82.465599       14.0\n74    27.943192   -82.765780  ...   -82.736099       13.0\n75    27.909664   -82.527530  ...   -82.538300       14.0\n79    27.892704   -82.408480  ...   -82.454697       13.0\n80    29.023174   -95.471310  ...   -95.473602        1.0\n82    28.048492   -82.746950  ...   -82.700798       11.0\n85    27.980778   -82.270020  ...   -82.230614        7.0\n86    27.946102   -82.031890  ...   -82.000298       10.0\n91    28.153816   -82.728030  ...   -82.757797        0.0\n92    28.051258   -82.012085  ...   -81.971901        8.0\n93    27.812168   -80.467410  ...   -80.455399       15.0\n95    29.240390   -98.287600  ...   -98.311699        3.0\n97    29.226238   -94.854250  ...   -94.856400       18.0\n104   28.313725   -82.330960  ...   -82.305603        8.0\n105   28.060188   -80.661350  ...   -80.628304       12.0\n\n[36 rows x 24 columns]\nmerge_training_data.py:20: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:36: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nfinal_chunk_df      Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n0     29.277943  -103.200320  ...  -103.178101       23.0\n7     28.313519   -81.593690  ...   -81.636703        9.0\n8     29.556270   -98.662140  ...   -98.620003        7.0\n13    29.556270   -95.337860  ...   -95.392502        0.0\n18    29.549755   -94.968600  ...   -95.015602        3.0\n..          ...          ...  ...          ...        ...\n192   30.248066   -81.461365  ...   -81.453300       28.0\n193   30.892830   -85.637210  ...   -85.604401       17.0\n194   30.408016   -81.808105  ...   -81.840790       22.0\n199   31.609673   -97.063200  ...   -97.070602        8.0\n201   30.477814   -81.541720  ...   -81.586899       29.0\n\n[86 rows x 24 columns]\nmerge_training_data.py:20: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:36: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nfinal_chunk_df      Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n4     31.634686  -106.308914  ...  -106.287743       26.0\n7     32.038914   -96.428070  ...   -96.399200        9.0\n11    31.730682  -106.447784  ...  -106.402802       22.0\n13    31.730682  -106.447784  ...  -106.501114       30.0\n17    31.730682  -106.447784  ...  -106.455002       33.0\n..          ...          ...  ...          ...        ...\n173   32.616135  -115.503204  ...  -115.504204        0.0\n177   33.256145  -111.328400  ...  -111.292801       43.0\n179   33.960266   -89.758514  ...   -89.799004       15.0\n180   33.448830   -84.205930  ...   -84.161697       19.0\n187   33.293674  -111.859070  ...  -111.884300       17.0\n\n[68 rows x 24 columns]\nmerge_training_data.py:20: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:36: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nfinal_chunk_df      Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n0     33.841225    -86.89383  ...   -86.942497       11.0\n1     33.540535    -84.05939  ...   -84.066704       16.0\n3     32.912480    -79.60388  ...   -79.656998       34.0\n6     32.578003   -116.93384  ...  -116.929489       10.0\n15    33.382553   -112.00775  ...  -112.073097       14.0\n..          ...          ...  ...          ...        ...\n336   36.219997    -86.69931  ...   -86.744400       20.0\n338   35.958614    -84.17151  ...   -84.223099       26.0\n345   35.181824    -78.65912  ...   -78.728035       22.0\n346   34.435528   -119.86667  ...  -119.827797        5.0\n347   34.462390   -119.73958  ...  -119.690910        8.0\n\n[171 rows x 24 columns]\nTraceback (most recent call last):\n  File \"merge_training_data.py\", line 17, in <module>\n    chunk['Latitude'] = chunk['Latitude'].astype(float)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/generic.py\", line 5920, in astype\n    new_data = self._mgr.astype(dtype=dtype, copy=copy, errors=errors)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/internals/managers.py\", line 419, in astype\n    return self.apply(\"astype\", dtype=dtype, copy=copy, errors=errors)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/internals/managers.py\", line 304, in apply\n    applied = getattr(b, f)(**kwargs)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/internals/blocks.py\", line 580, in astype\n    new_values = astype_array_safe(values, dtype, copy=copy, errors=errors)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/dtypes/cast.py\", line 1292, in astype_array_safe\n    new_values = astype_array(values, dtype, copy=copy)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/dtypes/cast.py\", line 1237, in astype_array\n    values = astype_nansafe(values, dtype, copy=copy)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/dtypes/cast.py\", line 1181, in astype_nansafe\n    return arr.astype(dtype, copy=True)\nValueError: could not convert string to float: 'Latitude'\n",
  "history_begin_time" : 1664127044152,
  "history_end_time" : 1664127136759,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "wchFIUKUMs8D",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation_one_year.csv\")\nprint(\"obs head: \", obs.columns, obs.head())\nref_stations=pd.read_csv(f\"{cmaq_folder}/updated_station_to_cell.csv\")\nprint(\"ref_stations head: \", ref_stations.columns, ref_stations.head())\n\nprint(\"obs shape: \", obs.shape)\nprint(\"ref_station shape: \", ref_stations.shape)\n\nchunksize = 10000\ncount = 0\nwith pd.read_csv(\"/groups/ESS3/aalnaim/cmaq/merged_cmaq_one_year.csv\", chunksize=chunksize) as reader:\n  for chunk in reader:\n    #print(\"chunk :\", chunk)\n    new_df = pd.merge(chunk,  ref_stations, how='left', left_on=['Latitude','Longitude'], right_on = ['Lat_cmaq','Lon_cmaq'])\n    new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\n    #print(\"new_df after merge ref shape: \", new_df[['Lat_cmaq','Latitude','Lat_airnow','YYYYMMDDHH']].head(), new_df.shape)\n    #new_df.to_csv(f\"{cmaq_folder}/subset.csv\")\n    chunk_final = pd.merge(new_df, obs, how='left', left_on=['Lat_airnow','Lon_airnow','YYYYMMDDHH'], right_on = ['Latitude','Longitude','YYYYMMDDHH'])\n    #print(\"new_df after merge all three shape: \", chunk_final[['Lat_airnow','Lon_airnow','YYYYMMDDHH']].head(), chunk_final.shape)\n    #test_obs_merge = pd.merge(obs,  ref_stations, how='left', left_on=['Latitude','Longitude'], right_on = ['Lat_airnow','Lon_airnow'])\n    #print(\"test_obs_merge shape:\", test_obs_merge.shape, test_obs_merge[[\"Latitude\", \"Lat_airnow\"]].head())\n    #chunk_final=chunk_final.drop_duplicates(keep=False)\n    #training_data = chunk_final.loc[:,~chunk_final.columns.duplicated()]\n\n    chunk_final['YYYYMMDDHH'] = chunk_final['YYYYMMDDHH'].map(str)\n    chunk_final['month'] = chunk_final['YYYYMMDDHH'].str[4:6]\n    chunk_final['day'] = chunk_final['YYYYMMDDHH'].str[6:8]\n    chunk_final['hours'] = chunk_final['YYYYMMDDHH'].str[8:10]\n    new_chunk_df=chunk_final.drop(['YYYYMMDDHH'],axis=1)\n    #print(new_chunk_df.head())\n    final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\n    \n    print(\"final_chunk_df\", final_chunk_df)\n    count += 1\n    if count == 10:\n      break\n    final_chunk_df.to_csv(f\"{cmaq_folder}/training_new_one_year_valid.csv\",mode='a',index=False, header=False)\n    \n    \nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/training_new_one_year_valid.csv\")\n\n\n",
  "history_output" : "obs head:  Index(['StationID', 'Latitude', 'Longitude', 'AirNOW_O3', 'YYYYMMDDHH'], dtype='object')    StationID   Latitude   Longitude  AirNOW_O3  YYYYMMDDHH\n0  483951076  31.168888  -96.481941     -999.0  2021080112\n1  080699991  40.277802 -105.545303     -999.0  2021080112\n2  530639995  47.808228 -117.343269     -999.0  2021080112\n3  530639997  47.663963 -117.257652     -999.0  2021080112\n4  530639996  47.660568 -117.084503     -999.0  2021080112\nref_stations head:  Index(['Lat_airnow', 'Lon_airnow', 'Lat_cmaq', 'Lon_cmaq'], dtype='object')    Lat_airnow  Lon_airnow   Lat_cmaq   Lon_cmaq\n0   31.169399  -81.496399  31.131332 -81.537930\n1   42.062199  -87.673599  42.088024 -87.710205\n2   39.758900  -86.397202  39.801613 -86.452760\n3   40.931396  -81.123520  40.971100 -81.189270\n4   43.435001  -88.527802  43.455270 -88.565704\nobs shape:  (15279463, 5)\nref_station shape:  (2833, 4)\nmerge_training_data.py:18: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nfinal_chunk_df     Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n10   26.157295    -97.76709  ...   -97.712502        8.0\n11   26.258575    -98.24072  ...   -98.291069       10.0\n\n[2 rows x 24 columns]\nmerge_training_data.py:18: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nfinal_chunk_df      Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n3     25.628311   -80.315060  ...   -80.326897        7.0\n4     25.712883   -80.178250  ...   -80.162201       19.0\n12    26.285812   -81.739590  ...   -81.720001       18.0\n13    26.063736   -80.344910  ...   -80.338600       12.0\n14    26.044365   -80.229004  ...   -80.257607       12.0\n21    26.128952   -80.091400  ...   -80.111397       13.0\n23    26.530144   -81.933750  ...   -81.979698       14.0\n26    26.233055   -80.069550  ...   -80.096901       17.0\n30    27.752789   -97.421265  ...   -97.434250        9.0\n39    27.858750   -97.542360  ...   -97.555801        7.0\n50    26.565243   -80.120180  ...   -80.058914       15.0\n54    27.123196   -82.306366  ...   -82.362503       20.0\n55    27.262135   -82.523254  ...   -82.570297       23.0\n57    27.367142   -82.504240  ...   -82.479698       11.0\n58    27.191406   -81.324100  ...   -81.340302       13.0\n60    27.472190   -82.485200  ...   -82.521896       13.0\n61    27.126205   -80.244660  ...   -80.240692       13.0\n63    27.594150   -82.584690  ...   -82.545799       17.0\n66    27.354744   -80.318480  ...   -80.311035       14.0\n67    28.820580   -97.060974  ...   -97.005600        7.0\n68    27.837933   -82.784580  ...   -82.739998       14.0\n70    27.787518   -82.427734  ...   -82.465599       14.0\n74    27.943192   -82.765780  ...   -82.736099       13.0\n75    27.909664   -82.527530  ...   -82.538300       14.0\n79    27.892704   -82.408480  ...   -82.454697       13.0\n80    29.023174   -95.471310  ...   -95.473602        1.0\n82    28.048492   -82.746950  ...   -82.700798       11.0\n85    27.980778   -82.270020  ...   -82.230614        7.0\n86    27.946102   -82.031890  ...   -82.000298       10.0\n91    28.153816   -82.728030  ...   -82.757797        0.0\n92    28.051258   -82.012085  ...   -81.971901        8.0\n93    27.812168   -80.467410  ...   -80.455399       15.0\n95    29.240390   -98.287600  ...   -98.311699        3.0\n97    29.226238   -94.854250  ...   -94.856400       18.0\n104   28.313725   -82.330960  ...   -82.305603        8.0\n105   28.060188   -80.661350  ...   -80.628304       12.0\n\n[36 rows x 24 columns]\nmerge_training_data.py:18: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nfinal_chunk_df      Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n0     29.277943  -103.200320  ...  -103.178101       23.0\n7     28.313519   -81.593690  ...   -81.636703        9.0\n8     29.556270   -98.662140  ...   -98.620003        7.0\n13    29.556270   -95.337860  ...   -95.392502        0.0\n18    29.549755   -94.968600  ...   -95.015602        3.0\n..          ...          ...  ...          ...        ...\n192   30.248066   -81.461365  ...   -81.453300       28.0\n193   30.892830   -85.637210  ...   -85.604401       17.0\n194   30.408016   -81.808105  ...   -81.840790       22.0\n199   31.609673   -97.063200  ...   -97.070602        8.0\n201   30.477814   -81.541720  ...   -81.586899       29.0\n\n[86 rows x 24 columns]\nmerge_training_data.py:18: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nfinal_chunk_df      Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n4     31.634686  -106.308914  ...  -106.287743       26.0\n7     32.038914   -96.428070  ...   -96.399200        9.0\n11    31.730682  -106.447784  ...  -106.402802       22.0\n13    31.730682  -106.447784  ...  -106.501114       30.0\n17    31.730682  -106.447784  ...  -106.455002       33.0\n..          ...          ...  ...          ...        ...\n173   32.616135  -115.503204  ...  -115.504204        0.0\n177   33.256145  -111.328400  ...  -111.292801       43.0\n179   33.960266   -89.758514  ...   -89.799004       15.0\n180   33.448830   -84.205930  ...   -84.161697       19.0\n187   33.293674  -111.859070  ...  -111.884300       17.0\n\n[68 rows x 24 columns]\nmerge_training_data.py:18: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nfinal_chunk_df      Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n0     33.841225    -86.89383  ...   -86.942497       11.0\n1     33.540535    -84.05939  ...   -84.066704       16.0\n3     32.912480    -79.60388  ...   -79.656998       34.0\n6     32.578003   -116.93384  ...  -116.929489       10.0\n15    33.382553   -112.00775  ...  -112.073097       14.0\n..          ...          ...  ...          ...        ...\n336   36.219997    -86.69931  ...   -86.744400       20.0\n338   35.958614    -84.17151  ...   -84.223099       26.0\n345   35.181824    -78.65912  ...   -78.728035       22.0\n346   34.435528   -119.86667  ...  -119.827797        5.0\n347   34.462390   -119.73958  ...  -119.690910        8.0\n\n[171 rows x 24 columns]\nTraceback (most recent call last):\n  File \"merge_training_data.py\", line 17, in <module>\n    new_df = pd.merge(chunk,  ref_stations, how='left', left_on=['Latitude','Longitude'], right_on = ['Lat_cmaq','Lon_cmaq'])\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/reshape/merge.py\", line 107, in merge\n    op = _MergeOperation(\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/reshape/merge.py\", line 704, in __init__\n    self._maybe_coerce_merge_keys()\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/reshape/merge.py\", line 1257, in _maybe_coerce_merge_keys\n    raise ValueError(msg)\nValueError: You are trying to merge on object and float64 columns. If you wish to proceed you should use pd.concat\n",
  "history_begin_time" : 1664126833799,
  "history_end_time" : 1664126926260,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "V9fGhn6ZmZIm",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation_one_year.csv\")\nprint(\"obs head: \", obs.columns, obs.head())\nref_stations=pd.read_csv(f\"{cmaq_folder}/updated_station_to_cell.csv\")\nprint(\"ref_stations head: \", ref_stations.columns, ref_stations.head())\n\nprint(\"obs shape: \", obs.shape)\nprint(\"ref_station shape: \", ref_stations.shape)\n\nchunksize = 10000\ncount = 0\nwith pd.read_csv(\"/groups/ESS3/aalnaim/cmaq/merged_cmaq_one_year.csv\", chunksize=chunksize) as reader:\n  for chunk in reader:\n    #print(\"chunk :\", chunk)\n    new_df = pd.merge(chunk,  ref_stations, how='left', left_on=['Latitude','Longitude'], right_on = ['Lat_cmaq','Lon_cmaq'])\n    new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\n    #print(\"new_df after merge ref shape: \", new_df[['Lat_cmaq','Latitude','Lat_airnow','YYYYMMDDHH']].head(), new_df.shape)\n    #new_df.to_csv(f\"{cmaq_folder}/subset.csv\")\n    chunk_final = pd.merge(new_df, obs, how='left', left_on=['Lat_airnow','Lon_airnow','YYYYMMDDHH'], right_on = ['Latitude','Longitude','YYYYMMDDHH'])\n    #print(\"new_df after merge all three shape: \", chunk_final[['Lat_airnow','Lon_airnow','YYYYMMDDHH']].head(), chunk_final.shape)\n    #test_obs_merge = pd.merge(obs,  ref_stations, how='left', left_on=['Latitude','Longitude'], right_on = ['Lat_airnow','Lon_airnow'])\n    #print(\"test_obs_merge shape:\", test_obs_merge.shape, test_obs_merge[[\"Latitude\", \"Lat_airnow\"]].head())\n    #chunk_final=chunk_final.drop_duplicates(keep=False)\n    #training_data = chunk_final.loc[:,~chunk_final.columns.duplicated()]\n\n    chunk_final['YYYYMMDDHH'] = chunk_final['YYYYMMDDHH'].map(str)\n    chunk_final['month'] = chunk_final['YYYYMMDDHH'].str[4:6]\n    chunk_final['day'] = chunk_final['YYYYMMDDHH'].str[6:8]\n    chunk_final['hours'] = chunk_final['YYYYMMDDHH'].str[8:10]\n    new_chunk_df=chunk_final.drop(['YYYYMMDDHH'],axis=1)\n    #print(new_chunk_df.head())\n    final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\n    \n    #print(\"final_chunk_df\", final_chunk_df)\n    count += 1\n    if count == 10:\n      break\n    final_chunk_df.to_csv(f\"{cmaq_folder}/training_new_one_year_valid.csv\",mode='a',index=False, header=False)\n    \n    \nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/training_new_one_year_valid.csv\")\n\n\n",
  "history_output" : "obs head:  Index(['StationID', 'Latitude', 'Longitude', 'AirNOW_O3', 'YYYYMMDDHH'], dtype='object')    StationID   Latitude   Longitude  AirNOW_O3  YYYYMMDDHH\n0  483951076  31.168888  -96.481941     -999.0  2021080112\n1  080699991  40.277802 -105.545303     -999.0  2021080112\n2  530639995  47.808228 -117.343269     -999.0  2021080112\n3  530639997  47.663963 -117.257652     -999.0  2021080112\n4  530639996  47.660568 -117.084503     -999.0  2021080112\nref_stations head:  Index(['Lat_airnow', 'Lon_airnow', 'Lat_cmaq', 'Lon_cmaq'], dtype='object')    Lat_airnow  Lon_airnow   Lat_cmaq   Lon_cmaq\n0   31.169399  -81.496399  31.131332 -81.537930\n1   42.062199  -87.673599  42.088024 -87.710205\n2   39.758900  -86.397202  39.801613 -86.452760\n3   40.931396  -81.123520  40.971100 -81.189270\n4   43.435001  -88.527802  43.455270 -88.565704\nobs shape:  (15279463, 5)\nref_station shape:  (2833, 4)\nmerge_training_data.py:18: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:18: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:18: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:18: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nmerge_training_data.py:18: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nmerge_training_data.py:34: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nTraceback (most recent call last):\n  File \"merge_training_data.py\", line 17, in <module>\n    new_df = pd.merge(chunk,  ref_stations, how='left', left_on=['Latitude','Longitude'], right_on = ['Lat_cmaq','Lon_cmaq'])\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/reshape/merge.py\", line 107, in merge\n    op = _MergeOperation(\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/reshape/merge.py\", line 704, in __init__\n    self._maybe_coerce_merge_keys()\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/reshape/merge.py\", line 1257, in _maybe_coerce_merge_keys\n    raise ValueError(msg)\nValueError: You are trying to merge on object and float64 columns. If you wish to proceed you should use pd.concat\n",
  "history_begin_time" : 1664126692129,
  "history_end_time" : 1664126783519,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "Ng3fUeooftYO",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation_one_year.csv\")\nprint(\"obs head: \", obs.columns, obs.head())\nref_stations=pd.read_csv(f\"{cmaq_folder}/updated_station_to_cell.csv\")\nprint(\"ref_stations head: \", ref_stations.columns, ref_stations.head())\n\nprint(\"obs shape: \", obs.shape)\nprint(\"ref_station shape: \", ref_stations.shape)\n\nchunksize = 10000\ncount = 0\nwith pd.read_csv(\"/groups/ESS3/aalnaim/cmaq/merged_cmaq_one_year.csv\", chunksize=chunksize) as reader:\n  for chunk in reader:\n    #print(\"chunk :\", chunk)\n    new_df = pd.merge(chunk,  ref_stations, how='left', left_on=['Latitude','Longitude'], right_on = ['Lat_cmaq','Lon_cmaq'])\n    new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\n    #print(\"new_df after merge ref shape: \", new_df[['Lat_cmaq','Latitude','Lat_airnow','YYYYMMDDHH']].head(), new_df.shape)\n    #new_df.to_csv(f\"{cmaq_folder}/subset.csv\")\n    chunk_final = pd.merge(new_df, obs, how='left', left_on=['Lat_airnow','Lon_airnow','YYYYMMDDHH'], right_on = ['Latitude','Longitude','YYYYMMDDHH'])\n    #print(\"new_df after merge all three shape: \", chunk_final[['Lat_airnow','Lon_airnow','YYYYMMDDHH']].head(), chunk_final.shape)\n    #test_obs_merge = pd.merge(obs,  ref_stations, how='left', left_on=['Latitude','Longitude'], right_on = ['Lat_airnow','Lon_airnow'])\n    #print(\"test_obs_merge shape:\", test_obs_merge.shape, test_obs_merge[[\"Latitude\", \"Lat_airnow\"]].head())\n    #chunk_final=chunk_final.drop_duplicates(keep=False)\n    #training_data = chunk_final.loc[:,~chunk_final.columns.duplicated()]\n\n    chunk_final['YYYYMMDDHH'] = chunk_final['YYYYMMDDHH'].map(str)\n    chunk_final['month'] = chunk_final['YYYYMMDDHH'].str[4:6]\n    chunk_final['day'] = chunk_final['YYYYMMDDHH'].str[6:8]\n    chunk_final['hours'] = chunk_final['YYYYMMDDHH'].str[8:10]\n    new_chunk_df=chunk_final.drop(['YYYYMMDDHH'],axis=1)\n    #print(new_chunk_df.head())\n    final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\n    \n    #print(\"final_chunk_df\", final_chunk_df)\n    count += 1\n    if count == 10:\n      break\n    final_df.to_csv(f\"{cmaq_folder}/training_new_one_year_valid.csv\",mode='a',index=False, header=False)\n    \n    \nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/trainingNew.csv\")\n\n\n",
  "history_output" : "obs head:  Index(['StationID', 'Latitude', 'Longitude', 'AirNOW_O3', 'YYYYMMDDHH'], dtype='object')    StationID   Latitude   Longitude  AirNOW_O3  YYYYMMDDHH\n0  483951076  31.168888  -96.481941     -999.0  2021080112\n1  080699991  40.277802 -105.545303     -999.0  2021080112\n2  530639995  47.808228 -117.343269     -999.0  2021080112\n3  530639997  47.663963 -117.257652     -999.0  2021080112\n4  530639996  47.660568 -117.084503     -999.0  2021080112\nref_stations head:  Index(['Lat_airnow', 'Lon_airnow', 'Lat_cmaq', 'Lon_cmaq'], dtype='object')    Lat_airnow  Lon_airnow   Lat_cmaq   Lon_cmaq\n0   31.169399  -81.496399  31.131332 -81.537930\n1   42.062199  -87.673599  42.088024 -87.710205\n2   39.758900  -86.397202  39.801613 -86.452760\n3   40.931396  -81.123520  40.971100 -81.189270\n4   43.435001  -88.527802  43.455270 -88.565704\nobs shape:  (15279463, 5)\nref_station shape:  (2833, 4)\nmerge_training_data.py:18: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nTraceback (most recent call last):\n  File \"merge_training_data.py\", line 40, in <module>\n    final_df.to_csv(f\"{cmaq_folder}/training_new_one_year_valid.csv\",mode='a',index=False, header=False)\nNameError: name 'final_df' is not defined\n",
  "history_begin_time" : 1664126602789,
  "history_end_time" : 1664126668449,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "67LHDXM8eSoy",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation_one_year.csv\")\nprint(\"obs head: \", obs.columns, obs.head())\nref_stations=pd.read_csv(f\"{cmaq_folder}/updated_station_to_cell.csv\")\nprint(\"ref_stations head: \", ref_stations.columns, ref_stations.head())\n\nprint(\"obs shape: \", obs.shape)\nprint(\"ref_station shape: \", ref_stations.shape)\n\nchunksize = 10000\nwith pd.read_csv(\"/groups/ESS3/aalnaim/cmaq/merged_cmaq_one_year.csv\", chunksize=chunksize) as reader:\n  for chunk in reader:\n    print(\"chunk :\", chunk)\n    new_df = pd.merge(chunk,  ref_stations, how='left', left_on=['Latitude','Longitude'], right_on = ['Lat_cmaq','Lon_cmaq'])\n    new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\n    print(\"new_df after merge ref shape: \", new_df[['Lat_cmaq','Latitude','Lat_airnow','YYYYMMDDHH']].head(), new_df.shape)\n    #new_df.to_csv(f\"{cmaq_folder}/subset.csv\")\n    chunk_final = pd.merge(new_df, obs, how='left', left_on=['Lat_airnow','Lon_airnow','YYYYMMDDHH'], right_on = ['Latitude','Longitude','YYYYMMDDHH'])\n    print(\"new_df after merge all three shape: \", chunk_final[['Lat_airnow','Lon_airnow','YYYYMMDDHH']].head(), chunk_final.shape)\n    test_obs_merge = pd.merge(obs,  ref_stations, how='left', left_on=['Latitude','Longitude'], right_on = ['Lat_airnow','Lon_airnow'])\n    print(\"test_obs_merge shape:\", test_obs_merge.shape, test_obs_merge[[\"Latitude\", \"Lat_airnow\"]].head())\n    #chunk_final=chunk_final.drop_duplicates(keep=False)\n    #training_data = chunk_final.loc[:,~chunk_final.columns.duplicated()]\n\n    chunk_final['YYYYMMDDHH'] = chunk_final['YYYYMMDDHH'].map(str)\n    chunk_final['month'] = chunk_final['YYYYMMDDHH'].str[4:6]\n    chunk_final['day'] = chunk_final['YYYYMMDDHH'].str[6:8]\n    chunk_final['hours'] = chunk_final['YYYYMMDDHH'].str[8:10]\n    new_chunk_df=chunk_final.drop(['YYYYMMDDHH'],axis=1)\n    print(new_chunk_df.head())\n    final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\n    \n    print(\"final_chunk_df\", final_chunk_df)\n    \n    break\n\n#final_df.to_csv(f\"{cmaq_folder}/trainingNew.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/trainingNew.csv\")\n\n\n",
  "history_output" : "obs head:  Index(['StationID', 'Latitude', 'Longitude', 'AirNOW_O3', 'YYYYMMDDHH'], dtype='object')    StationID   Latitude   Longitude  AirNOW_O3  YYYYMMDDHH\n0  483951076  31.168888  -96.481941     -999.0  2021080112\n1  080699991  40.277802 -105.545303     -999.0  2021080112\n2  530639995  47.808228 -117.343269     -999.0  2021080112\n3  530639997  47.663963 -117.257652     -999.0  2021080112\n4  530639996  47.660568 -117.084503     -999.0  2021080112\nref_stations head:  Index(['Lat_airnow', 'Lon_airnow', 'Lat_cmaq', 'Lon_cmaq'], dtype='object')    Lat_airnow  Lon_airnow   Lat_cmaq   Lon_cmaq\n0   31.169399  -81.496399  31.131332 -81.537930\n1   42.062199  -87.673599  42.088024 -87.710205\n2   39.758900  -86.397202  39.801613 -86.452760\n3   40.931396  -81.123520  40.971100 -81.189270\n4   43.435001  -88.527802  43.455270 -88.565704\nobs shape:  (15279463, 5)\nref_station shape:  (2833, 4)\nchunk :        Latitude   Longitude  YYYYMMDDHH  ...  month  day  hours\n0     21.829086 -120.620790  2021080112  ...      8    1     12\n1     21.855751 -120.512500  2021080112  ...      8    1     12\n2     21.882309 -120.404144  2021080112  ...      8    1     12\n3     21.908745 -120.295715  2021080112  ...      8    1     12\n4     21.935051 -120.187225  2021080112  ...      8    1     12\n...         ...         ...         ...  ...    ...  ...    ...\n9995  26.737213  -89.563050  2021080112  ...      8    1     12\n9996  26.728450  -89.444580  2021080112  ...      8    1     12\n9997  26.719570  -89.326170  2021080112  ...      8    1     12\n9998  26.710556  -89.207760  2021080112  ...      8    1     12\n9999  26.701397  -89.089420  2021080112  ...      8    1     12\n\n[10000 rows x 17 columns]\nmerge_training_data.py:17: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  new_df = new_df[new_df.Lat_cmaq.notnull()][new_df.Lat_airnow!=-999]\nnew_df after merge ref shape:         Lat_cmaq   Latitude  Lat_airnow  YYYYMMDDHH\n4599  25.677399  25.677399   25.674999  2021080112\n4600  25.681358  25.681358   25.675550  2021080112\n4601  25.685196  25.685196   25.668329  2021080112\n4602  25.688873  25.688873   25.646111  2021080112\n5040  25.778976  25.778976   25.783430  2021080112 (14, 21)\nnew_df after merge all three shape:     Lat_airnow  Lon_airnow  YYYYMMDDHH\n0   25.674999 -100.458328  2021080112\n1   25.675550 -100.338333  2021080112\n2   25.668329 -100.248329  2021080112\n3   25.646111 -100.095558  2021080112\n4   25.783430 -100.585869  2021080112 (14, 25)\ntest_obs_merge shape: (15497669, 9)     Latitude  Lat_airnow\n0  31.168888   31.168888\n1  40.277802   40.277802\n2  40.277802   40.277802\n3  47.808228   47.808228\n4  47.663963   47.663963\n   Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n0   25.677399  -100.461880  ...  -100.458328     -999.0\n1   25.681358  -100.344635  ...  -100.338333     -999.0\n2   25.685196  -100.227390  ...  -100.248329     -999.0\n3   25.688873  -100.110110  ...  -100.095558     -999.0\n4   25.778976  -100.583740  ...  -100.585869     -999.0\n\n[5 rows x 24 columns]\nfinal_chunk_df     Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n10   26.157295    -97.76709  ...   -97.712502        8.0\n11   26.258575    -98.24072  ...   -98.291069       10.0\n\n[2 rows x 24 columns]\nAll records should be incorporated into : /groups/ESS/zsun/cmaq//trainingNew.csv\n",
  "history_begin_time" : 1664126230554,
  "history_end_time" : 1664126301083,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "gOiWEvk9zNys",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation_one_year.csv\")\nprint(\"obs head: \", obs.columns, obs.head())\nref_stations=pd.read_csv(f\"{cmaq_folder}/updated_station_to_cell.csv\")\nprint(\"ref_stations head: \", ref_stations.columns, ref_stations.head())\n\nprint(\"obs shape: \", obs.shape)\nprint(\"ref_station shape: \", ref_stations.shape)\n\nchunksize = 10000\nwith pd.read_csv(\"/groups/ESS3/aalnaim/cmaq/merged_cmaq_one_year.csv\", chunksize=chunksize) as reader:\n  for chunk in reader:\n    print(\"chunk :\", chunk)\n    new_df = pd.merge(chunk,  ref_stations, how='left', left_on=['Latitude','Longitude'], right_on = ['Lat_cmaq','Lon_cmaq'])\n    print(\"new_df after merge ref shape: \", new_df[['Lat_cmaq','Latitude','Lat_airnow','YYYYMMDDHH']].head(), new_df.shape)\n    #new_df.to_csv(f\"{cmaq_folder}/subset.csv\")\n    chunk_final = pd.merge(new_df, obs, how='left', left_on=['Lat_airnow','Lon_airnow','YYYYMMDDHH'], right_on = ['Latitude','Longitude','YYYYMMDDHH'])\n    print(\"new_df after merge all three shape: \", chunk_final[['Lat_airnow','Lon_airnow','YYYYMMDDHH']].head(), chunk_final.shape)\n    test_obs_merge = pd.merge(obs,  ref_stations, how='left', left_on=['Latitude','Longitude'], right_on = ['Lat_airnow','Lon_airnow'])\n    print(\"test_obs_merge shape:\", test_obs_merge.shape, test_obs_merge[[\"Latitude\", \"Lat_airnow\"]].head())\n    #chunk_final=chunk_final.drop_duplicates(keep=False)\n    #training_data = chunk_final.loc[:,~chunk_final.columns.duplicated()]\n\n    chunk_final['YYYYMMDDHH'] = chunk_final['YYYYMMDDHH'].map(str)\n    chunk_final['month'] = chunk_final['YYYYMMDDHH'].str[4:6]\n    chunk_final['day'] = chunk_final['YYYYMMDDHH'].str[6:8]\n    chunk_final['hours'] = chunk_final['YYYYMMDDHH'].str[8:10]\n    new_chunk_df=chunk_final.drop(['YYYYMMDDHH'],axis=1)\n    print(new_chunk_df.head())\n    final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\n    \n    print(\"final_chunk_df\", final_chunk_df)\n    \n    break\n\n#final_df.to_csv(f\"{cmaq_folder}/trainingNew.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/trainingNew.csv\")\n\n\n",
  "history_output" : "obs head:  Index(['StationID', 'Latitude', 'Longitude', 'AirNOW_O3', 'YYYYMMDDHH'], dtype='object')    StationID   Latitude   Longitude  AirNOW_O3  YYYYMMDDHH\n0  483951076  31.168888  -96.481941     -999.0  2021080112\n1  080699991  40.277802 -105.545303     -999.0  2021080112\n2  530639995  47.808228 -117.343269     -999.0  2021080112\n3  530639997  47.663963 -117.257652     -999.0  2021080112\n4  530639996  47.660568 -117.084503     -999.0  2021080112\nref_stations head:  Index(['Lat_airnow', 'Lon_airnow', 'Lat_cmaq', 'Lon_cmaq'], dtype='object')    Lat_airnow  Lon_airnow   Lat_cmaq   Lon_cmaq\n0   31.169399  -81.496399  31.131332 -81.537930\n1   42.062199  -87.673599  42.088024 -87.710205\n2   39.758900  -86.397202  39.801613 -86.452760\n3   40.931396  -81.123520  40.971100 -81.189270\n4   43.435001  -88.527802  43.455270 -88.565704\nobs shape:  (15279463, 5)\nref_station shape:  (2833, 4)\nchunk :        Latitude   Longitude  YYYYMMDDHH  ...  month  day  hours\n0     21.829086 -120.620790  2021080112  ...      8    1     12\n1     21.855751 -120.512500  2021080112  ...      8    1     12\n2     21.882309 -120.404144  2021080112  ...      8    1     12\n3     21.908745 -120.295715  2021080112  ...      8    1     12\n4     21.935051 -120.187225  2021080112  ...      8    1     12\n...         ...         ...         ...  ...    ...  ...    ...\n9995  26.737213  -89.563050  2021080112  ...      8    1     12\n9996  26.728450  -89.444580  2021080112  ...      8    1     12\n9997  26.719570  -89.326170  2021080112  ...      8    1     12\n9998  26.710556  -89.207760  2021080112  ...      8    1     12\n9999  26.701397  -89.089420  2021080112  ...      8    1     12\n\n[10000 rows x 17 columns]\nnew_df after merge ref shape:     Lat_cmaq   Latitude  Lat_airnow  YYYYMMDDHH\n0       NaN  21.829086         NaN  2021080112\n1       NaN  21.855751         NaN  2021080112\n2       NaN  21.882309         NaN  2021080112\n3       NaN  21.908745         NaN  2021080112\n4       NaN  21.935051         NaN  2021080112 (10000, 21)\nnew_df after merge all three shape:     Lat_airnow  Lon_airnow  YYYYMMDDHH\n0         NaN         NaN  2021080112\n1         NaN         NaN  2021080112\n2         NaN         NaN  2021080112\n3         NaN         NaN  2021080112\n4         NaN         NaN  2021080112 (10000, 25)\ntest_obs_merge shape: (15497669, 9)     Latitude  Lat_airnow\n0  31.168888   31.168888\n1  40.277802   40.277802\n2  40.277802   40.277802\n3  47.808228   47.808228\n4  47.663963   47.663963\n   Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n0   21.829086  -120.620790  ...          NaN        NaN\n1   21.855751  -120.512500  ...          NaN        NaN\n2   21.882309  -120.404144  ...          NaN        NaN\n3   21.908745  -120.295715  ...          NaN        NaN\n4   21.935051  -120.187225  ...          NaN        NaN\n\n[5 rows x 24 columns]\nmerge_training_data.py:32: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nfinal_chunk_df       Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n6390   26.157295    -97.76709  ...   -97.712502        8.0\n6828   26.258575    -98.24072  ...   -98.291069       10.0\n\n[2 rows x 24 columns]\nAll records should be incorporated into : /groups/ESS/zsun/cmaq//trainingNew.csv\n",
  "history_begin_time" : 1664126085078,
  "history_end_time" : 1664126157749,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "SVECOaRq24ov",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation_one_year.csv\")\nprint(\"obs head: \", obs.columns, obs.head())\nref_stations=pd.read_csv(f\"{cmaq_folder}/updated_station_to_cell.csv\")\nprint(\"ref_stations head: \", ref_stations.columns, ref_stations.head())\n\nprint(\"obs shape: \", obs.shape)\nprint(\"ref_station shape: \", ref_stations.shape)\n\nchunksize = 10000\nwith pd.read_csv(\"/groups/ESS3/aalnaim/cmaq/merged_cmaq_one_year.csv\", chunksize=chunksize) as reader:\n  for chunk in reader:\n    print(chunk)\n    new_df = pd.merge(chunk,  ref_stations, how='left', left_on=['Latitude','Longitude'], right_on = ['Lat_cmaq','Lon_cmaq'])\n    print(\"new_df after merge ref shape: \", new_df[['Lat_cmaq','Latitude','Lat_airnow','YYYYMMDDHH']].head(), new_df.shape)\n    #new_df.to_csv(f\"{cmaq_folder}/subset.csv\")\n    chunk_final = pd.merge(new_df, obs, how='left', left_on=['Lat_airnow','Lon_airnow','YYYYMMDDHH'], right_on = ['Latitude','Longitude','YYYYMMDDHH'])\n    print(\"new_df after merge all three shape: \", chunk_final[['Lat_airnow','Lon_airnow','YYYYMMDDHH']].head(), chunk_final.shape)\n    test_obs_merge = pd.merge(obs,  ref_stations, how='left', left_on=['Latitude','Longitude'], right_on = ['Lat_airnow','Lon_airnow'])\n    print(\"test_obs_merge shape:\", test_obs_merge.shape, test_obs_merge[[\"Latitude\", \"Lat_airnow\"]].head())\n    #chunk_final=chunk_final.drop_duplicates(keep=False)\n    #training_data = chunk_final.loc[:,~chunk_final.columns.duplicated()]\n\n    chunk_final['YYYYMMDDHH'] = chunk_final['YYYYMMDDHH'].map(str)\n    chunk_final['month'] = chunk_final['YYYYMMDDHH'].str[4:6]\n    chunk_final['day'] = chunk_final['YYYYMMDDHH'].str[6:8]\n    chunk_final['hours'] = chunk_final['YYYYMMDDHH'].str[8:10]\n    new_chunk_df=chunk_final.drop(['YYYYMMDDHH'],axis=1)\n    print(new_chunk_df.head())\n    final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\n    \n    print(\"final_chunk_df\", final_chunk_df)\n    \n    break\n\n#final_df.to_csv(f\"{cmaq_folder}/trainingNew.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/trainingNew.csv\")\n\n\n",
  "history_output" : "obs head:  Index(['StationID', 'Latitude', 'Longitude', 'AirNOW_O3', 'YYYYMMDDHH'], dtype='object')    StationID   Latitude   Longitude  AirNOW_O3  YYYYMMDDHH\n0  483951076  31.168888  -96.481941     -999.0  2021080112\n1  080699991  40.277802 -105.545303     -999.0  2021080112\n2  530639995  47.808228 -117.343269     -999.0  2021080112\n3  530639997  47.663963 -117.257652     -999.0  2021080112\n4  530639996  47.660568 -117.084503     -999.0  2021080112\nref_stations head:  Index(['Lat_airnow', 'Lon_airnow', 'Lat_cmaq', 'Lon_cmaq'], dtype='object')    Lat_airnow  Lon_airnow   Lat_cmaq   Lon_cmaq\n0   31.169399  -81.496399  31.131332 -81.537930\n1   42.062199  -87.673599  42.088024 -87.710205\n2   39.758900  -86.397202  39.801613 -86.452760\n3   40.931396  -81.123520  40.971100 -81.189270\n4   43.435001  -88.527802  43.455270 -88.565704\nobs shape:  (15279463, 5)\nref_station shape:  (2833, 4)\n       Latitude   Longitude  YYYYMMDDHH  ...  month  day  hours\n0     21.829086 -120.620790  2021080112  ...      8    1     12\n1     21.855751 -120.512500  2021080112  ...      8    1     12\n2     21.882309 -120.404144  2021080112  ...      8    1     12\n3     21.908745 -120.295715  2021080112  ...      8    1     12\n4     21.935051 -120.187225  2021080112  ...      8    1     12\n...         ...         ...         ...  ...    ...  ...    ...\n9995  26.737213  -89.563050  2021080112  ...      8    1     12\n9996  26.728450  -89.444580  2021080112  ...      8    1     12\n9997  26.719570  -89.326170  2021080112  ...      8    1     12\n9998  26.710556  -89.207760  2021080112  ...      8    1     12\n9999  26.701397  -89.089420  2021080112  ...      8    1     12\n\n[10000 rows x 17 columns]\nnew_df after merge ref shape:     Lat_cmaq   Latitude  Lat_airnow  YYYYMMDDHH\n0       NaN  21.829086         NaN  2021080112\n1       NaN  21.855751         NaN  2021080112\n2       NaN  21.882309         NaN  2021080112\n3       NaN  21.908745         NaN  2021080112\n4       NaN  21.935051         NaN  2021080112 (10000, 21)\nnew_df after merge all three shape:     Lat_airnow  Lon_airnow  YYYYMMDDHH\n0         NaN         NaN  2021080112\n1         NaN         NaN  2021080112\n2         NaN         NaN  2021080112\n3         NaN         NaN  2021080112\n4         NaN         NaN  2021080112 (10000, 25)\ntest_obs_merge shape: (15497669, 9)     Latitude  Lat_airnow\n0  31.168888   31.168888\n1  40.277802   40.277802\n2  40.277802   40.277802\n3  47.808228   47.808228\n4  47.663963   47.663963\n   Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n0   21.829086  -120.620790  ...          NaN        NaN\n1   21.855751  -120.512500  ...          NaN        NaN\n2   21.882309  -120.404144  ...          NaN        NaN\n3   21.908745  -120.295715  ...          NaN        NaN\n4   21.935051  -120.187225  ...          NaN        NaN\n\n[5 rows x 24 columns]\nmerge_training_data.py:32: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nfinal_chunk_df       Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n6390   26.157295    -97.76709  ...   -97.712502        8.0\n6828   26.258575    -98.24072  ...   -98.291069       10.0\n\n[2 rows x 24 columns]\nAll records should be incorporated into : /groups/ESS/zsun/cmaq//trainingNew.csv\n",
  "history_begin_time" : 1664125770636,
  "history_end_time" : 1664125842452,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "EY3YFsf09o8n",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation_one_year.csv\")\nprint(\"obs head: \", obs.columns, obs.head())\nref_stations=pd.read_csv(f\"{cmaq_folder}/updated_station_to_cell.csv\")\nprint(\"ref_stations head: \", ref_stations.columns, ref_stations.head())\n\nprint(\"obs shape: \", obs.shape)\nprint(\"ref_station shape: \", ref_stations.shape)\n\nchunksize = 10000\nwith pd.read_csv(\"/groups/ESS3/aalnaim/cmaq/merged_cmaq_one_year.csv\", chunksize=chunksize) as reader:\n  for chunk in reader:\n    print(chunk)\n    new_df = pd.merge(chunk,  ref_stations, how='left', left_on=['Latitude','Longitude'], right_on = ['Lat_cmaq','Lon_cmaq'])\n    print(\"new_df after merge ref shape: \", new_df.head(), new_df.shape)\n    #new_df.to_csv(f\"{cmaq_folder}/subset.csv\")\n    chunk_final = pd.merge(new_df, obs, how='left', left_on=['Lat_airnow','Lon_airnow','YYYYMMDDHH'], right_on = ['Latitude','Longitude','YYYYMMDDHH'])\n    print(\"new_df after merge all three shape: \", chunk_final[['Lat_airnow','Lon_airnow','YYYYMMDDHH']].head(), chunk_final.shape)\n    test_obs_merge = pd.merge(obs,  ref_stations, how='left', left_on=['Latitude','Longitude'], right_on = ['Lat_airnow','Lon_airnow'])\n    print(\"test_obs_merge shape:\", test_obs_merge.shape, test_obs_merge[[\"Latitude\", \"Lat_airnow\"]].head())\n    #chunk_final=chunk_final.drop_duplicates(keep=False)\n    #training_data = chunk_final.loc[:,~chunk_final.columns.duplicated()]\n\n    chunk_final['YYYYMMDDHH'] = chunk_final['YYYYMMDDHH'].map(str)\n    chunk_final['month'] = chunk_final['YYYYMMDDHH'].str[4:6]\n    chunk_final['day'] = chunk_final['YYYYMMDDHH'].str[6:8]\n    chunk_final['hours'] = chunk_final['YYYYMMDDHH'].str[8:10]\n    new_chunk_df=chunk_final.drop(['YYYYMMDDHH'],axis=1)\n    print(new_chunk_df.head())\n    final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\n    \n    print(\"final_chunk_df\", final_chunk_df)\n    \n    break\n\n#final_df.to_csv(f\"{cmaq_folder}/trainingNew.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/trainingNew.csv\")\n\n\n",
  "history_output" : "obs head:  Index(['StationID', 'Latitude', 'Longitude', 'AirNOW_O3', 'YYYYMMDDHH'], dtype='object')    StationID   Latitude   Longitude  AirNOW_O3  YYYYMMDDHH\n0  483951076  31.168888  -96.481941     -999.0  2021080112\n1  080699991  40.277802 -105.545303     -999.0  2021080112\n2  530639995  47.808228 -117.343269     -999.0  2021080112\n3  530639997  47.663963 -117.257652     -999.0  2021080112\n4  530639996  47.660568 -117.084503     -999.0  2021080112\nref_stations head:  Index(['Lat_airnow', 'Lon_airnow', 'Lat_cmaq', 'Lon_cmaq'], dtype='object')    Lat_airnow  Lon_airnow   Lat_cmaq   Lon_cmaq\n0   31.169399  -81.496399  31.131332 -81.537930\n1   42.062199  -87.673599  42.088024 -87.710205\n2   39.758900  -86.397202  39.801613 -86.452760\n3   40.931396  -81.123520  40.971100 -81.189270\n4   43.435001  -88.527802  43.455270 -88.565704\nobs shape:  (15279463, 5)\nref_station shape:  (2833, 4)\n       Latitude   Longitude  YYYYMMDDHH  ...  month  day  hours\n0     21.829086 -120.620790  2021080112  ...      8    1     12\n1     21.855751 -120.512500  2021080112  ...      8    1     12\n2     21.882309 -120.404144  2021080112  ...      8    1     12\n3     21.908745 -120.295715  2021080112  ...      8    1     12\n4     21.935051 -120.187225  2021080112  ...      8    1     12\n...         ...         ...         ...  ...    ...  ...    ...\n9995  26.737213  -89.563050  2021080112  ...      8    1     12\n9996  26.728450  -89.444580  2021080112  ...      8    1     12\n9997  26.719570  -89.326170  2021080112  ...      8    1     12\n9998  26.710556  -89.207760  2021080112  ...      8    1     12\n9999  26.701397  -89.089420  2021080112  ...      8    1     12\n\n[10000 rows x 17 columns]\nnew_df after merge ref shape:      Latitude   Longitude  YYYYMMDDHH  ...  Lon_airnow  Lat_cmaq  Lon_cmaq\n0  21.829086 -120.620790  2021080112  ...         NaN       NaN       NaN\n1  21.855751 -120.512500  2021080112  ...         NaN       NaN       NaN\n2  21.882309 -120.404144  2021080112  ...         NaN       NaN       NaN\n3  21.908745 -120.295715  2021080112  ...         NaN       NaN       NaN\n4  21.935051 -120.187225  2021080112  ...         NaN       NaN       NaN\n\n[5 rows x 21 columns] (10000, 21)\nnew_df after merge all three shape:     Lat_airnow  Lon_airnow  YYYYMMDDHH\n0         NaN         NaN  2021080112\n1         NaN         NaN  2021080112\n2         NaN         NaN  2021080112\n3         NaN         NaN  2021080112\n4         NaN         NaN  2021080112 (10000, 25)\ntest_obs_merge shape: (15497669, 9)     Latitude  Lat_airnow\n0  31.168888   31.168888\n1  40.277802   40.277802\n2  40.277802   40.277802\n3  47.808228   47.808228\n4  47.663963   47.663963\n   Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n0   21.829086  -120.620790  ...          NaN        NaN\n1   21.855751  -120.512500  ...          NaN        NaN\n2   21.882309  -120.404144  ...          NaN        NaN\n3   21.908745  -120.295715  ...          NaN        NaN\n4   21.935051  -120.187225  ...          NaN        NaN\n\n[5 rows x 24 columns]\nmerge_training_data.py:32: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nfinal_chunk_df       Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n6390   26.157295    -97.76709  ...   -97.712502        8.0\n6828   26.258575    -98.24072  ...   -98.291069       10.0\n\n[2 rows x 24 columns]\nAll records should be incorporated into : /groups/ESS/zsun/cmaq//trainingNew.csv\n",
  "history_begin_time" : 1664125100322,
  "history_end_time" : 1664125170794,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "Z9NfJ8yDPqMB",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation_one_year.csv\")\nprint(\"obs head: \", obs.columns, obs.head())\nref_stations=pd.read_csv(f\"{cmaq_folder}/updated_station_to_cell.csv\")\nprint(\"ref_stations head: \", ref_stations.columns, ref_stations.head())\n\nprint(\"obs shape: \", obs.shape)\nprint(\"ref_station shape: \", ref_stations.shape)\n\nchunksize = 10000\nwith pd.read_csv(\"/groups/ESS3/aalnaim/cmaq/merged_cmaq_one_year.csv\", chunksize=chunksize) as reader:\n  for chunk in reader:\n    print(chunk)\n    new_df = pd.merge(chunk,  ref_stations, how='left', left_on=['Latitude','Longitude'], right_on = ['Lat_cmaq','Lon_cmaq'])\n    print(\"new_df after merge ref shape: \", new_df.head(), new_df.shape)\n    #new_df.to_csv(f\"{cmaq_folder}/subset.csv\")\n    chunk_final = pd.merge(new_df, obs, how='left', left_on=['Lat_airnow','Lon_airnow','YYYYMMDDHH'], right_on = ['Latitude','Longitude','YYYYMMDDHH'])\n    print(\"new_df after merge all three shape: \", chunk_final.head(), chunk_final.shape)\n    test_obs_merge = pd.merge(obs,  ref_stations, how='left', left_on=['Latitude','Longitude'], right_on = ['Lat_airnow','Lon_airnow'])\n    print(\"test_obs_merge shape:\", test_obs_merge.shape, test_obs_merge[\"Latitude\", \"Lat_airnow\"].head())\n    #chunk_final=chunk_final.drop_duplicates(keep=False)\n    #training_data = chunk_final.loc[:,~chunk_final.columns.duplicated()]\n\n    chunk_final['YYYYMMDDHH'] = chunk_final['YYYYMMDDHH'].map(str)\n    chunk_final['month'] = chunk_final['YYYYMMDDHH'].str[4:6]\n    chunk_final['day'] = chunk_final['YYYYMMDDHH'].str[6:8]\n    chunk_final['hours'] = chunk_final['YYYYMMDDHH'].str[8:10]\n    new_chunk_df=chunk_final.drop(['YYYYMMDDHH'],axis=1)\n    print(new_chunk_df.head())\n    final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\n    \n    print(\"final_chunk_df\", final_chunk_df)\n    \n    break\n\n#final_df.to_csv(f\"{cmaq_folder}/trainingNew.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/trainingNew.csv\")\n\n\n",
  "history_output" : "obs head:  Index(['StationID', 'Latitude', 'Longitude', 'AirNOW_O3', 'YYYYMMDDHH'], dtype='object')    StationID   Latitude   Longitude  AirNOW_O3  YYYYMMDDHH\n0  483951076  31.168888  -96.481941     -999.0  2021080112\n1  080699991  40.277802 -105.545303     -999.0  2021080112\n2  530639995  47.808228 -117.343269     -999.0  2021080112\n3  530639997  47.663963 -117.257652     -999.0  2021080112\n4  530639996  47.660568 -117.084503     -999.0  2021080112\nref_stations head:  Index(['Lat_airnow', 'Lon_airnow', 'Lat_cmaq', 'Lon_cmaq'], dtype='object')    Lat_airnow  Lon_airnow   Lat_cmaq   Lon_cmaq\n0   31.169399  -81.496399  31.131332 -81.537930\n1   42.062199  -87.673599  42.088024 -87.710205\n2   39.758900  -86.397202  39.801613 -86.452760\n3   40.931396  -81.123520  40.971100 -81.189270\n4   43.435001  -88.527802  43.455270 -88.565704\nobs shape:  (15279463, 5)\nref_station shape:  (2833, 4)\n       Latitude   Longitude  YYYYMMDDHH  ...  month  day  hours\n0     21.829086 -120.620790  2021080112  ...      8    1     12\n1     21.855751 -120.512500  2021080112  ...      8    1     12\n2     21.882309 -120.404144  2021080112  ...      8    1     12\n3     21.908745 -120.295715  2021080112  ...      8    1     12\n4     21.935051 -120.187225  2021080112  ...      8    1     12\n...         ...         ...         ...  ...    ...  ...    ...\n9995  26.737213  -89.563050  2021080112  ...      8    1     12\n9996  26.728450  -89.444580  2021080112  ...      8    1     12\n9997  26.719570  -89.326170  2021080112  ...      8    1     12\n9998  26.710556  -89.207760  2021080112  ...      8    1     12\n9999  26.701397  -89.089420  2021080112  ...      8    1     12\n\n[10000 rows x 17 columns]\nnew_df after merge ref shape:      Latitude   Longitude  YYYYMMDDHH  ...  Lon_airnow  Lat_cmaq  Lon_cmaq\n0  21.829086 -120.620790  2021080112  ...         NaN       NaN       NaN\n1  21.855751 -120.512500  2021080112  ...         NaN       NaN       NaN\n2  21.882309 -120.404144  2021080112  ...         NaN       NaN       NaN\n3  21.908745 -120.295715  2021080112  ...         NaN       NaN       NaN\n4  21.935051 -120.187225  2021080112  ...         NaN       NaN       NaN\n\n[5 rows x 21 columns] (10000, 21)\nnew_df after merge all three shape:     Latitude_x  Longitude_x  YYYYMMDDHH  ...  Latitude_y  Longitude_y  AirNOW_O3\n0   21.829086  -120.620790  2021080112  ...         NaN          NaN        NaN\n1   21.855751  -120.512500  2021080112  ...         NaN          NaN        NaN\n2   21.882309  -120.404144  2021080112  ...         NaN          NaN        NaN\n3   21.908745  -120.295715  2021080112  ...         NaN          NaN        NaN\n4   21.935051  -120.187225  2021080112  ...         NaN          NaN        NaN\n\n[5 rows x 25 columns] (10000, 25)\nTraceback (most recent call last):\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/indexes/base.py\", line 3621, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"pandas/_libs/index.pyx\", line 136, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/index.pyx\", line 163, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: ('Latitude', 'Lat_airnow')\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"merge_training_data.py\", line 22, in <module>\n    print(\"test_obs_merge shape:\", test_obs_merge.shape, test_obs_merge[\"Latitude\", \"Lat_airnow\"].head())\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/frame.py\", line 3505, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/indexes/base.py\", line 3623, in get_loc\n    raise KeyError(key) from err\nKeyError: ('Latitude', 'Lat_airnow')\n",
  "history_begin_time" : 1664124925164,
  "history_end_time" : 1664124975997,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "jRnHRFwauKO1",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation_one_year.csv\")\nprint(\"obs head: \", obs.columns, obs.head())\nref_stations=pd.read_csv(f\"{cmaq_folder}/updated_station_to_cell.csv\")\nprint(\"ref_stations head: \", ref_stations.columns, ref_stations.head())\n\nprint(\"obs shape: \", obs.shape)\nprint(\"ref_station shape: \", ref_stations.shape)\n\nchunksize = 10000\nwith pd.read_csv(\"/groups/ESS3/aalnaim/cmaq/merged_cmaq_one_year.csv\", chunksize=chunksize) as reader:\n  for chunk in reader:\n    print(chunk)\n    new_df = pd.merge(chunk,  ref_stations, how='left', left_on=['Latitude','Longitude'], right_on = ['Lat_cmaq','Lon_cmaq'])\n    print(\"new_df after merge ref shape: \", new_df.head(), new_df.shape)\n    #new_df.to_csv(f\"{cmaq_folder}/subset.csv\")\n    chunk_final = pd.merge(new_df, obs, how='left', left_on=['Lat_airnow','Lon_airnow','YYYYMMDDHH'], right_on = ['Latitude','Longitude','YYYYMMDDHH'])\n    print(\"new_df after merge all three shape: \", chunk_final.head(), chunk_final.shape)\n    test_obs_merge = pd.merge(obs,  ref_stations, how='left', left_on=['Latitude','Longitude'], right_on = ['Lat_airnow','Lon_airnow'])\n    print(\"test_obs_merge shape:\", test_obs_merge.shape, test_obs_merge.head())\n    #chunk_final=chunk_final.drop_duplicates(keep=False)\n    #training_data = chunk_final.loc[:,~chunk_final.columns.duplicated()]\n\n    chunk_final['YYYYMMDDHH'] = chunk_final['YYYYMMDDHH'].map(str)\n    chunk_final['month'] = chunk_final['YYYYMMDDHH'].str[4:6]\n    chunk_final['day'] = chunk_final['YYYYMMDDHH'].str[6:8]\n    chunk_final['hours'] = chunk_final['YYYYMMDDHH'].str[8:10]\n    new_chunk_df=chunk_final.drop(['YYYYMMDDHH'],axis=1)\n    print(new_chunk_df.head())\n    final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\n    \n    print(\"final_chunk_df\", final_chunk_df)\n    \n    break\n\n#final_df.to_csv(f\"{cmaq_folder}/trainingNew.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/trainingNew.csv\")\n\n\n",
  "history_output" : "obs head:  Index(['StationID', 'Latitude', 'Longitude', 'AirNOW_O3', 'YYYYMMDDHH'], dtype='object')    StationID   Latitude   Longitude  AirNOW_O3  YYYYMMDDHH\n0  483951076  31.168888  -96.481941     -999.0  2021080112\n1  080699991  40.277802 -105.545303     -999.0  2021080112\n2  530639995  47.808228 -117.343269     -999.0  2021080112\n3  530639997  47.663963 -117.257652     -999.0  2021080112\n4  530639996  47.660568 -117.084503     -999.0  2021080112\nref_stations head:  Index(['Lat_airnow', 'Lon_airnow', 'Lat_cmaq', 'Lon_cmaq'], dtype='object')    Lat_airnow  Lon_airnow   Lat_cmaq   Lon_cmaq\n0   31.169399  -81.496399  31.131332 -81.537930\n1   42.062199  -87.673599  42.088024 -87.710205\n2   39.758900  -86.397202  39.801613 -86.452760\n3   40.931396  -81.123520  40.971100 -81.189270\n4   43.435001  -88.527802  43.455270 -88.565704\nobs shape:  (15279463, 5)\nref_station shape:  (2833, 4)\n       Latitude   Longitude  YYYYMMDDHH  ...  month  day  hours\n0     21.829086 -120.620790  2021080112  ...      8    1     12\n1     21.855751 -120.512500  2021080112  ...      8    1     12\n2     21.882309 -120.404144  2021080112  ...      8    1     12\n3     21.908745 -120.295715  2021080112  ...      8    1     12\n4     21.935051 -120.187225  2021080112  ...      8    1     12\n...         ...         ...         ...  ...    ...  ...    ...\n9995  26.737213  -89.563050  2021080112  ...      8    1     12\n9996  26.728450  -89.444580  2021080112  ...      8    1     12\n9997  26.719570  -89.326170  2021080112  ...      8    1     12\n9998  26.710556  -89.207760  2021080112  ...      8    1     12\n9999  26.701397  -89.089420  2021080112  ...      8    1     12\n\n[10000 rows x 17 columns]\nnew_df after merge ref shape:      Latitude   Longitude  YYYYMMDDHH  ...  Lon_airnow  Lat_cmaq  Lon_cmaq\n0  21.829086 -120.620790  2021080112  ...         NaN       NaN       NaN\n1  21.855751 -120.512500  2021080112  ...         NaN       NaN       NaN\n2  21.882309 -120.404144  2021080112  ...         NaN       NaN       NaN\n3  21.908745 -120.295715  2021080112  ...         NaN       NaN       NaN\n4  21.935051 -120.187225  2021080112  ...         NaN       NaN       NaN\n\n[5 rows x 21 columns] (10000, 21)\nnew_df after merge all three shape:     Latitude_x  Longitude_x  YYYYMMDDHH  ...  Latitude_y  Longitude_y  AirNOW_O3\n0   21.829086  -120.620790  2021080112  ...         NaN          NaN        NaN\n1   21.855751  -120.512500  2021080112  ...         NaN          NaN        NaN\n2   21.882309  -120.404144  2021080112  ...         NaN          NaN        NaN\n3   21.908745  -120.295715  2021080112  ...         NaN          NaN        NaN\n4   21.935051  -120.187225  2021080112  ...         NaN          NaN        NaN\n\n[5 rows x 25 columns] (10000, 25)\ntest_obs_merge shape: (15497669, 9)    StationID   Latitude   Longitude  ...  Lon_airnow   Lat_cmaq    Lon_cmaq\n0  483951076  31.168888  -96.481941  ...  -96.481941  31.177826  -96.434390\n1  080699991  40.277802 -105.545303  ... -105.545303  40.295480 -105.476900\n2  080699991  40.277802 -105.545303  ... -105.545303  40.295480 -105.476900\n3  530639995  47.808228 -117.343269  ... -117.343269  47.808144 -117.364716\n4  530639997  47.663963 -117.257652  ... -117.257652  47.598984 -117.294010\n\n[5 rows x 9 columns]\n   Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n0   21.829086  -120.620790  ...          NaN        NaN\n1   21.855751  -120.512500  ...          NaN        NaN\n2   21.882309  -120.404144  ...          NaN        NaN\n3   21.908745  -120.295715  ...          NaN        NaN\n4   21.935051  -120.187225  ...          NaN        NaN\n\n[5 rows x 24 columns]\nmerge_training_data.py:32: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nfinal_chunk_df       Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n6390   26.157295    -97.76709  ...   -97.712502        8.0\n6828   26.258575    -98.24072  ...   -98.291069       10.0\n\n[2 rows x 24 columns]\nAll records should be incorporated into : /groups/ESS/zsun/cmaq//trainingNew.csv\n",
  "history_begin_time" : 1664124772719,
  "history_end_time" : 1664124847648,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "uquiOznXcUM1",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation_one_year.csv\")\nprint(\"obs head: \", obs.columns, obs.head())\nref_stations=pd.read_csv(f\"{cmaq_folder}/updated_station_to_cell.csv\")\nprint(\"ref_stations head: \", ref_stations.columns, ref_stations.head())\n\nprint(\"obs shape: \", obs.shape)\nprint(\"ref_station shape: \", ref_stations.shape)\n\nchunksize = 10000\nwith pd.read_csv(\"/groups/ESS3/aalnaim/cmaq/merged_cmaq_one_year.csv\", chunksize=chunksize) as reader:\n  for chunk in reader:\n    print(chunk)\n    new_df = pd.merge(chunk,  ref_stations, how='left', left_on=['Latitude','Longitude'], right_on = ['Lat_cmaq','Lon_cmaq'])\n    print(\"new_df after merge ref shape: \", new_df.shape)\n    #new_df.to_csv(f\"{cmaq_folder}/subset.csv\")\n    chunk_final = pd.merge(new_df, obs, how='left', left_on=['Lat_airnow','Lon_airnow','YYYYMMDDHH'], right_on = ['Latitude','Longitude','YYYYMMDDHH'])\n    print(\"new_df after merge all three shape: \", chunk_final.shape)\n    #chunk_final=chunk_final.drop_duplicates(keep=False)\n    #training_data = chunk_final.loc[:,~chunk_final.columns.duplicated()]\n\n    chunk_final['YYYYMMDDHH'] = chunk_final['YYYYMMDDHH'].map(str)\n    chunk_final['month'] = chunk_final['YYYYMMDDHH'].str[4:6]\n    chunk_final['day'] = chunk_final['YYYYMMDDHH'].str[6:8]\n    chunk_final['hours'] = chunk_final['YYYYMMDDHH'].str[8:10]\n    new_chunk_df=chunk_final.drop(['YYYYMMDDHH'],axis=1)\n    print(new_chunk_df.head())\n    final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\n    \n    print(\"final_chunk_df\", final_chunk_df)\n    \n    break\n\n#final_df.to_csv(f\"{cmaq_folder}/trainingNew.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/trainingNew.csv\")\n\n\n",
  "history_output" : "obs head:  Index(['StationID', 'Latitude', 'Longitude', 'AirNOW_O3', 'YYYYMMDDHH'], dtype='object')    StationID   Latitude   Longitude  AirNOW_O3  YYYYMMDDHH\n0  483951076  31.168888  -96.481941     -999.0  2021080112\n1  080699991  40.277802 -105.545303     -999.0  2021080112\n2  530639995  47.808228 -117.343269     -999.0  2021080112\n3  530639997  47.663963 -117.257652     -999.0  2021080112\n4  530639996  47.660568 -117.084503     -999.0  2021080112\nref_stations head:  Index(['Lat_airnow', 'Lon_airnow', 'Lat_cmaq', 'Lon_cmaq'], dtype='object')    Lat_airnow  Lon_airnow   Lat_cmaq   Lon_cmaq\n0   31.169399  -81.496399  31.131332 -81.537930\n1   42.062199  -87.673599  42.088024 -87.710205\n2   39.758900  -86.397202  39.801613 -86.452760\n3   40.931396  -81.123520  40.971100 -81.189270\n4   43.435001  -88.527802  43.455270 -88.565704\nobs shape:  (15279463, 5)\nref_station shape:  (2833, 4)\n       Latitude   Longitude  YYYYMMDDHH  ...  month  day  hours\n0     21.829086 -120.620790  2021080112  ...      8    1     12\n1     21.855751 -120.512500  2021080112  ...      8    1     12\n2     21.882309 -120.404144  2021080112  ...      8    1     12\n3     21.908745 -120.295715  2021080112  ...      8    1     12\n4     21.935051 -120.187225  2021080112  ...      8    1     12\n...         ...         ...         ...  ...    ...  ...    ...\n9995  26.737213  -89.563050  2021080112  ...      8    1     12\n9996  26.728450  -89.444580  2021080112  ...      8    1     12\n9997  26.719570  -89.326170  2021080112  ...      8    1     12\n9998  26.710556  -89.207760  2021080112  ...      8    1     12\n9999  26.701397  -89.089420  2021080112  ...      8    1     12\n\n[10000 rows x 17 columns]\nnew_df after merge ref shape:  (10000, 21)\nnew_df after merge all three shape:  (10000, 25)\n   Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n0   21.829086  -120.620790  ...          NaN        NaN\n1   21.855751  -120.512500  ...          NaN        NaN\n2   21.882309  -120.404144  ...          NaN        NaN\n3   21.908745  -120.295715  ...          NaN        NaN\n4   21.935051  -120.187225  ...          NaN        NaN\n\n[5 rows x 24 columns]\nmerge_training_data.py:30: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nfinal_chunk_df       Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n6390   26.157295    -97.76709  ...   -97.712502        8.0\n6828   26.258575    -98.24072  ...   -98.291069       10.0\n\n[2 rows x 24 columns]\nAll records should be incorporated into : /groups/ESS/zsun/cmaq//trainingNew.csv\n",
  "history_begin_time" : 1664124560141,
  "history_end_time" : 1664124624824,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "dD351XlOcWOq",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation_one_year.csv\")\nprint(\"obs head: \", obs.columns, obs.head())\nref_stations=pd.read_csv(f\"{cmaq_folder}/updated_station_to_cell.csv\")\nprint(\"ref_stations head: \", ref_stations.columns, ref_stations.head())\n\nprint(\"obs shape: \", obs.shape)\nprint(\"ref_station shape: \", ref_stations.shape)\n\nchunksize = 10000\nwith pd.read_csv(\"/groups/ESS3/aalnaim/cmaq/merged_cmaq_one_year.csv\", chunksize=chunksize) as reader:\n  for chunk in reader:\n    print(chunk)\n    new_df = pd.merge(chunk,  ref_stations, how='left', left_on=['Latitude','Longitude'], right_on = ['Lat_cmaq','Lon_cmaq'])\n    print(\"new_df after merge ref shape: \", new_df.shape)\n    #new_df.to_csv(f\"{cmaq_folder}/subset.csv\")\n    chunk_final = pd.merge(new_df, obs, how='left', left_on=['Lat_airnow','Lon_airnow','YYYYMMDDHH'], right_on = ['Latitude','Longitude','YYYYMMDDHH'])\n    print(\"new_df after merge all three shape: \", chunk_final.head())\n    #chunk_final=chunk_final.drop_duplicates(keep=False)\n    #training_data = chunk_final.loc[:,~chunk_final.columns.duplicated()]\n\n    chunk_final['YYYYMMDDHH'] = chunk_final['YYYYMMDDHH'].map(str)\n    chunk_final['month'] = chunk_final['YYYYMMDDHH'].str[4:6]\n    chunk_final['day'] = chunk_final['YYYYMMDDHH'].str[6:8]\n    chunk_final['hours'] = chunk_final['YYYYMMDDHH'].str[8:10]\n    new_chunk_df=chunk_final.drop(['YYYYMMDDHH'],axis=1)\n    print(new_chunk_df.head())\n    final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\n    \n    print(\"final_chunk_df\", final_chunk_df)\n    \n    break\n\n#final_df.to_csv(f\"{cmaq_folder}/trainingNew.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/trainingNew.csv\")\n\n\n",
  "history_output" : "obs head:  Index(['StationID', 'Latitude', 'Longitude', 'AirNOW_O3', 'YYYYMMDDHH'], dtype='object')    StationID   Latitude   Longitude  AirNOW_O3  YYYYMMDDHH\n0  483951076  31.168888  -96.481941     -999.0  2021080112\n1  080699991  40.277802 -105.545303     -999.0  2021080112\n2  530639995  47.808228 -117.343269     -999.0  2021080112\n3  530639997  47.663963 -117.257652     -999.0  2021080112\n4  530639996  47.660568 -117.084503     -999.0  2021080112\nref_stations head:  Index(['Lat_airnow', 'Lon_airnow', 'Lat_cmaq', 'Lon_cmaq'], dtype='object')    Lat_airnow  Lon_airnow   Lat_cmaq   Lon_cmaq\n0   31.169399  -81.496399  31.131332 -81.537930\n1   42.062199  -87.673599  42.088024 -87.710205\n2   39.758900  -86.397202  39.801613 -86.452760\n3   40.931396  -81.123520  40.971100 -81.189270\n4   43.435001  -88.527802  43.455270 -88.565704\nobs shape:  (15279463, 5)\nref_station shape:  (2833, 4)\n       Latitude   Longitude  YYYYMMDDHH  ...  month  day  hours\n0     21.829086 -120.620790  2021080112  ...      8    1     12\n1     21.855751 -120.512500  2021080112  ...      8    1     12\n2     21.882309 -120.404144  2021080112  ...      8    1     12\n3     21.908745 -120.295715  2021080112  ...      8    1     12\n4     21.935051 -120.187225  2021080112  ...      8    1     12\n...         ...         ...         ...  ...    ...  ...    ...\n9995  26.737213  -89.563050  2021080112  ...      8    1     12\n9996  26.728450  -89.444580  2021080112  ...      8    1     12\n9997  26.719570  -89.326170  2021080112  ...      8    1     12\n9998  26.710556  -89.207760  2021080112  ...      8    1     12\n9999  26.701397  -89.089420  2021080112  ...      8    1     12\n\n[10000 rows x 17 columns]\nnew_df after merge ref shape:  (10000, 21)\nnew_df after merge all three shape:     Latitude_x  Longitude_x  YYYYMMDDHH  ...  Latitude_y  Longitude_y  AirNOW_O3\n0   21.829086  -120.620790  2021080112  ...         NaN          NaN        NaN\n1   21.855751  -120.512500  2021080112  ...         NaN          NaN        NaN\n2   21.882309  -120.404144  2021080112  ...         NaN          NaN        NaN\n3   21.908745  -120.295715  2021080112  ...         NaN          NaN        NaN\n4   21.935051  -120.187225  2021080112  ...         NaN          NaN        NaN\n\n[5 rows x 25 columns]\n   Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n0   21.829086  -120.620790  ...          NaN        NaN\n1   21.855751  -120.512500  ...          NaN        NaN\n2   21.882309  -120.404144  ...          NaN        NaN\n3   21.908745  -120.295715  ...          NaN        NaN\n4   21.935051  -120.187225  ...          NaN        NaN\n\n[5 rows x 24 columns]\nmerge_training_data.py:30: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nfinal_chunk_df       Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n6390   26.157295    -97.76709  ...   -97.712502        8.0\n6828   26.258575    -98.24072  ...   -98.291069       10.0\n\n[2 rows x 24 columns]\nAll records should be incorporated into : /groups/ESS/zsun/cmaq//trainingNew.csv\n",
  "history_begin_time" : 1664124437283,
  "history_end_time" : 1664124501904,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "3SA9lWZqdbf5",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation_one_year.csv\")\nprint(\"obs head: \", obs.columns, obs.head())\nref_stations=pd.read_csv(f\"{cmaq_folder}/updated_station_to_cell.csv\")\nprint(\"ref_stations head: \", ref_stations.columns, ref_stations.head())\n\nprint(\"obs shape: \", obs.shape)\nprint(\"ref_station shape: \", ref_stations.shape)\n\nchunksize = 10000\nwith pd.read_csv(\"/groups/ESS3/aalnaim/cmaq/merged_cmaq_one_year.csv\", chunksize=chunksize) as reader:\n  for chunk in reader:\n    print(chunk)\n    new_df = pd.merge(ref_stations, chunk,  how='left', left_on=['Lat_cmaq','Lon_cmaq'], right_on = ['Latitude','Longitude'])\n    print(\"new_df after merge ref shape: \", new_df.shape)\n    #new_df.to_csv(f\"{cmaq_folder}/subset.csv\")\n    chunk_final = pd.merge(new_df, obs, how='left', left_on=['Lat_airnow','Lon_airnow','YYYYMMDDHH'], right_on = ['Latitude','Longitude','YYYYMMDDHH'])\n    print(\"new_df after merge all three shape: \", chunk_final.head())\n    #chunk_final=chunk_final.drop_duplicates(keep=False)\n    #training_data = chunk_final.loc[:,~chunk_final.columns.duplicated()]\n\n    chunk_final['YYYYMMDDHH'] = chunk_final['YYYYMMDDHH'].map(str)\n    chunk_final['month'] = chunk_final['YYYYMMDDHH'].str[4:6]\n    chunk_final['day'] = chunk_final['YYYYMMDDHH'].str[6:8]\n    chunk_final['hours'] = chunk_final['YYYYMMDDHH'].str[8:10]\n    new_chunk_df=chunk_final.drop(['YYYYMMDDHH'],axis=1)\n    print(new_chunk_df.head())\n    final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\n    \n    print(\"final_chunk_df\", final_chunk_df)\n    \n    break\n\n#final_df.to_csv(f\"{cmaq_folder}/trainingNew.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/trainingNew.csv\")\n\n\n",
  "history_output" : "obs head:  Index(['StationID', 'Latitude', 'Longitude', 'AirNOW_O3', 'YYYYMMDDHH'], dtype='object')    StationID   Latitude   Longitude  AirNOW_O3  YYYYMMDDHH\n0  483951076  31.168888  -96.481941     -999.0  2021080112\n1  080699991  40.277802 -105.545303     -999.0  2021080112\n2  530639995  47.808228 -117.343269     -999.0  2021080112\n3  530639997  47.663963 -117.257652     -999.0  2021080112\n4  530639996  47.660568 -117.084503     -999.0  2021080112\nref_stations head:  Index(['Lat_airnow', 'Lon_airnow', 'Lat_cmaq', 'Lon_cmaq'], dtype='object')    Lat_airnow  Lon_airnow   Lat_cmaq   Lon_cmaq\n0   31.169399  -81.496399  31.131332 -81.537930\n1   42.062199  -87.673599  42.088024 -87.710205\n2   39.758900  -86.397202  39.801613 -86.452760\n3   40.931396  -81.123520  40.971100 -81.189270\n4   43.435001  -88.527802  43.455270 -88.565704\nobs shape:  (15279463, 5)\nref_station shape:  (2833, 4)\n       Latitude   Longitude  YYYYMMDDHH  ...  month  day  hours\n0     21.829086 -120.620790  2021080112  ...      8    1     12\n1     21.855751 -120.512500  2021080112  ...      8    1     12\n2     21.882309 -120.404144  2021080112  ...      8    1     12\n3     21.908745 -120.295715  2021080112  ...      8    1     12\n4     21.935051 -120.187225  2021080112  ...      8    1     12\n...         ...         ...         ...  ...    ...  ...    ...\n9995  26.737213  -89.563050  2021080112  ...      8    1     12\n9996  26.728450  -89.444580  2021080112  ...      8    1     12\n9997  26.719570  -89.326170  2021080112  ...      8    1     12\n9998  26.710556  -89.207760  2021080112  ...      8    1     12\n9999  26.701397  -89.089420  2021080112  ...      8    1     12\n\n[10000 rows x 17 columns]\nnew_df after merge ref shape:  (2833, 21)\nnew_df after merge all three shape:     Lat_airnow  Lon_airnow   Lat_cmaq  ...  Latitude_y  Longitude_y  AirNOW_O3\n0   31.169399  -81.496399  31.131332  ...         NaN          NaN        NaN\n1   42.062199  -87.673599  42.088024  ...         NaN          NaN        NaN\n2   39.758900  -86.397202  39.801613  ...         NaN          NaN        NaN\n3   40.931396  -81.123520  40.971100  ...         NaN          NaN        NaN\n4   43.435001  -88.527802  43.455270  ...         NaN          NaN        NaN\n\n[5 rows x 25 columns]\n   Lat_airnow  Lon_airnow   Lat_cmaq  ...  Latitude_y  Longitude_y  AirNOW_O3\n0   31.169399  -81.496399  31.131332  ...         NaN          NaN        NaN\n1   42.062199  -87.673599  42.088024  ...         NaN          NaN        NaN\n2   39.758900  -86.397202  39.801613  ...         NaN          NaN        NaN\n3   40.931396  -81.123520  40.971100  ...         NaN          NaN        NaN\n4   43.435001  -88.527802  43.455270  ...         NaN          NaN        NaN\n\n[5 rows x 24 columns]\nmerge_training_data.py:30: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nfinal_chunk_df      Lat_airnow  Lon_airnow   Lat_cmaq  ...  Latitude_y  Longitude_y  AirNOW_O3\n115   26.226227  -98.291069  26.258575  ...   26.226227   -98.291069       10.0\n822   26.200277  -97.712502  26.157295  ...   26.200277   -97.712502        8.0\n\n[2 rows x 24 columns]\nAll records should be incorporated into : /groups/ESS/zsun/cmaq//trainingNew.csv\n",
  "history_begin_time" : 1664124288934,
  "history_end_time" : 1664124355263,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "vDZqVfl02B2X",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation_one_year.csv\")\nprint(\"obs head: \", obs.columns, obs.head())\nref_stations=pd.read_csv(f\"{cmaq_folder}/updated_station_to_cell.csv\")\n\nprint(\"ref_stations head: \", ref_stations.columns, ref_stations.head())\n\nchunksize = 10000\nwith pd.read_csv(\"/groups/ESS3/aalnaim/cmaq/merged_cmaq_one_year.csv\", chunksize=chunksize) as reader:\n  for chunk in reader:\n    print(chunk)\n    new_df = pd.merge(ref_stations, chunk,  how='left', left_on=['Lat_cmaq','Lon_cmaq'], right_on = ['Latitude','Longitude'])\n    print(\"new_df after merge ref: \", new_df.columns)\n    #new_df.to_csv(f\"{cmaq_folder}/subset.csv\")\n    chunk_final = pd.merge(new_df, obs, how='left', left_on=['Lat_airnow','Lon_airnow','YYYYMMDDHH'], right_on = ['Latitude','Longitude','YYYYMMDDHH'])\n    print(\"new_df after merge all three: \", chunk_final.columns, chunk_final.head())\n    #chunk_final=chunk_final.drop_duplicates(keep=False)\n    #training_data = chunk_final.loc[:,~chunk_final.columns.duplicated()]\n\n    chunk_final['YYYYMMDDHH'] = chunk_final['YYYYMMDDHH'].map(str)\n    chunk_final['month'] = chunk_final['YYYYMMDDHH'].str[4:6]\n    chunk_final['day'] = chunk_final['YYYYMMDDHH'].str[6:8]\n    chunk_final['hours'] = chunk_final['YYYYMMDDHH'].str[8:10]\n    new_chunk_df=chunk_final.drop(['YYYYMMDDHH'],axis=1)\n    print(new_chunk_df.head())\n    final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\n    \n    print(\"final_chunk_df\", final_chunk_df)\n    \n    break\n\n#final_df.to_csv(f\"{cmaq_folder}/trainingNew.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/trainingNew.csv\")\n\n\n",
  "history_output" : "obs head:  Index(['StationID', 'Latitude', 'Longitude', 'AirNOW_O3', 'YYYYMMDDHH'], dtype='object')    StationID   Latitude   Longitude  AirNOW_O3  YYYYMMDDHH\n0  483951076  31.168888  -96.481941     -999.0  2021080112\n1  080699991  40.277802 -105.545303     -999.0  2021080112\n2  530639995  47.808228 -117.343269     -999.0  2021080112\n3  530639997  47.663963 -117.257652     -999.0  2021080112\n4  530639996  47.660568 -117.084503     -999.0  2021080112\nref_stations head:  Index(['Lat_airnow', 'Lon_airnow', 'Lat_cmaq', 'Lon_cmaq'], dtype='object')    Lat_airnow  Lon_airnow   Lat_cmaq   Lon_cmaq\n0   31.169399  -81.496399  31.131332 -81.537930\n1   42.062199  -87.673599  42.088024 -87.710205\n2   39.758900  -86.397202  39.801613 -86.452760\n3   40.931396  -81.123520  40.971100 -81.189270\n4   43.435001  -88.527802  43.455270 -88.565704\n       Latitude   Longitude  YYYYMMDDHH  ...  month  day  hours\n0     21.829086 -120.620790  2021080112  ...      8    1     12\n1     21.855751 -120.512500  2021080112  ...      8    1     12\n2     21.882309 -120.404144  2021080112  ...      8    1     12\n3     21.908745 -120.295715  2021080112  ...      8    1     12\n4     21.935051 -120.187225  2021080112  ...      8    1     12\n...         ...         ...         ...  ...    ...  ...    ...\n9995  26.737213  -89.563050  2021080112  ...      8    1     12\n9996  26.728450  -89.444580  2021080112  ...      8    1     12\n9997  26.719570  -89.326170  2021080112  ...      8    1     12\n9998  26.710556  -89.207760  2021080112  ...      8    1     12\n9999  26.701397  -89.089420  2021080112  ...      8    1     12\n\n[10000 rows x 17 columns]\nnew_df after merge ref:  Index(['Lat_airnow', 'Lon_airnow', 'Lat_cmaq', 'Lon_cmaq', 'Latitude',\n       'Longitude', 'YYYYMMDDHH', 'CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)',\n       'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)',\n       'WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day',\n       'hours'],\n      dtype='object')\nnew_df after merge all three:  Index(['Lat_airnow', 'Lon_airnow', 'Lat_cmaq', 'Lon_cmaq', 'Latitude_x',\n       'Longitude_x', 'YYYYMMDDHH', 'CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)',\n       'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)',\n       'WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day',\n       'hours', 'StationID', 'Latitude_y', 'Longitude_y', 'AirNOW_O3'],\n      dtype='object')    Lat_airnow  Lon_airnow   Lat_cmaq  ...  Latitude_y  Longitude_y  AirNOW_O3\n0   31.169399  -81.496399  31.131332  ...         NaN          NaN        NaN\n1   42.062199  -87.673599  42.088024  ...         NaN          NaN        NaN\n2   39.758900  -86.397202  39.801613  ...         NaN          NaN        NaN\n3   40.931396  -81.123520  40.971100  ...         NaN          NaN        NaN\n4   43.435001  -88.527802  43.455270  ...         NaN          NaN        NaN\n\n[5 rows x 25 columns]\n   Lat_airnow  Lon_airnow   Lat_cmaq  ...  Latitude_y  Longitude_y  AirNOW_O3\n0   31.169399  -81.496399  31.131332  ...         NaN          NaN        NaN\n1   42.062199  -87.673599  42.088024  ...         NaN          NaN        NaN\n2   39.758900  -86.397202  39.801613  ...         NaN          NaN        NaN\n3   40.931396  -81.123520  40.971100  ...         NaN          NaN        NaN\n4   43.435001  -88.527802  43.455270  ...         NaN          NaN        NaN\n\n[5 rows x 24 columns]\nmerge_training_data.py:28: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3.notnull()][new_chunk_df.AirNOW_O3!=-999]\nfinal_chunk_df      Lat_airnow  Lon_airnow   Lat_cmaq  ...  Latitude_y  Longitude_y  AirNOW_O3\n115   26.226227  -98.291069  26.258575  ...   26.226227   -98.291069       10.0\n822   26.200277  -97.712502  26.157295  ...   26.200277   -97.712502        8.0\n\n[2 rows x 24 columns]\nAll records should be incorporated into : /groups/ESS/zsun/cmaq//trainingNew.csv\n",
  "history_begin_time" : 1664124100061,
  "history_end_time" : 1664124167143,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "oBqQzGOemwKk",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation_one_year.csv\")\nprint(\"obs head: \", obs.columns, obs.head())\nref_stations=pd.read_csv(f\"{cmaq_folder}/updated_station_to_cell.csv\")\n\nprint(\"ref_stations head: \", ref_stations.columns, ref_stations.head())\n\nchunksize = 10000\nwith pd.read_csv(\"/groups/ESS3/aalnaim/cmaq/merged_cmaq_one_year.csv\", chunksize=chunksize) as reader:\n  for chunk in reader:\n    print(chunk)\n    new_df = pd.merge(ref_stations, chunk,  how='left', left_on=['Lat_cmaq','Lon_cmaq'], right_on = ['Latitude','Longitude'])\n    print(\"new_df after merge ref: \", new_df.columns)\n    #new_df.to_csv(f\"{cmaq_folder}/subset.csv\")\n    chunk_final = pd.merge(new_df, obs, how='left', left_on=['Lat_airnow','Lon_airnow','YYYYMMDDHH'], right_on = ['Latitude','Longitude','YYYYMMDDHH'])\n    print(\"new_df after merge all three: \", chunk_final.columns, chunk_final.head())\n    #chunk_final=chunk_final.drop_duplicates(keep=False)\n    #training_data = chunk_final.loc[:,~chunk_final.columns.duplicated()]\n\n    chunk_final['YYYYMMDDHH'] = chunk_final['YYYYMMDDHH'].map(str)\n    chunk_final['month'] = chunk_final['YYYYMMDDHH'].str[4:6]\n    chunk_final['day'] = chunk_final['YYYYMMDDHH'].str[6:8]\n    chunk_final['hours'] = chunk_final['YYYYMMDDHH'].str[8:10]\n    new_chunk_df=chunk_final.drop(['YYYYMMDDHH'],axis=1)\n    print(new_chunk_df.head())\n    final_chunk_df = new_chunk_df[~pd.isnull(new_chunk_df[\"AirNOW_O3\"])]\n    print(\"final_chunk_df\", final_chunk_df)\n    break\n\n#final_df.to_csv(f\"{cmaq_folder}/trainingNew.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/trainingNew.csv\")\n\n\n",
  "history_output" : "obs head:  Index(['StationID', 'Latitude', 'Longitude', 'AirNOW_O3', 'YYYYMMDDHH'], dtype='object')    StationID   Latitude   Longitude  AirNOW_O3  YYYYMMDDHH\n0  483951076  31.168888  -96.481941     -999.0  2021080112\n1  080699991  40.277802 -105.545303     -999.0  2021080112\n2  530639995  47.808228 -117.343269     -999.0  2021080112\n3  530639997  47.663963 -117.257652     -999.0  2021080112\n4  530639996  47.660568 -117.084503     -999.0  2021080112\nref_stations head:  Index(['Lat_airnow', 'Lon_airnow', 'Lat_cmaq', 'Lon_cmaq'], dtype='object')    Lat_airnow  Lon_airnow   Lat_cmaq   Lon_cmaq\n0   31.169399  -81.496399  31.131332 -81.537930\n1   42.062199  -87.673599  42.088024 -87.710205\n2   39.758900  -86.397202  39.801613 -86.452760\n3   40.931396  -81.123520  40.971100 -81.189270\n4   43.435001  -88.527802  43.455270 -88.565704\n       Latitude   Longitude  YYYYMMDDHH  ...  month  day  hours\n0     21.829086 -120.620790  2021080112  ...      8    1     12\n1     21.855751 -120.512500  2021080112  ...      8    1     12\n2     21.882309 -120.404144  2021080112  ...      8    1     12\n3     21.908745 -120.295715  2021080112  ...      8    1     12\n4     21.935051 -120.187225  2021080112  ...      8    1     12\n...         ...         ...         ...  ...    ...  ...    ...\n9995  26.737213  -89.563050  2021080112  ...      8    1     12\n9996  26.728450  -89.444580  2021080112  ...      8    1     12\n9997  26.719570  -89.326170  2021080112  ...      8    1     12\n9998  26.710556  -89.207760  2021080112  ...      8    1     12\n9999  26.701397  -89.089420  2021080112  ...      8    1     12\n\n[10000 rows x 17 columns]\nnew_df after merge ref:  Index(['Lat_airnow', 'Lon_airnow', 'Lat_cmaq', 'Lon_cmaq', 'Latitude',\n       'Longitude', 'YYYYMMDDHH', 'CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)',\n       'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)',\n       'WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day',\n       'hours'],\n      dtype='object')\nnew_df after merge all three:  Index(['Lat_airnow', 'Lon_airnow', 'Lat_cmaq', 'Lon_cmaq', 'Latitude_x',\n       'Longitude_x', 'YYYYMMDDHH', 'CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)',\n       'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)',\n       'WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day',\n       'hours', 'StationID', 'Latitude_y', 'Longitude_y', 'AirNOW_O3'],\n      dtype='object')    Lat_airnow  Lon_airnow   Lat_cmaq  ...  Latitude_y  Longitude_y  AirNOW_O3\n0   31.169399  -81.496399  31.131332  ...         NaN          NaN        NaN\n1   42.062199  -87.673599  42.088024  ...         NaN          NaN        NaN\n2   39.758900  -86.397202  39.801613  ...         NaN          NaN        NaN\n3   40.931396  -81.123520  40.971100  ...         NaN          NaN        NaN\n4   43.435001  -88.527802  43.455270  ...         NaN          NaN        NaN\n\n[5 rows x 25 columns]\n   Lat_airnow  Lon_airnow   Lat_cmaq  ...  Latitude_y  Longitude_y  AirNOW_O3\n0   31.169399  -81.496399  31.131332  ...         NaN          NaN        NaN\n1   42.062199  -87.673599  42.088024  ...         NaN          NaN        NaN\n2   39.758900  -86.397202  39.801613  ...         NaN          NaN        NaN\n3   40.931396  -81.123520  40.971100  ...         NaN          NaN        NaN\n4   43.435001  -88.527802  43.455270  ...         NaN          NaN        NaN\n\n[5 rows x 24 columns]\nfinal_chunk_df       Lat_airnow  Lon_airnow   Lat_cmaq  ...  Latitude_y  Longitude_y  AirNOW_O3\n115    26.226227  -98.291069  26.258575  ...   26.226227   -98.291069       10.0\n252    25.675550 -100.338333  25.681358  ...   25.675550  -100.338333     -999.0\n359    26.073299  -97.166702  26.054161  ...   26.073299   -97.166702     -999.0\n386    25.892500  -97.493599  25.841240  ...   25.892500   -97.493599     -999.0\n658    25.756910 -100.365807  25.787056  ...   25.756910  -100.365807     -999.0\n783    25.646111 -100.095558  25.688873  ...   25.646111  -100.095558     -999.0\n822    26.200277  -97.712502  26.157295  ...   26.200277   -97.712502        8.0\n856    25.668329 -100.248329  25.685196  ...   25.668329  -100.248329     -999.0\n1326   25.745001 -100.254723  25.790886  ...   25.745001  -100.254723     -999.0\n1428   25.783430 -100.585869  25.778976  ...   25.783430  -100.585869     -999.0\n1439   26.288622  -98.152069  26.259953  ...   26.288622   -98.152069     -999.0\n1844   25.471901  -80.482803  25.439682  ...   25.471901   -80.482803     -999.0\n1845   25.674999 -100.458328  25.677399  ...   25.674999  -100.458328     -999.0\n1935   26.130800  -97.937202  26.156342  ...   26.130800   -97.937202     -999.0\n\n[14 rows x 24 columns]\nAll records should be incorporated into : /groups/ESS/zsun/cmaq//trainingNew.csv\n",
  "history_begin_time" : 1664122925776,
  "history_end_time" : 1664122972260,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "85gGmCMuDfeT",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation_one_year.csv\")\nprint(\"obs head: \", obs.columns, obs.head())\nref_stations=pd.read_csv(f\"{cmaq_folder}/updated_station_to_cell.csv\")\n\nprint(\"ref_stations head: \", ref_stations.columns, ref_stations.head())\n\nchunksize = 10000\nwith pd.read_csv(\"/groups/ESS3/aalnaim/cmaq/merged_cmaq_one_year.csv\", chunksize=chunksize) as reader:\n  for chunk in reader:\n    print(chunk)\n    new_df = pd.merge(ref_stations, chunk,  how='left', left_on=['Lat_cmaq','Lon_cmaq'], right_on = ['Latitude','Longitude'])\n    print(\"new_df after merge ref: \", new_df.columns)\n    #new_df.to_csv(f\"{cmaq_folder}/subset.csv\")\n    chunk_final = pd.merge(new_df, obs, how='left', left_on=['Lat_airnow','Lon_airnow','YYYYMMDDHH'], right_on = ['Latitude','Longitude','YYYYMMDDHH'])\n    print(\"new_df after merge all three: \", chunk_final.columns, chunk_final.head())\n    #chunk_final=chunk_final.drop_duplicates(keep=False)\n    #training_data = chunk_final.loc[:,~chunk_final.columns.duplicated()]\n\n    chunk_final['YYYYMMDDHH'] = chunk_final['YYYYMMDDHH'].map(str)\n    chunk_final['month'] = chunk_final['YYYYMMDDHH'].str[4:6]\n    chunk_final['day'] = chunk_final['YYYYMMDDHH'].str[6:8]\n    chunk_final['hours'] = chunk_final['YYYYMMDDHH'].str[8:10]\n    new_chunk_df=chunk_final.drop(['YYYYMMDDHH'],axis=1)\n    print(new_chunk_df.head())\n    final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3!= -999]\n    print(\"final_chunk_df\", final_chunk_df)\n    break\n\n#final_df.to_csv(f\"{cmaq_folder}/trainingNew.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/trainingNew.csv\")\n\n\n",
  "history_output" : "obs head:  Index(['StationID', 'Latitude', 'Longitude', 'AirNOW_O3', 'YYYYMMDDHH'], dtype='object')    StationID   Latitude   Longitude  AirNOW_O3  YYYYMMDDHH\n0  483951076  31.168888  -96.481941     -999.0  2021080112\n1  080699991  40.277802 -105.545303     -999.0  2021080112\n2  530639995  47.808228 -117.343269     -999.0  2021080112\n3  530639997  47.663963 -117.257652     -999.0  2021080112\n4  530639996  47.660568 -117.084503     -999.0  2021080112\nref_stations head:  Index(['Lat_airnow', 'Lon_airnow', 'Lat_cmaq', 'Lon_cmaq'], dtype='object')    Lat_airnow  Lon_airnow   Lat_cmaq   Lon_cmaq\n0   31.169399  -81.496399  31.131332 -81.537930\n1   42.062199  -87.673599  42.088024 -87.710205\n2   39.758900  -86.397202  39.801613 -86.452760\n3   40.931396  -81.123520  40.971100 -81.189270\n4   43.435001  -88.527802  43.455270 -88.565704\n       Latitude   Longitude  YYYYMMDDHH  ...  month  day  hours\n0     21.829086 -120.620790  2021080112  ...      8    1     12\n1     21.855751 -120.512500  2021080112  ...      8    1     12\n2     21.882309 -120.404144  2021080112  ...      8    1     12\n3     21.908745 -120.295715  2021080112  ...      8    1     12\n4     21.935051 -120.187225  2021080112  ...      8    1     12\n...         ...         ...         ...  ...    ...  ...    ...\n9995  26.737213  -89.563050  2021080112  ...      8    1     12\n9996  26.728450  -89.444580  2021080112  ...      8    1     12\n9997  26.719570  -89.326170  2021080112  ...      8    1     12\n9998  26.710556  -89.207760  2021080112  ...      8    1     12\n9999  26.701397  -89.089420  2021080112  ...      8    1     12\n\n[10000 rows x 17 columns]\nnew_df after merge ref:  Index(['Lat_airnow', 'Lon_airnow', 'Lat_cmaq', 'Lon_cmaq', 'Latitude',\n       'Longitude', 'YYYYMMDDHH', 'CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)',\n       'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)',\n       'WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day',\n       'hours'],\n      dtype='object')\nnew_df after merge all three:  Index(['Lat_airnow', 'Lon_airnow', 'Lat_cmaq', 'Lon_cmaq', 'Latitude_x',\n       'Longitude_x', 'YYYYMMDDHH', 'CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)',\n       'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)',\n       'WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day',\n       'hours', 'StationID', 'Latitude_y', 'Longitude_y', 'AirNOW_O3'],\n      dtype='object')    Lat_airnow  Lon_airnow   Lat_cmaq  ...  Latitude_y  Longitude_y  AirNOW_O3\n0   31.169399  -81.496399  31.131332  ...         NaN          NaN        NaN\n1   42.062199  -87.673599  42.088024  ...         NaN          NaN        NaN\n2   39.758900  -86.397202  39.801613  ...         NaN          NaN        NaN\n3   40.931396  -81.123520  40.971100  ...         NaN          NaN        NaN\n4   43.435001  -88.527802  43.455270  ...         NaN          NaN        NaN\n\n[5 rows x 25 columns]\n   Lat_airnow  Lon_airnow   Lat_cmaq  ...  Latitude_y  Longitude_y  AirNOW_O3\n0   31.169399  -81.496399  31.131332  ...         NaN          NaN        NaN\n1   42.062199  -87.673599  42.088024  ...         NaN          NaN        NaN\n2   39.758900  -86.397202  39.801613  ...         NaN          NaN        NaN\n3   40.931396  -81.123520  40.971100  ...         NaN          NaN        NaN\n4   43.435001  -88.527802  43.455270  ...         NaN          NaN        NaN\n\n[5 rows x 24 columns]\nfinal_chunk_df       Lat_airnow  Lon_airnow   Lat_cmaq  ...  Latitude_y  Longitude_y  AirNOW_O3\n0      31.169399  -81.496399  31.131332  ...         NaN          NaN        NaN\n1      42.062199  -87.673599  42.088024  ...         NaN          NaN        NaN\n2      39.758900  -86.397202  39.801613  ...         NaN          NaN        NaN\n3      40.931396  -81.123520  40.971100  ...         NaN          NaN        NaN\n4      43.435001  -88.527802  43.455270  ...         NaN          NaN        NaN\n...          ...         ...        ...  ...         ...          ...        ...\n2828   35.913799  -81.191002  35.905716  ...         NaN          NaN        NaN\n2829   40.246990  -76.846985  40.203840  ...         NaN          NaN        NaN\n2830   39.818714  -75.413971  39.826466  ...         NaN          NaN        NaN\n2831   37.046902  -95.613297  37.006958  ...         NaN          NaN        NaN\n2832   32.791000  -79.959000  32.741245  ...         NaN          NaN        NaN\n\n[2821 rows x 24 columns]\nAll records should be incorporated into : /groups/ESS/zsun/cmaq//trainingNew.csv\n",
  "history_begin_time" : 1664122754448,
  "history_end_time" : 1664122800532,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "WX4byQaxf3sT",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation_one_year.csv\")\nprint(\"obs head: \", obs.columns, obs.head())\nref_stations=pd.read_csv(f\"{cmaq_folder}/updated_station_to_cell.csv\")\n\nprint(\"ref_stations head: \", ref_stations.columns, ref_stations.head())\n\nchunksize = 10000\nwith pd.read_csv(\"/groups/ESS3/aalnaim/cmaq/merged_cmaq_one_year.csv\", chunksize=chunksize) as reader:\n  for chunk in reader:\n    print(chunk)\n    new_df = pd.merge(ref_stations, chunk,  how='left', left_on=['Lat_cmaq','Lon_cmaq'], right_on = ['Latitude','Longitude'])\n    print(\"new_df after merge ref: \", new_df.columns)\n    #new_df.to_csv(f\"{cmaq_folder}/subset.csv\")\n    chunk_final = pd.merge(new_df, obs, how='left', left_on=['Lat_airnow','Lon_airnow','YYYYMMDDHH'], right_on = ['Latitude','Longitude','YYYYMMDDHH'])\n    print(\"new_df after merge all three: \", chunk_final.columns, chunk_final.head())\n    #chunk_final=chunk_final.drop_duplicates(keep=False)\n    #training_data = chunk_final.loc[:,~chunk_final.columns.duplicated()]\n\n    training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\n    training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\n    training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\n    training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n    new_chunk_df=training_data.drop(['YYYYMMDDHH'],axis=1)\n    print(new_chunk_df.head())\n    final_chunk_df = new_chunk_df[new_chunk_df.AirNOW_O3!= -999]\n    print(\"final_chunk_df\", final_chunk_df)\n    break\n\n#final_df.to_csv(f\"{cmaq_folder}/trainingNew.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/trainingNew.csv\")\n\n\n",
  "history_output" : "obs head:  Index(['StationID', 'Latitude', 'Longitude', 'AirNOW_O3', 'YYYYMMDDHH'], dtype='object')    StationID   Latitude   Longitude  AirNOW_O3  YYYYMMDDHH\n0  483951076  31.168888  -96.481941     -999.0  2021080112\n1  080699991  40.277802 -105.545303     -999.0  2021080112\n2  530639995  47.808228 -117.343269     -999.0  2021080112\n3  530639997  47.663963 -117.257652     -999.0  2021080112\n4  530639996  47.660568 -117.084503     -999.0  2021080112\nref_stations head:  Index(['Lat_airnow', 'Lon_airnow', 'Lat_cmaq', 'Lon_cmaq'], dtype='object')    Lat_airnow  Lon_airnow   Lat_cmaq   Lon_cmaq\n0   31.169399  -81.496399  31.131332 -81.537930\n1   42.062199  -87.673599  42.088024 -87.710205\n2   39.758900  -86.397202  39.801613 -86.452760\n3   40.931396  -81.123520  40.971100 -81.189270\n4   43.435001  -88.527802  43.455270 -88.565704\n       Latitude   Longitude  YYYYMMDDHH  ...  month  day  hours\n0     21.829086 -120.620790  2021080112  ...      8    1     12\n1     21.855751 -120.512500  2021080112  ...      8    1     12\n2     21.882309 -120.404144  2021080112  ...      8    1     12\n3     21.908745 -120.295715  2021080112  ...      8    1     12\n4     21.935051 -120.187225  2021080112  ...      8    1     12\n...         ...         ...         ...  ...    ...  ...    ...\n9995  26.737213  -89.563050  2021080112  ...      8    1     12\n9996  26.728450  -89.444580  2021080112  ...      8    1     12\n9997  26.719570  -89.326170  2021080112  ...      8    1     12\n9998  26.710556  -89.207760  2021080112  ...      8    1     12\n9999  26.701397  -89.089420  2021080112  ...      8    1     12\n\n[10000 rows x 17 columns]\nnew_df after merge ref:  Index(['Lat_airnow', 'Lon_airnow', 'Lat_cmaq', 'Lon_cmaq', 'Latitude',\n       'Longitude', 'YYYYMMDDHH', 'CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)',\n       'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)',\n       'WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day',\n       'hours'],\n      dtype='object')\nnew_df after merge all three:  Index(['Lat_airnow', 'Lon_airnow', 'Lat_cmaq', 'Lon_cmaq', 'Latitude_x',\n       'Longitude_x', 'YYYYMMDDHH', 'CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)',\n       'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)',\n       'WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day',\n       'hours', 'StationID', 'Latitude_y', 'Longitude_y', 'AirNOW_O3'],\n      dtype='object')    Lat_airnow  Lon_airnow   Lat_cmaq  ...  Latitude_y  Longitude_y  AirNOW_O3\n0   31.169399  -81.496399  31.131332  ...         NaN          NaN        NaN\n1   42.062199  -87.673599  42.088024  ...         NaN          NaN        NaN\n2   39.758900  -86.397202  39.801613  ...         NaN          NaN        NaN\n3   40.931396  -81.123520  40.971100  ...         NaN          NaN        NaN\n4   43.435001  -88.527802  43.455270  ...         NaN          NaN        NaN\n\n[5 rows x 25 columns]\nTraceback (most recent call last):\n  File \"merge_training_data.py\", line 22, in <module>\n    training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\nNameError: name 'training_data' is not defined\n",
  "history_begin_time" : 1664122644865,
  "history_end_time" : 1664122691179,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "Ix1P8dQMUDPx",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation_one_year.csv\")\nprint(\"obs head: \", obs.columns, obs.head())\nref_stations=pd.read_csv(f\"{cmaq_folder}/updated_station_to_cell.csv\")\n\nprint(\"ref_stations head: \", ref_stations.columns, ref_stations.head())\n\nchunksize = 10000\nwith pd.read_csv(\"/groups/ESS3/aalnaim/cmaq/merged_cmaq_one_year.csv\", chunksize=chunksize) as reader:\n  for chunk in reader:\n    print(chunk)\n    new_df = pd.merge(ref_stations, chunk,  how='left', left_on=['Lat_cmaq','Lon_cmaq'], right_on = ['Latitude','Longitude'])\n    print(\"new_df after merge ref: \", new_df.columns)\n    #new_df.to_csv(f\"{cmaq_folder}/subset.csv\")\n    chunk_final = pd.merge(new_df, obs, how='left', left_on=['Lat_airnow','Lon_airnow','YYYYMMDDHH'], right_on = ['Latitude','Longitude','YYYYMMDDHH'])\n    print(\"new_df after merge all three: \", chunk_final.columns, chunk_final.head())\n    chunk_final=chunk_final.drop_duplicates(keep=False)\n    training_data = chunk_final.loc[:,~chunk_final.columns.duplicated()]\n\n    training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\n    training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\n    training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\n    training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\n    new_chunk_df=training_data.drop(['YYYYMMDDHH'],axis=1)\n    final_chunk_df = new_chunk_df[new_df.AirNOW_O3!= -999]\n    print(final_chunk_df)\n    break\n\n#final_df.to_csv(f\"{cmaq_folder}/trainingNew.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/trainingNew.csv\")\n\n\n",
  "history_output" : "obs head:  Index(['StationID', 'Latitude', 'Longitude', 'AirNOW_O3', 'YYYYMMDDHH'], dtype='object')    StationID   Latitude   Longitude  AirNOW_O3  YYYYMMDDHH\n0  483951076  31.168888  -96.481941     -999.0  2021080112\n1  080699991  40.277802 -105.545303     -999.0  2021080112\n2  530639995  47.808228 -117.343269     -999.0  2021080112\n3  530639997  47.663963 -117.257652     -999.0  2021080112\n4  530639996  47.660568 -117.084503     -999.0  2021080112\nref_stations head:  Index(['Lat_airnow', 'Lon_airnow', 'Lat_cmaq', 'Lon_cmaq'], dtype='object')    Lat_airnow  Lon_airnow   Lat_cmaq   Lon_cmaq\n0   31.169399  -81.496399  31.131332 -81.537930\n1   42.062199  -87.673599  42.088024 -87.710205\n2   39.758900  -86.397202  39.801613 -86.452760\n3   40.931396  -81.123520  40.971100 -81.189270\n4   43.435001  -88.527802  43.455270 -88.565704\n       Latitude   Longitude  YYYYMMDDHH  ...  month  day  hours\n0     21.829086 -120.620790  2021080112  ...      8    1     12\n1     21.855751 -120.512500  2021080112  ...      8    1     12\n2     21.882309 -120.404144  2021080112  ...      8    1     12\n3     21.908745 -120.295715  2021080112  ...      8    1     12\n4     21.935051 -120.187225  2021080112  ...      8    1     12\n...         ...         ...         ...  ...    ...  ...    ...\n9995  26.737213  -89.563050  2021080112  ...      8    1     12\n9996  26.728450  -89.444580  2021080112  ...      8    1     12\n9997  26.719570  -89.326170  2021080112  ...      8    1     12\n9998  26.710556  -89.207760  2021080112  ...      8    1     12\n9999  26.701397  -89.089420  2021080112  ...      8    1     12\n\n[10000 rows x 17 columns]\nnew_df after merge ref:  Index(['Lat_airnow', 'Lon_airnow', 'Lat_cmaq', 'Lon_cmaq', 'Latitude',\n       'Longitude', 'YYYYMMDDHH', 'CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)',\n       'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)',\n       'WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day',\n       'hours'],\n      dtype='object')\nnew_df after merge all three:  Index(['Lat_airnow', 'Lon_airnow', 'Lat_cmaq', 'Lon_cmaq', 'Latitude_x',\n       'Longitude_x', 'YYYYMMDDHH', 'CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)',\n       'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)',\n       'WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day',\n       'hours', 'StationID', 'Latitude_y', 'Longitude_y', 'AirNOW_O3'],\n      dtype='object')    Lat_airnow  Lon_airnow   Lat_cmaq  ...  Latitude_y  Longitude_y  AirNOW_O3\n0   31.169399  -81.496399  31.131332  ...         NaN          NaN        NaN\n1   42.062199  -87.673599  42.088024  ...         NaN          NaN        NaN\n2   39.758900  -86.397202  39.801613  ...         NaN          NaN        NaN\n3   40.931396  -81.123520  40.971100  ...         NaN          NaN        NaN\n4   43.435001  -88.527802  43.455270  ...         NaN          NaN        NaN\n\n[5 rows x 25 columns]\nTraceback (most recent call last):\n  File \"merge_training_data.py\", line 28, in <module>\n    final_chunk_df = new_chunk_df[new_df.AirNOW_O3!= -999]\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/generic.py\", line 5583, in __getattr__\n    return object.__getattribute__(self, name)\nAttributeError: 'DataFrame' object has no attribute 'AirNOW_O3'\n",
  "history_begin_time" : 1664122399321,
  "history_end_time" : 1664122445503,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "aNuYBSg3z387",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation_one_year.csv\")\nprint(\"obs head: \", obs.columns, obs.head())\nref_stations=pd.read_csv(f\"{cmaq_folder}/updated_station_to_cell.csv\")\n\nprint(\"ref_stations head: \", ref_stations.columns, ref_stations.head())\n\nchunksize = 10000\nwith pd.read_csv(\"/groups/ESS3/aalnaim/cmaq/merged_cmaq_one_year.csv\", chunksize=chunksize) as reader:\n  for chunk in reader:\n    print(chunk)\n    new_df = pd.merge(ref_stations, chunk,  how='left', left_on=['Lat_cmaq','Lon_cmaq'], right_on = ['Latitude','Longitude'])\n    print(\"new_df after merge ref: \", new_df.columns)\n    #new_df.to_csv(f\"{cmaq_folder}/subset.csv\")\n    chunk_final = pd.merge(new_df, obs, how='left', left_on=['Lat_airnow','Lon_airnow','YYYYMMDDHH'], right_on = ['Latitude','Longitude','YYYYMMDDHH'])\n    print(\"new_df after merge all three: \", new_df.columns, new_df.head())\n    chunk_final=chunk_final.drop_duplicates(keep=False)\n    training_data = chunk_final.loc[:,~chunk_final.columns.duplicated()]\n\n    training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\n    training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\n    training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\n    training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\n    new_chunk_df=training_data.drop(['YYYYMMDDHH'],axis=1)\n    final_chunk_df = new_chunk_df[new_df.AirNOW_O3!= -999]\n    print(final_chunk_df)\n    break\n\n#final_df.to_csv(f\"{cmaq_folder}/trainingNew.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/trainingNew.csv\")\n\n\n",
  "history_output" : "obs head:  Index(['StationID', 'Latitude', 'Longitude', 'AirNOW_O3', 'YYYYMMDDHH'], dtype='object')    StationID   Latitude   Longitude  AirNOW_O3  YYYYMMDDHH\n0  483951076  31.168888  -96.481941     -999.0  2021080112\n1  080699991  40.277802 -105.545303     -999.0  2021080112\n2  530639995  47.808228 -117.343269     -999.0  2021080112\n3  530639997  47.663963 -117.257652     -999.0  2021080112\n4  530639996  47.660568 -117.084503     -999.0  2021080112\nref_stations head:  Index(['Lat_airnow', 'Lon_airnow', 'Lat_cmaq', 'Lon_cmaq'], dtype='object')    Lat_airnow  Lon_airnow   Lat_cmaq   Lon_cmaq\n0   31.169399  -81.496399  31.131332 -81.537930\n1   42.062199  -87.673599  42.088024 -87.710205\n2   39.758900  -86.397202  39.801613 -86.452760\n3   40.931396  -81.123520  40.971100 -81.189270\n4   43.435001  -88.527802  43.455270 -88.565704\n       Latitude   Longitude  YYYYMMDDHH  ...  month  day  hours\n0     21.829086 -120.620790  2021080112  ...      8    1     12\n1     21.855751 -120.512500  2021080112  ...      8    1     12\n2     21.882309 -120.404144  2021080112  ...      8    1     12\n3     21.908745 -120.295715  2021080112  ...      8    1     12\n4     21.935051 -120.187225  2021080112  ...      8    1     12\n...         ...         ...         ...  ...    ...  ...    ...\n9995  26.737213  -89.563050  2021080112  ...      8    1     12\n9996  26.728450  -89.444580  2021080112  ...      8    1     12\n9997  26.719570  -89.326170  2021080112  ...      8    1     12\n9998  26.710556  -89.207760  2021080112  ...      8    1     12\n9999  26.701397  -89.089420  2021080112  ...      8    1     12\n\n[10000 rows x 17 columns]\nnew_df after merge ref:  Index(['Lat_airnow', 'Lon_airnow', 'Lat_cmaq', 'Lon_cmaq', 'Latitude',\n       'Longitude', 'YYYYMMDDHH', 'CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)',\n       'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)',\n       'WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day',\n       'hours'],\n      dtype='object')\nnew_df after merge all three:  Index(['Lat_airnow', 'Lon_airnow', 'Lat_cmaq', 'Lon_cmaq', 'Latitude',\n       'Longitude', 'YYYYMMDDHH', 'CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)',\n       'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)',\n       'WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day',\n       'hours'],\n      dtype='object')    Lat_airnow  Lon_airnow   Lat_cmaq   Lon_cmaq  ...  CFRAC  month  day  hours\n0   31.169399  -81.496399  31.131332 -81.537930  ...    NaN    NaN  NaN    NaN\n1   42.062199  -87.673599  42.088024 -87.710205  ...    NaN    NaN  NaN    NaN\n2   39.758900  -86.397202  39.801613 -86.452760  ...    NaN    NaN  NaN    NaN\n3   40.931396  -81.123520  40.971100 -81.189270  ...    NaN    NaN  NaN    NaN\n4   43.435001  -88.527802  43.455270 -88.565704  ...    NaN    NaN  NaN    NaN\n\n[5 rows x 21 columns]\nTraceback (most recent call last):\n  File \"merge_training_data.py\", line 28, in <module>\n    final_chunk_df = new_chunk_df[new_df.AirNOW_O3!= -999]\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/generic.py\", line 5583, in __getattr__\n    return object.__getattribute__(self, name)\nAttributeError: 'DataFrame' object has no attribute 'AirNOW_O3'\n",
  "history_begin_time" : 1664122319251,
  "history_end_time" : 1664122365634,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "DeQxkxVPUaIF",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation_one_year.csv\")\nprint(\"obs head: \", obs.columns, obs.head())\nref_stations=pd.read_csv(f\"{cmaq_folder}/updated_station_to_cell.csv\")\n\nprint(\"ref_stations head: \", ref_stations.columns, ref_stations.head())\n\nchunksize = 10000\nwith pd.read_csv(\"/groups/ESS3/aalnaim/cmaq/merged_cmaq_one_year.csv\", chunksize=chunksize) as reader:\n  for chunk in reader:\n    print(chunk)\n    new_df = pd.merge(ref_stations, chunk,  how='left', left_on=['Lat_cmaq','Lon_cmaq'], right_on = ['Latitude','Longitude'])\n    print(\"new_df after merge ref: \", new_df.columns)\n    #new_df.to_csv(f\"{cmaq_folder}/subset.csv\")\n    chunk_final = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Lat_airnow','Lon_airnow','YYYYMMDDHH'])\n    print(\"new_df after merge all three: \", new_df.columns, new_df.head())\n    chunk_final=chunk_final.drop_duplicates(keep=False)\n    training_data = chunk_final.loc[:,~chunk_final.columns.duplicated()]\n\n    training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\n    training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\n    training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\n    training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\n    new_chunk_df=training_data.drop(['YYYYMMDDHH'],axis=1)\n    final_chunk_df = new_chunk_df[new_df.AirNOW_O3!= -999]\n    print(final_chunk_df)\n    break\n\n#final_df.to_csv(f\"{cmaq_folder}/trainingNew.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/trainingNew.csv\")\n\n\n",
  "history_output" : "obs head:  Index(['StationID', 'Latitude', 'Longitude', 'AirNOW_O3', 'YYYYMMDDHH'], dtype='object')    StationID   Latitude   Longitude  AirNOW_O3  YYYYMMDDHH\n0  483951076  31.168888  -96.481941     -999.0  2021080112\n1  080699991  40.277802 -105.545303     -999.0  2021080112\n2  530639995  47.808228 -117.343269     -999.0  2021080112\n3  530639997  47.663963 -117.257652     -999.0  2021080112\n4  530639996  47.660568 -117.084503     -999.0  2021080112\nref_stations head:  Index(['Lat_airnow', 'Lon_airnow', 'Lat_cmaq', 'Lon_cmaq'], dtype='object')    Lat_airnow  Lon_airnow   Lat_cmaq   Lon_cmaq\n0   31.169399  -81.496399  31.131332 -81.537930\n1   42.062199  -87.673599  42.088024 -87.710205\n2   39.758900  -86.397202  39.801613 -86.452760\n3   40.931396  -81.123520  40.971100 -81.189270\n4   43.435001  -88.527802  43.455270 -88.565704\n       Latitude   Longitude  YYYYMMDDHH  ...  month  day  hours\n0     21.829086 -120.620790  2021080112  ...      8    1     12\n1     21.855751 -120.512500  2021080112  ...      8    1     12\n2     21.882309 -120.404144  2021080112  ...      8    1     12\n3     21.908745 -120.295715  2021080112  ...      8    1     12\n4     21.935051 -120.187225  2021080112  ...      8    1     12\n...         ...         ...         ...  ...    ...  ...    ...\n9995  26.737213  -89.563050  2021080112  ...      8    1     12\n9996  26.728450  -89.444580  2021080112  ...      8    1     12\n9997  26.719570  -89.326170  2021080112  ...      8    1     12\n9998  26.710556  -89.207760  2021080112  ...      8    1     12\n9999  26.701397  -89.089420  2021080112  ...      8    1     12\n\n[10000 rows x 17 columns]\nnew_df after merge ref:  Index(['Lat_airnow', 'Lon_airnow', 'Lat_cmaq', 'Lon_cmaq', 'Latitude',\n       'Longitude', 'YYYYMMDDHH', 'CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)',\n       'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)',\n       'WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day',\n       'hours'],\n      dtype='object')\nnew_df after merge all three:  Index(['Lat_airnow', 'Lon_airnow', 'Lat_cmaq', 'Lon_cmaq', 'Latitude',\n       'Longitude', 'YYYYMMDDHH', 'CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)',\n       'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)',\n       'WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day',\n       'hours'],\n      dtype='object')    Lat_airnow  Lon_airnow   Lat_cmaq   Lon_cmaq  ...  CFRAC  month  day  hours\n0   31.169399  -81.496399  31.131332 -81.537930  ...    NaN    NaN  NaN    NaN\n1   42.062199  -87.673599  42.088024 -87.710205  ...    NaN    NaN  NaN    NaN\n2   39.758900  -86.397202  39.801613 -86.452760  ...    NaN    NaN  NaN    NaN\n3   40.931396  -81.123520  40.971100 -81.189270  ...    NaN    NaN  NaN    NaN\n4   43.435001  -88.527802  43.455270 -88.565704  ...    NaN    NaN  NaN    NaN\n\n[5 rows x 21 columns]\nTraceback (most recent call last):\n  File \"merge_training_data.py\", line 28, in <module>\n    final_chunk_df = new_chunk_df[new_df.AirNOW_O3!= -999]\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/generic.py\", line 5583, in __getattr__\n    return object.__getattribute__(self, name)\nAttributeError: 'DataFrame' object has no attribute 'AirNOW_O3'\n",
  "history_begin_time" : 1664121771685,
  "history_end_time" : 1664121882504,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "XzzDgbhVyH0J",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation_one_year.csv\")\nprint(\"obs head: \", obs.columns, obs.head())\nref_stations=pd.read_csv(f\"{cmaq_folder}/updated_station_to_cell.csv\")\n\nprint(\"ref_stations head: \", ref_stations.columns, ref_stations.head())\n\nchunksize = 10000\nwith pd.read_csv(\"/groups/ESS3/aalnaim/cmaq/merged_cmaq_one_year.csv\", chunksize=chunksize) as reader:\n  for chunk in reader:\n    print(chunk)\n    new_df = pd.merge(ref_stations, chunk,  how='left', left_on=['Lat_cmaq','Lon_cmaq'], right_on = ['Latitude','Longitude'])\n    print(\"new_df after merge ref: \", new_df.columns)\n    #new_df.to_csv(f\"{cmaq_folder}/subset.csv\")\n    chunk_final = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Lat_airnow','Lon_airnow','YYYYMMDDHH'])\n    chunk_final=chunk_final.drop_duplicates(keep=False)\n    training_data = chunk_final.loc[:,~chunk_final.columns.duplicated()]\n\n    training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\n    training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\n    training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\n    training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\n    new_chunk_df=training_data.drop(['YYYYMMDDHH'],axis=1)\n    final_chunk_df = new_chunk_df[new_df.AirNOW_O3!= -999]\n    print(final_chunk_df)\n    break\n\n#final_df.to_csv(f\"{cmaq_folder}/trainingNew.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/trainingNew.csv\")\n\n\n",
  "history_output" : "obs head:  Index(['StationID', 'Latitude', 'Longitude', 'AirNOW_O3', 'YYYYMMDDHH'], dtype='object')    StationID   Latitude   Longitude  AirNOW_O3  YYYYMMDDHH\n0  483951076  31.168888  -96.481941     -999.0  2021080112\n1  080699991  40.277802 -105.545303     -999.0  2021080112\n2  530639995  47.808228 -117.343269     -999.0  2021080112\n3  530639997  47.663963 -117.257652     -999.0  2021080112\n4  530639996  47.660568 -117.084503     -999.0  2021080112\nref_stations head:  Index(['Lat_airnow', 'Lon_airnow', 'Lat_cmaq', 'Lon_cmaq'], dtype='object')    Lat_airnow  Lon_airnow   Lat_cmaq   Lon_cmaq\n0   31.169399  -81.496399  31.131332 -81.537930\n1   42.062199  -87.673599  42.088024 -87.710205\n2   39.758900  -86.397202  39.801613 -86.452760\n3   40.931396  -81.123520  40.971100 -81.189270\n4   43.435001  -88.527802  43.455270 -88.565704\n       Latitude   Longitude  YYYYMMDDHH  ...  month  day  hours\n0     21.829086 -120.620790  2021080112  ...      8    1     12\n1     21.855751 -120.512500  2021080112  ...      8    1     12\n2     21.882309 -120.404144  2021080112  ...      8    1     12\n3     21.908745 -120.295715  2021080112  ...      8    1     12\n4     21.935051 -120.187225  2021080112  ...      8    1     12\n...         ...         ...         ...  ...    ...  ...    ...\n9995  26.737213  -89.563050  2021080112  ...      8    1     12\n9996  26.728450  -89.444580  2021080112  ...      8    1     12\n9997  26.719570  -89.326170  2021080112  ...      8    1     12\n9998  26.710556  -89.207760  2021080112  ...      8    1     12\n9999  26.701397  -89.089420  2021080112  ...      8    1     12\n\n[10000 rows x 17 columns]\nnew_df after merge ref:  Index(['Lat_airnow', 'Lon_airnow', 'Lat_cmaq', 'Lon_cmaq', 'Latitude',\n       'Longitude', 'YYYYMMDDHH', 'CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)',\n       'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)',\n       'WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day',\n       'hours'],\n      dtype='object')\nTraceback (most recent call last):\n  File \"merge_training_data.py\", line 27, in <module>\n    final_chunk_df = new_chunk_df[new_df.AirNOW_O3!= -999]\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/generic.py\", line 5583, in __getattr__\n    return object.__getattribute__(self, name)\nAttributeError: 'DataFrame' object has no attribute 'AirNOW_O3'\n",
  "history_begin_time" : 1664121594053,
  "history_end_time" : 1664121699924,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "ADS1FSHZSdYs",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation_one_year.csv\")\nprint(\"obs head: \", obs.columns, obs.head())\nref_stations=pd.read_csv(f\"{cmaq_folder}/updated_station_to_cell.csv\")\n\nprint(\"ref_stations head: \", ref_stations.columns, ref_stations.head())\n\nchunksize = 10000\nwith pd.read_csv(\"/groups/ESS3/aalnaim/cmaq/merged_cmaq_one_year.csv\", chunksize=chunksize) as reader:\n  for chunk in reader:\n    print(chunk)\n    new_df = pd.merge(ref_stations, chunk,  how='left', left_on=['Lat_cmaq','Lon_cmaq'], right_on = ['Latitude','Longitude'])\n    print(new_df.columns)\n    #new_df.to_csv(f\"{cmaq_folder}/subset.csv\")\n    chunk_final = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Lat_airnow','Lon_airnow','YYYYMMDDHH'])\n    chunk_final=chunk_final.drop_duplicates(keep=False)\n    training_data = chunk_final.loc[:,~chunk_final.columns.duplicated()]\n\n    training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\n    training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\n    training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\n    training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\n    new_chunk_df=training_data.drop(['YYYYMMDDHH'],axis=1)\n    final_chunk_df = new_chunk_df[new_df.AirNOW_O3!= -999]\n    print(final_chunk_df)\n    break\n\n#final_df.to_csv(f\"{cmaq_folder}/trainingNew.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/trainingNew.csv\")\n\n\n",
  "history_output" : "obs head:  Index(['StationID', 'Latitude', 'Longitude', 'AirNOW_O3', 'YYYYMMDDHH'], dtype='object')    StationID   Latitude   Longitude  AirNOW_O3  YYYYMMDDHH\n0  483951076  31.168888  -96.481941     -999.0  2021080112\n1  080699991  40.277802 -105.545303     -999.0  2021080112\n2  530639995  47.808228 -117.343269     -999.0  2021080112\n3  530639997  47.663963 -117.257652     -999.0  2021080112\n4  530639996  47.660568 -117.084503     -999.0  2021080112\nref_stations head:  Index(['Lat_airnow', 'Lon_airnow', 'Lat_cmaq', 'Lon_cmaq'], dtype='object')    Lat_airnow  Lon_airnow   Lat_cmaq   Lon_cmaq\n0   31.169399  -81.496399  31.131332 -81.537930\n1   42.062199  -87.673599  42.088024 -87.710205\n2   39.758900  -86.397202  39.801613 -86.452760\n3   40.931396  -81.123520  40.971100 -81.189270\n4   43.435001  -88.527802  43.455270 -88.565704\n       Latitude   Longitude  YYYYMMDDHH  ...  month  day  hours\n0     21.829086 -120.620790  2021080112  ...      8    1     12\n1     21.855751 -120.512500  2021080112  ...      8    1     12\n2     21.882309 -120.404144  2021080112  ...      8    1     12\n3     21.908745 -120.295715  2021080112  ...      8    1     12\n4     21.935051 -120.187225  2021080112  ...      8    1     12\n...         ...         ...         ...  ...    ...  ...    ...\n9995  26.737213  -89.563050  2021080112  ...      8    1     12\n9996  26.728450  -89.444580  2021080112  ...      8    1     12\n9997  26.719570  -89.326170  2021080112  ...      8    1     12\n9998  26.710556  -89.207760  2021080112  ...      8    1     12\n9999  26.701397  -89.089420  2021080112  ...      8    1     12\n\n[10000 rows x 17 columns]\nIndex(['Lat_airnow', 'Lon_airnow', 'Lat_cmaq', 'Lon_cmaq', 'Latitude',\n       'Longitude', 'YYYYMMDDHH', 'CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)',\n       'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)',\n       'WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day',\n       'hours'],\n      dtype='object')\nTraceback (most recent call last):\n  File \"merge_training_data.py\", line 27, in <module>\n    final_chunk_df = new_chunk_df[new_df.AirNOW_O3!= -999]\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/generic.py\", line 5583, in __getattr__\n    return object.__getattribute__(self, name)\nAttributeError: 'DataFrame' object has no attribute 'AirNOW_O3'\n",
  "history_begin_time" : 1664121368853,
  "history_end_time" : 1664121456207,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "nauzcMXtytRu",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation_one_year.csv\")\nprint(\"obs head: \", obs.columns, obs.head())\nref_stations=pd.read_csv(f\"{cmaq_folder}/updated_station_to_cell.csv\")\n\nchunksize = 10000\nwith pd.read_csv(\"/groups/ESS3/aalnaim/cmaq/merged_cmaq_one_year.csv\", chunksize=chunksize) as reader:\n  for chunk in reader:\n    print(chunk)\n    new_df = pd.merge(ref_stations, chunk,  how='left', left_on=['Lat_cmaq','Lon_cmaq'], right_on = ['Latitude','Longitude'])\n    print(new_df.columns)\n    #new_df.to_csv(f\"{cmaq_folder}/subset.csv\")\n    chunk_final = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Lat_airnow','Lon_airnow','YYYYMMDDHH'])\n    chunk_final=chunk_final.drop_duplicates(keep=False)\n    training_data = chunk_final.loc[:,~chunk_final.columns.duplicated()]\n\n    training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\n    training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\n    training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\n    training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\n    new_chunk_df=training_data.drop(['YYYYMMDDHH'],axis=1)\n    final_chunk_df = new_chunk_df[new_df.AirNOW_O3!= -999]\n    print(final_chunk_df)\n    break\n\n#final_df.to_csv(f\"{cmaq_folder}/trainingNew.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/trainingNew.csv\")\n\n\n",
  "history_output" : "obs head:  Index(['StationID', 'Latitude', 'Longitude', 'AirNOW_O3', 'YYYYMMDDHH'], dtype='object')    StationID   Latitude   Longitude  AirNOW_O3  YYYYMMDDHH\n0  483951076  31.168888  -96.481941     -999.0  2021080112\n1  080699991  40.277802 -105.545303     -999.0  2021080112\n2  530639995  47.808228 -117.343269     -999.0  2021080112\n3  530639997  47.663963 -117.257652     -999.0  2021080112\n4  530639996  47.660568 -117.084503     -999.0  2021080112\n       Latitude   Longitude  YYYYMMDDHH  ...  month  day  hours\n0     21.829086 -120.620790  2021080112  ...      8    1     12\n1     21.855751 -120.512500  2021080112  ...      8    1     12\n2     21.882309 -120.404144  2021080112  ...      8    1     12\n3     21.908745 -120.295715  2021080112  ...      8    1     12\n4     21.935051 -120.187225  2021080112  ...      8    1     12\n...         ...         ...         ...  ...    ...  ...    ...\n9995  26.737213  -89.563050  2021080112  ...      8    1     12\n9996  26.728450  -89.444580  2021080112  ...      8    1     12\n9997  26.719570  -89.326170  2021080112  ...      8    1     12\n9998  26.710556  -89.207760  2021080112  ...      8    1     12\n9999  26.701397  -89.089420  2021080112  ...      8    1     12\n\n[10000 rows x 17 columns]\nIndex(['Lat_airnow', 'Lon_airnow', 'Lat_cmaq', 'Lon_cmaq', 'Latitude',\n       'Longitude', 'YYYYMMDDHH', 'CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)',\n       'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)',\n       'WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day',\n       'hours'],\n      dtype='object')\nTraceback (most recent call last):\n  File \"merge_training_data.py\", line 25, in <module>\n    final_chunk_df = new_chunk_df[new_df.AirNOW_O3!= -999]\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/generic.py\", line 5583, in __getattr__\n    return object.__getattribute__(self, name)\nAttributeError: 'DataFrame' object has no attribute 'AirNOW_O3'\n",
  "history_begin_time" : 1664121252144,
  "history_end_time" : 1664121339265,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "ahzfjhhZewN7",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation_one_year.csv\")\nref_stations=pd.read_csv(f\"{cmaq_folder}/updated_station_to_cell.csv\")\n\nchunksize = 10000\nwith pd.read_csv(\"/groups/ESS3/aalnaim/cmaq/merged_cmaq_one_year.csv\", chunksize=chunksize) as reader:\n  for chunk in reader:\n    print(chunk)\n    new_df = pd.merge(ref_stations, chunk,  how='left', left_on=['Lat_cmaq','Lon_cmaq'], right_on = ['Latitude','Longitude'])\n    print(new_df.columns)\n    #new_df.to_csv(f\"{cmaq_folder}/subset.csv\")\n    chunk_final = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Lat_airnow','Lon_airnow','YYYYMMDDHH'])\n    chunk_final=chunk_final.drop_duplicates(keep=False)\n    training_data = chunk_final.loc[:,~chunk_final.columns.duplicated()]\n\n    training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\n    training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\n    training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\n    training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\n    new_chunk_df=training_data.drop(['YYYYMMDDHH'],axis=1)\n    final_chunk_df = new_chunk_df[new_df.AirNOW_O3!= -999]\n    print(final_chunk_df)\n    break\n\n#final_df.to_csv(f\"{cmaq_folder}/trainingNew.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/trainingNew.csv\")\n\n\n",
  "history_output" : "       Latitude   Longitude  YYYYMMDDHH  ...  month  day  hours\n0     21.829086 -120.620790  2021080112  ...      8    1     12\n1     21.855751 -120.512500  2021080112  ...      8    1     12\n2     21.882309 -120.404144  2021080112  ...      8    1     12\n3     21.908745 -120.295715  2021080112  ...      8    1     12\n4     21.935051 -120.187225  2021080112  ...      8    1     12\n...         ...         ...         ...  ...    ...  ...    ...\n9995  26.737213  -89.563050  2021080112  ...      8    1     12\n9996  26.728450  -89.444580  2021080112  ...      8    1     12\n9997  26.719570  -89.326170  2021080112  ...      8    1     12\n9998  26.710556  -89.207760  2021080112  ...      8    1     12\n9999  26.701397  -89.089420  2021080112  ...      8    1     12\n\n[10000 rows x 17 columns]\nIndex(['Lat_airnow', 'Lon_airnow', 'Lat_cmaq', 'Lon_cmaq', 'Latitude',\n       'Longitude', 'YYYYMMDDHH', 'CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)',\n       'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)',\n       'WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day',\n       'hours'],\n      dtype='object')\nTraceback (most recent call last):\n  File \"merge_training_data.py\", line 24, in <module>\n    final_chunk_df = new_chunk_df[new_df.AirNOW_O3!= -999]\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/generic.py\", line 5583, in __getattr__\n    return object.__getattribute__(self, name)\nAttributeError: 'DataFrame' object has no attribute 'AirNOW_O3'\n",
  "history_begin_time" : 1664121152678,
  "history_end_time" : 1664121241997,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "eweic9Zumgf8",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation_one_year.csv\")\nref_stations=pd.read_csv(f\"{cmaq_folder}/updated_station_to_cell.csv\")\n\nchunksize = 10000\nwith pd.read_csv(\"/groups/ESS3/aalnaim/cmaq/merged_cmaq_one_year.csv\", chunksize=chunksize) as reader:\n  for chunk in reader:\n    print(chunk)\n    new_df = pd.merge(ref_stations, chunk,  how='left', left_on=['Lat_cmaq','Lon_cmaq'], right_on = ['Latitude','Longitude'])\n    #new_df.to_csv(f\"{cmaq_folder}/subset.csv\")\n    chunk_final = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Lat_airnow','Lon_airnow','YYYYMMDDHH'])\n    chunk_final=chunk_final.drop_duplicates(keep=False)\n    training_data = chunk_final.loc[:,~chunk_final.columns.duplicated()]\n\n    training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\n    training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\n    training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\n    training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\n    new_chunk_df=training_data.drop(['YYYYMMDDHH'],axis=1)\n    final_chunk_df = new_chunk_df[new_df.AirNOW_O3!= -999]\n    print(final_chunk_df)\n    break\n\n#final_df.to_csv(f\"{cmaq_folder}/trainingNew.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/trainingNew.csv\")\n\n\n",
  "history_output" : "       Latitude   Longitude  YYYYMMDDHH  ...  month  day  hours\n0     21.829086 -120.620790  2021080112  ...      8    1     12\n1     21.855751 -120.512500  2021080112  ...      8    1     12\n2     21.882309 -120.404144  2021080112  ...      8    1     12\n3     21.908745 -120.295715  2021080112  ...      8    1     12\n4     21.935051 -120.187225  2021080112  ...      8    1     12\n...         ...         ...         ...  ...    ...  ...    ...\n9995  26.737213  -89.563050  2021080112  ...      8    1     12\n9996  26.728450  -89.444580  2021080112  ...      8    1     12\n9997  26.719570  -89.326170  2021080112  ...      8    1     12\n9998  26.710556  -89.207760  2021080112  ...      8    1     12\n9999  26.701397  -89.089420  2021080112  ...      8    1     12\n\n[10000 rows x 17 columns]\nTraceback (most recent call last):\n  File \"merge_training_data.py\", line 23, in <module>\n    final_chunk_df = new_chunk_df[new_df.AirNOW_O3!= -999]\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/generic.py\", line 5583, in __getattr__\n    return object.__getattribute__(self, name)\nAttributeError: 'DataFrame' object has no attribute 'AirNOW_O3'\n",
  "history_begin_time" : 1664121001346,
  "history_end_time" : 1664121097188,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "nlnjhpeIg8Yz",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation_one_year.csv\")\nref_stations=pd.read_csv(f\"{cmaq_folder}/updated_station_to_cell.csv\")\n\nchunksize = 10 ** 6\nwith pd.read_csv(\"/groups/ESS3/aalnaim/cmaq/merged_cmaq_one_year.csv\", chunksize=chunksize) as reader:\n  for chunk in reader:\n    new_df = pd.merge(ref_stations, chunk,  how='left', left_on=['Lat_cmaq','Lon_cmaq'], right_on = ['Latitude','Longitude'])\n    #new_df.to_csv(f\"{cmaq_folder}/subset.csv\")\n    chunk_final = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Lat_airnow','Lon_airnow','YYYYMMDDHH'])\n    chunk_final=chunk_final.drop_duplicates(keep=False)\n    training_data = chunk_final.loc[:,~chunk_final.columns.duplicated()]\n\n    training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\n    training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\n    training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\n    training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\n    new_chunk_df=training_data.drop(['YYYYMMDDHH'],axis=1)\n    final_chunk_df = new_chunk_df[new_df.AirNOW_O3!= -999]\n    print(final_chunk_df)\n    break\n\n#final_df.to_csv(f\"{cmaq_folder}/trainingNew.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/trainingNew.csv\")\n\n\n",
  "history_output" : "merge_training_data.py:9: DtypeWarning: Columns (0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16) have mixed types. Specify dtype option on import or set low_memory=False.\n  for chunk in reader:\nTraceback (most recent call last):\n  File \"merge_training_data.py\", line 10, in <module>\n    new_df = pd.merge(ref_stations, chunk,  how='left', left_on=['Lat_cmaq','Lon_cmaq'], right_on = ['Latitude','Longitude'])\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/reshape/merge.py\", line 107, in merge\n    op = _MergeOperation(\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/reshape/merge.py\", line 704, in __init__\n    self._maybe_coerce_merge_keys()\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/reshape/merge.py\", line 1257, in _maybe_coerce_merge_keys\n    raise ValueError(msg)\nValueError: You are trying to merge on float64 and object columns. If you wish to proceed you should use pd.concat\n",
  "history_begin_time" : 1664120864006,
  "history_end_time" : 1664120926546,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "UZjWRyxJsRLn",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation_one_year.csv\")\nref_stations=pd.read_csv(f\"{cmaq_folder}/updated_station_to_cell.csv\")\n\nchunksize = 10 ** 6\nwith pd.read_csv(filename, chunksize=chunksize) as reader:\n  for chunk in reader:\n    new_df = pd.merge(ref_stations, chunk,  how='left', left_on=['Lat_cmaq','Lon_cmaq'], right_on = ['Latitude','Longitude'])\n    #new_df.to_csv(f\"{cmaq_folder}/subset.csv\")\n    chunk_final = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Lat_airnow','Lon_airnow','YYYYMMDDHH'])\n    chunk_final=chunk_final.drop_duplicates(keep=False)\n    training_data = chunk_final.loc[:,~chunk_final.columns.duplicated()]\n\n    training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\n    training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\n    training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\n    training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\n    new_chunk_df=training_data.drop(['YYYYMMDDHH'],axis=1)\n    final_chunk_df = new_chunk_df[new_df.AirNOW_O3!= -999]\n    print(final_chunk_df)\n    break\n\n#final_df.to_csv(f\"{cmaq_folder}/trainingNew.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/trainingNew.csv\")\n\n\n",
  "history_output" : "Traceback (most recent call last):\n  File \"merge_training_data.py\", line 8, in <module>\n    with pd.read_csv(filename, chunksize=chunksize) as reader:\nNameError: name 'filename' is not defined\n",
  "history_begin_time" : 1664120736201,
  "history_end_time" : 1664120776361,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "SinzjjkOoSmT",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation_one_year.csv\")\nref_stations=pd.read_csv(f\"{cmaq_folder}/updated_station_to_cell.csv\")\n\nchunksize = 10 ** 6\nwith pd.read_csv(filename, chunksize=chunksize) as reader:\n  for chunk in reader:\n    new_df = pd.merge(ref_stations, chunk,  how='left', left_on=['Lat_cmaq','Lon_cmaq'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(f\"{cmaq_folder}/subset.csv\")\n    chunk_final = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Lat_airnow','Lon_airnow','YYYYMMDDHH'])\n    chunk_final=chunk_final.drop_duplicates(keep=False)\n    training_data = chunk_final.loc[:,~chunk_final.columns.duplicated()]\n\n    training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\n    training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\n    training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\n    training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\n    new_chunk_df=training_data.drop(['YYYYMMDDHH'],axis=1)\n    final_chunk_df = new_chunk_df[new_df.AirNOW_O3!= -999]\n    print(final_chunk_df)\n    break\n\n#final_df.to_csv(f\"{cmaq_folder}/trainingNew.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/trainingNew.csv\")\n\n\n",
  "history_output" : "  File \"merge_training_data.py\", line 12\n    chunk_final = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Lat_airnow','Lon_airnow','YYYYMMDDHH'])\n    ^\nIndentationError: unexpected indent\n",
  "history_begin_time" : 1664120676606,
  "history_end_time" : 1664120687502,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "Z7fP85tfjnTD",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation_one_year.csv\")\nref_stations=pd.read_csv(f\"{cmaq_folder}/updated_station_to_cell.csv\")\n\nchunksize = 10 ** 6\nwith pd.read_csv(filename, chunksize=chunksize) as reader:\n  for chunk in reader:\n    new_df = pd.merge(ref_stations, chunk,  how='left', left_on=['Lat_cmaq','Lon_cmaq'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(f\"{cmaq_folder}/subset.csv\")\n    chunk_final = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Lat_airnow','Lon_airnow','YYYYMMDDHH'])\n    chunk_final=chunk_final.drop_duplicates(keep=False)\n    training_data = chunk_final.loc[:,~chunk_final.columns.duplicated()]\n\n    training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\n    training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\n    training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\n    training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\n    new_chunk_df=training_data.drop(['YYYYMMDDHH'],axis=1)\n    final_chunk_df = new_chunk_df[new_df.AirNOW_O3!= -999]\n    print(final_chunk_df)\n    break\n\n#final_df.to_csv(f\"{cmaq_folder}/trainingNew.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/trainingNew.csv\")\n\n\n",
  "history_output" : "  File \"merge_training_data.py\", line 12\n    chunk_final = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Lat_airnow','Lon_airnow','YYYYMMDDHH'])\n    ^\nIndentationError: unexpected indent\n",
  "history_begin_time" : 1664120621394,
  "history_end_time" : 1664120631863,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "62OL6Ei68AAw",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\n# cmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\npath = f'{cmaq_folder}/training_input_hourly'\nall_hourly_files = sorted(glob.glob(os.path.join(path, \"*.csv\"))) \ndf_from_each_hourly_file = (pd.read_csv(f) for f in all_hourly_files)\ncmaq = pd.concat(df_from_each_hourly_file)\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation/observation.csv\")\nref_stations=pd.read_csv(f\"{cmaq_folder}/updated_station_to_cell.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Lat_cmaq','Lon_cmaq'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(f\"{cmaq_folder}/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Lat_airnow','Lon_airnow','YYYYMMDDHH'])\n\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(f\"{cmaq_folder}/trainingNew.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/training.csv\")\n\n\n",
  "history_output" : "All records should be incorporated into : /groups/ESS/zsun/cmaq//training.csv\n",
  "history_begin_time" : 1663783795202,
  "history_end_time" : 1663783845749,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "mag4nh5rs6c",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\n# cmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\npath = f'{cmaq_folder}/training_input_hourly'\nall_hourly_files = sorted(glob.glob(os.path.join(path, \"*.csv\"))) \ndf_from_each_hourly_file = (pd.read_csv(f) for f in all_hourly_files)\ncmaq = pd.concat(df_from_each_hourly_file)\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation/observation.csv\")\nref_stations=pd.read_csv(f\"{cmaq_folder}/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(f\"{cmaq_folder}/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(f\"{cmaq_folder}/trainingNew.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/training.csv\")\n\n\n",
  "history_output" : "Traceback (most recent call last):\n  File \"/Users/joe/gw-workspace/mag4nh5rs6c/merge_training_data.py\", line 8, in <module>\n    cmaq = pd.concat(df_from_each_hourly_file)\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/util/_decorators.py\", line 311, in wrapper\n    return func(*args, **kwargs)\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/core/reshape/concat.py\", line 294, in concat\n    op = _Concatenator(\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/core/reshape/concat.py\", line 351, in __init__\n    raise ValueError(\"No objects to concatenate\")\nValueError: No objects to concatenate\n",
  "history_begin_time" : 1663783478563,
  "history_end_time" : 1663783480127,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "nEeLn8dViyq7",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\n# cmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\npath = f'{cmaq_folder}/training_input_hourly'\nall_hourly_files = sorted(glob.glob(os.path.join(path, \"*.csv\"))) \ndf_from_each_hourly_file = (pd.read_csv(f) for f in all_hourly_files)\ncmaq = pd.concat(df_from_each_hourly_file)\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation/observation.csv\")\nref_stations=pd.read_csv(f\"{cmaq_folder}/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(f\"{cmaq_folder}/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(f\"{cmaq_folder}/trainingNew.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/training.csv\")\n\n\n",
  "history_output" : "merge_training_data.py:15: FutureWarning: Passing 'suffixes' which cause duplicate columns {'Latitude_y', 'Longitude_y'} in the result is deprecated and will raise a MergeError in a future version.\n  final = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\nmerge_training_data.py:20: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\nmerge_training_data.py:21: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\nmerge_training_data.py:22: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\nmerge_training_data.py:23: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\nAll records should be incorporated into : /groups/ESS3/aalnaim/cmaq//training.csv\n",
  "history_begin_time" : 1661866041507,
  "history_end_time" : 1661866094302,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "EJkwYp2fvQi8",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\n# cmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\npath = f'{cmaq_folder}/training_input_hourly'\nall_hourly_files = sorted(glob.glob(os.path.join(path, \"*.csv\"))) \ndf_from_each_hourly_file = (pd.read_csv(f) for f in all_hourly_files)\ncmaq = pd.concat(df_from_each_hourly_file)\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation/observation.csv\")\nref_stations=pd.read_csv(f\"{cmaq_folder}/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(f\"{cmaq_folder}/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(f\"{cmaq_folder}/training.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/training.csv\")\n\n\n",
  "history_output" : "merge_training_data.py:15: FutureWarning: Passing 'suffixes' which cause duplicate columns {'Longitude_y', 'Latitude_y'} in the result is deprecated and will raise a MergeError in a future version.\n  final = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\nmerge_training_data.py:20: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\nmerge_training_data.py:21: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\nmerge_training_data.py:22: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\nmerge_training_data.py:23: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\nAll records should be incorporated into : /groups/ESS/zsun/cmaq//training.csv\n",
  "history_begin_time" : 1661734876411,
  "history_end_time" : 1661734950808,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "odWgRsvPJBUy",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\n# cmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\npath = f'{cmaq_folder}/training_input_hourly'\nall_hourly_files = sorted(glob.glob(os.path.join(path, \"*.csv\"))) \ndf_from_each_hourly_file = (pd.read_csv(f) for f in all_hourly_files)\ncmaq = pd.concat(df_from_each_hourly_file)\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation/observation.csv\")\nref_stations=pd.read_csv(f\"{cmaq_folder}/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(f\"{cmaq_folder}/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(f\"{cmaq_folder}/training.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/training.csv\")\n\n\n",
  "history_output" : null,
  "history_begin_time" : 1661706069937,
  "history_end_time" : null,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : null
},{
  "history_id" : "JRS4zkWtjEZf",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\n# cmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\npath = f'{cmaq_folder}/training_input_hourly'\nall_hourly_files = sorted(glob.glob(os.path.join(path, \"*.csv\"))) \ndf_from_each_hourly_file = (pd.read_csv(f) for f in all_hourly_files)\ncmaq = pd.concat(df_from_each_hourly_file)\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation/observation.csv\")\nref_stations=pd.read_csv(f\"{cmaq_folder}/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(f\"{cmaq_folder}/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\n\nfinal_df.rename(columns={\"Latitude_x\": \"Latitude\", \"Longitude_x\": \"Longitude\"}, inplace=True) \n\n\nfinal_df.to_csv(f\"{cmaq_folder}/training.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/training.csv\")\n\n\n",
  "history_output" : "merge_training_data.py:15: FutureWarning: Passing 'suffixes' which cause duplicate columns {'Latitude_y', 'Longitude_y'} in the result is deprecated and will raise a MergeError in a future version.\n  final = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\nmerge_training_data.py:20: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\nmerge_training_data.py:21: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\nmerge_training_data.py:22: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\nmerge_training_data.py:23: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\nmerge_training_data.py:28: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  final_df.rename(columns={\"Latitude_x\": \"Latitude\", \"Longitude_x\": \"Longitude\"}, inplace=True)\nAll records should be incorporated into : /groups/ESS3/aalnaim/cmaq//training.csv\n",
  "history_begin_time" : 1661386537896,
  "history_end_time" : 1661386871802,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "7fY3A1BP5XCi",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\n# cmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\npath = f'{cmaq_folder}/training_input_hourly'\nall_hourly_files = sorted(glob.glob(os.path.join(path, \"*.csv\"))) \ndf_from_each_hourly_file = (pd.read_csv(f) for f in all_hourly_files)\ncmaq = pd.concat(df_from_each_hourly_file)\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation/observation.csv\")\nref_stations=pd.read_csv(f\"{cmaq_folder}/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(f\"{cmaq_folder}/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\n\nfinal_df.rename(columns={\"Latitude_x\": \"Latitude\", \"Longitude_x\": \"Longitude\"}, inplace=True) \n\n\nfinal_df.to_csv(f\"{cmaq_folder}/training.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/training.csv\")\n\n\n",
  "history_output" : "merge_training_data.py:15: FutureWarning: Passing 'suffixes' which cause duplicate columns {'Longitude_y', 'Latitude_y'} in the result is deprecated and will raise a MergeError in a future version.\n  final = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\nmerge_training_data.py:20: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\nmerge_training_data.py:21: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\nmerge_training_data.py:22: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\nmerge_training_data.py:23: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\nmerge_training_data.py:28: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  final_df.rename(columns={\"Latitude_x\": \"Latitude\", \"Longitude_x\": \"Longitude\"}, inplace=True)\nAll records should be incorporated into : /groups/ESS/aalnaim/cmaq//training.csv\n",
  "history_begin_time" : 1661142450633,
  "history_end_time" : null,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Running"
},{
  "history_id" : "u16sOdU9oEpW",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\n# cmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\npath = f'{cmaq_folder}/training_input_hourly'\nall_hourly_files = sorted(glob.glob(os.path.join(path, \"*.csv\"))) \ndf_from_each_hourly_file = (pd.read_csv(f) for f in all_hourly_files)\ncmaq = pd.concat(df_from_each_hourly_file)\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation/observation.csv\")\nref_stations=pd.read_csv(f\"{cmaq_folder}/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(f\"{cmaq_folder}/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(f\"{cmaq_folder}/training.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/training.csv\")\n\n\n",
  "history_output" : "merge_training_data.py:15: FutureWarning: Passing 'suffixes' which cause duplicate columns {'Latitude_y', 'Longitude_y'} in the result is deprecated and will raise a MergeError in a future version.\n  final = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\nmerge_training_data.py:20: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\nmerge_training_data.py:21: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\nmerge_training_data.py:22: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\nmerge_training_data.py:23: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\nAll records should be incorporated into : /groups/ESS/aalnaim/cmaq//training.csv\n",
  "history_begin_time" : 1660805848046,
  "history_end_time" : null,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Running"
},{
  "history_id" : "pFQxUqbLMw4N",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\n# cmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\npath = f'{cmaq_folder}/training_input_hourly'\nall_hourly_files = sorted(glob.glob(os.path.join(path, \"*.csv\"))) \ndf_from_each_hourly_file = (pd.read_csv(f) for f in all_hourly_files)\ncmaq = pd.concat(df_from_each_hourly_file)\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation/observation.csv\")\nref_stations=pd.read_csv(f\"{cmaq_folder}/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(f\"{cmaq_folder}/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(f\"{cmaq_folder}/training.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/training.csv\")\n\n\n",
  "history_output" : "merge_training_data.py:15: FutureWarning: Passing 'suffixes' which cause duplicate columns {'Longitude_y', 'Latitude_y'} in the result is deprecated and will raise a MergeError in a future version.\n  final = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\nmerge_training_data.py:20: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\nmerge_training_data.py:21: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\nmerge_training_data.py:22: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\nmerge_training_data.py:23: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\nAll records should be incorporated into : /groups/ESS/aalnaim/cmaq//training.csv\n",
  "history_begin_time" : 1660787590967,
  "history_end_time" : null,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Running"
},{
  "history_id" : "owffklmsmvp",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\n# cmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\npath = f'{cmaq_folder}/training_input_hourly'\nall_hourly_files = sorted(glob.glob(os.path.join(path, \"*.csv\"))) \ndf_from_each_hourly_file = (pd.read_csv(f) for f in all_hourly_files)\ncmaq = pd.concat(df_from_each_hourly_file)\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation/observation.csv\")\nref_stations=pd.read_csv(f\"{cmaq_folder}/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(f\"{cmaq_folder}/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(f\"{cmaq_folder}/training.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/training.csv\")\n\n\n",
  "history_output" : "Traceback (most recent call last):\n  File \"merge_training_data.py\", line 8, in <module>\n    cmaq = pd.concat(df_from_each_hourly_file)\n  File \"/home/aalnaim/CMAQAI/lib/python3.8/site-packages/pandas/util/_decorators.py\", line 311, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/aalnaim/CMAQAI/lib/python3.8/site-packages/pandas/core/reshape/concat.py\", line 346, in concat\n    op = _Concatenator(\n  File \"/home/aalnaim/CMAQAI/lib/python3.8/site-packages/pandas/core/reshape/concat.py\", line 403, in __init__\n    raise ValueError(\"No objects to concatenate\")\nValueError: No objects to concatenate\n",
  "history_begin_time" : 1660786815797,
  "history_end_time" : 1660786902448,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "C9DRPrjHnvor",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\n# cmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\npath = f'{cmaq_folder}/training_input_hourly'\nall_hourly_files = sorted(glob.glob(os.path.join(path, \"*.csv\"))) \ndf_from_each_hourly_file = (pd.read_csv(f) for f in all_hourly_files)\ncmaq = pd.concat(df_from_each_hourly_file)\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation/observation.csv\")\nref_stations=pd.read_csv(f\"{cmaq_folder}/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(f\"{cmaq_folder}/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(f\"{cmaq_folder}/training.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/training.csv\")\n\n\n",
  "history_output" : "merge_training_data.py:15: FutureWarning: Passing 'suffixes' which cause duplicate columns {'Latitude_y', 'Longitude_y'} in the result is deprecated and will raise a MergeError in a future version.\n  final = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\nmerge_training_data.py:20: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\nmerge_training_data.py:21: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\nmerge_training_data.py:22: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\nmerge_training_data.py:23: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\nAll records should be incorporated into : /groups/ESS/aalnaim/cmaq//training.csv\n",
  "history_begin_time" : 1660784452481,
  "history_end_time" : null,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Running"
},{
  "history_id" : "1pjh7PuaAZGk",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\n# cmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\npath = f'{cmaq_folder}/training_input_hourly'\nall_hourly_files = sorted(glob.glob(os.path.join(path, \"*.csv\"))) \ndf_from_each_hourly_file = (pd.read_csv(f) for f in all_hourly_files)\ncmaq = pd.concat(df_from_each_hourly_file)\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation/observation.csv\")\nref_stations=pd.read_csv(f\"{cmaq_folder}/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(f\"{cmaq_folder}/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(f\"{cmaq_folder}/training.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/training.csv\")\n\n\n",
  "history_output" : "merge_training_data.py:15: FutureWarning: Passing 'suffixes' which cause duplicate columns {'Longitude_y', 'Latitude_y'} in the result is deprecated and will raise a MergeError in a future version.\n  final = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\nmerge_training_data.py:20: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\nmerge_training_data.py:21: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\nmerge_training_data.py:22: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\nmerge_training_data.py:23: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\nAll records should be incorporated into : /groups/ESS/aalnaim/cmaq//training.csv\n",
  "history_begin_time" : 1660782959265,
  "history_end_time" : null,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Running"
},{
  "history_id" : "tuc8us2b2n5",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\n# cmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\npath = f'{cmaq_folder}/training_input_hourly'\nall_hourly_files = sorted(glob.glob(os.path.join(path, \"*.csv\"))) \ndf_from_each_hourly_file = (pd.read_csv(f) for f in all_hourly_files)\ncmaq = pd.concat(df_from_each_hourly_file)\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation/observation.csv\")\nref_stations=pd.read_csv(f\"{cmaq_folder}/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(f\"{cmaq_folder}/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(f\"{cmaq_folder}/training.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/training.csv\")\n\n\n",
  "history_output" : "merge_training_data.py:15: FutureWarning: Passing 'suffixes' which cause duplicate columns {'Longitude_y', 'Latitude_y'} in the result is deprecated and will raise a MergeError in a future version.\n  final = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\nmerge_training_data.py:20: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\nmerge_training_data.py:21: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\nmerge_training_data.py:22: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\nmerge_training_data.py:23: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\nAll records should be incorporated into : /groups/ESS/aalnaim/cmaq//training.csv\n",
  "history_begin_time" : 1660777500674,
  "history_end_time" : 1660778171060,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "MPrBB8HRTixg",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\n# cmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\npath = f'{cmaq_folder}/training_input_hourly'\nall_hourly_files = sorted(glob.glob(os.path.join(path, \"*.csv\"))) \ndf_from_each_hourly_file = (pd.read_csv(f) for f in all_hourly_files)\ncmaq = pd.concat(df_from_each_hourly_file)\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation/observation.csv\")\nref_stations=pd.read_csv(f\"{cmaq_folder}/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(f\"{cmaq_folder}/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(f\"{cmaq_folder}/training.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/training.csv\")\n\n\n",
  "history_output" : "merge_training_data.py:15: FutureWarning: Passing 'suffixes' which cause duplicate columns {'Latitude_y', 'Longitude_y'} in the result is deprecated and will raise a MergeError in a future version.\n  final = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\nmerge_training_data.py:20: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\nmerge_training_data.py:21: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\nmerge_training_data.py:22: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\nmerge_training_data.py:23: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\nAll records should be incorporated into : /groups/ESS/aalnaim/cmaq//training.csv\n",
  "history_begin_time" : 1660772969885,
  "history_end_time" : null,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Running"
},{
  "history_id" : "se4qVSF9ey4m",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\n# cmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\npath = f'{cmaq_folder}/training_input_hourly'\nall_hourly_files = sorted(glob.glob(os.path.join(path, \"*.csv\"))) \ndf_from_each_hourly_file = (pd.read_csv(f) for f in all_hourly_files)\ncmaq = pd.concat(df_from_each_hourly_file)\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation/observation.csv\")\nref_stations=pd.read_csv(f\"{cmaq_folder}/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(f\"{cmaq_folder}/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(f\"{cmaq_folder}/training.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/training.csv\")\n\n\n",
  "history_output" : "Running",
  "history_begin_time" : 1660771724571,
  "history_end_time" : 1660772899523,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "CLsPgvZtC9TS",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\n# cmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\npath = f'{cmaq_folder}/training_input_hourly'\nall_hourly_files = sorted(glob.glob(os.path.join(path, \"*.csv\"))) \ndf_from_each_hourly_file = (pd.read_csv(f) for f in all_hourly_files)\ncmaq = pd.concat(df_from_each_hourly_file)\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation/observation.csv\")\nref_stations=pd.read_csv(f\"{cmaq_folder}/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(f\"{cmaq_folder}/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(f\"{cmaq_folder}/training.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/training.csv\")\n\n\n",
  "history_output" : "merge_training_data.py:15: FutureWarning: Passing 'suffixes' which cause duplicate columns {'Latitude_y', 'Longitude_y'} in the result is deprecated and will raise a MergeError in a future version.\n  final = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\nmerge_training_data.py:20: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\nmerge_training_data.py:21: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\nmerge_training_data.py:22: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\nmerge_training_data.py:23: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\nAll records should be incorporated into : /groups/ESS/zsun/cmaq//training.csv\n",
  "history_begin_time" : 1660749976803,
  "history_end_time" : null,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Running"
},{
  "history_id" : "VKqb2G8jlgmD",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\n# cmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\npath = f'{cmaq_folder}/training_input_hourly'\nall_hourly_files = sorted(glob.glob(os.path.join(path, \"*.csv\"))) \ndf_from_each_hourly_file = (pd.read_csv(f) for f in all_hourly_files)\ncmaq = pd.concat(df_from_each_hourly_file)\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation/observation.csv\")\nref_stations=pd.read_csv(f\"{cmaq_folder}/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(f\"{cmaq_folder}/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\n\n# final = final[(final['CMAQ12KM_O3(ppb)'] <= (final['CMAQ12KM_O3(ppb)'].mean() * 1.15)) & (final['AirNOW_O3'] <= (final['AirNOW_O3'].mean() * 1.15))]\n\nfinal_df.to_csv(f\"{cmaq_folder}/training.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/training.csv\")\n\n\n",
  "history_output" : "merge_training_data.py:15: FutureWarning: Passing 'suffixes' which cause duplicate columns {'Latitude_y', 'Longitude_y'} in the result is deprecated and will raise a MergeError in a future version.\n  final = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\nmerge_training_data.py:20: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\nmerge_training_data.py:21: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\nmerge_training_data.py:22: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\nmerge_training_data.py:23: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\nAll records should be incorporated into : /groups/ESS/aalnaim/cmaq//training.csv\n",
  "history_begin_time" : 1660704585195,
  "history_end_time" : 1660772897507,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "YQ6wyrzpPu0S",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\n# cmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\npath = f'{cmaq_folder}/training_input_hourly'\nall_hourly_files = sorted(glob.glob(os.path.join(path, \"*.csv\"))) \ndf_from_each_hourly_file = (pd.read_csv(f) for f in all_hourly_files)\ncmaq = pd.concat(df_from_each_hourly_file)\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation/observation.csv\")\nref_stations=pd.read_csv(f\"{cmaq_folder}/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(f\"{cmaq_folder}/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\n\n# final = final[(final['CMAQ12KM_O3(ppb)'] <= (final['CMAQ12KM_O3(ppb)'].mean() * 1.15)) & (final['AirNOW_O3'] <= (final['AirNOW_O3'].mean() * 1.15))]\n\nfinal_df.to_csv(f\"{cmaq_folder}/training.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/training.csv\")\n\n\n",
  "history_output" : "merge_training_data.py:15: FutureWarning: Passing 'suffixes' which cause duplicate columns {'Longitude_y', 'Latitude_y'} in the result is deprecated and will raise a MergeError in a future version.\n  final = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\nmerge_training_data.py:20: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\nmerge_training_data.py:21: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\nmerge_training_data.py:22: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\nmerge_training_data.py:23: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\nAll records should be incorporated into : /groups/ESS/aalnaim/cmaq//training.csv\n",
  "history_begin_time" : 1660678892060,
  "history_end_time" : 1660772897091,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "VSRerrcmU41G",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\n# cmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\npath = f'{cmaq_folder}/training_input_hourly'\nall_hourly_files = sorted(glob.glob(os.path.join(path, \"*.csv\"))) \ndf_from_each_hourly_file = (pd.read_csv(f) for f in all_hourly_files)\ncmaq = pd.concat(df_from_each_hourly_file)\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation/observation.csv\")\nref_stations=pd.read_csv(f\"{cmaq_folder}/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(f\"{cmaq_folder}/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\n\nfinal = final[(final['CMAQ12KM_O3(ppb)'] <= (final['CMAQ12KM_O3(ppb)'].mean() * 1.15)) & (final['AirNOW_O3'] <= (final['AirNOW_O3'].mean() * 1.15))]\n\nfinal_df.to_csv(f\"{cmaq_folder}/training.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/training.csv\")\n\n\n",
  "history_output" : "merge_training_data.py:15: FutureWarning: Passing 'suffixes' which cause duplicate columns {'Latitude_y', 'Longitude_y'} in the result is deprecated and will raise a MergeError in a future version.\n  final = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\nmerge_training_data.py:20: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\nmerge_training_data.py:21: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\nmerge_training_data.py:22: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\nmerge_training_data.py:23: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\nAll records should be incorporated into : /groups/ESS/aalnaim/cmaq//training.csv\n",
  "history_begin_time" : 1660674210829,
  "history_end_time" : 1660772896674,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "uTwlUqd0UEex",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\n# cmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\npath = f'{cmaq_folder}/training_input_hourly'\nall_hourly_files = sorted(glob.glob(os.path.join(path, \"*.csv\"))) \ndf_from_each_hourly_file = (pd.read_csv(f) for f in all_hourly_files)\ncmaq = pd.concat(df_from_each_hourly_file)\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation/observation.csv\")\nref_stations=pd.read_csv(f\"{cmaq_folder}/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(f\"{cmaq_folder}/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(f\"{cmaq_folder}/training.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/training.csv\")\n\n\n",
  "history_output" : "merge_training_data.py:15: FutureWarning: Passing 'suffixes' which cause duplicate columns {'Latitude_y', 'Longitude_y'} in the result is deprecated and will raise a MergeError in a future version.\n  final = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\nmerge_training_data.py:20: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\nmerge_training_data.py:21: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\nmerge_training_data.py:22: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\nmerge_training_data.py:23: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\nAll records should be incorporated into : /groups/ESS/zsun/cmaq//training.csv\n",
  "history_begin_time" : 1660522402298,
  "history_end_time" : 1660750037203,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "kQV0fMj9UsuP",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\n# cmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\npath = f'{cmaq_folder}/training_input_hourly'\nall_hourly_files = sorted(glob.glob(os.path.join(path, \"*.csv\"))) \ndf_from_each_hourly_file = (pd.read_csv(f) for f in all_hourly_files)\ncmaq = pd.concat(df_from_each_hourly_file)\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation/observation.csv\")\nref_stations=pd.read_csv(f\"{cmaq_folder}/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(f\"{cmaq_folder}/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\n\nfinal = final[(final['CMAQ12KM_O3(ppb)'] <= (final['CMAQ12KM_O3(ppb)'].mean() * 1.15)) & (final['AirNOW_O3'] <= (final['AirNOW_O3'].mean() * 1.15))]\n\nfinal_df.to_csv(f\"{cmaq_folder}/training.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/training.csv\")\n\n\n",
  "history_output" : "merge_training_data.py:15: FutureWarning: Passing 'suffixes' which cause duplicate columns {'Longitude_y', 'Latitude_y'} in the result is deprecated and will raise a MergeError in a future version.\n  final = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\nmerge_training_data.py:20: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\nmerge_training_data.py:21: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\nmerge_training_data.py:22: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\nmerge_training_data.py:23: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\nAll records should be incorporated into : /groups/ESS/aalnaim/cmaq//training.csv\n",
  "history_begin_time" : 1660454836618,
  "history_end_time" : 1660772896170,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "w9zJa6cgNd6n",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\n# cmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\npath = f'{cmaq_folder}/training_input_hourly'\nall_hourly_files = sorted(glob.glob(os.path.join(path, \"*.csv\"))) \ndf_from_each_hourly_file = (pd.read_csv(f) for f in all_hourly_files)\ncmaq = pd.concat(df_from_each_hourly_file)\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation/observation.csv\")\nref_stations=pd.read_csv(f\"{cmaq_folder}/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(f\"{cmaq_folder}/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(f\"{cmaq_folder}/training.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/training.csv\")\n\n\n",
  "history_output" : "merge_training_data.py:15: FutureWarning: Passing 'suffixes' which cause duplicate columns {'Longitude_y', 'Latitude_y'} in the result is deprecated and will raise a MergeError in a future version.\n  final = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\nmerge_training_data.py:20: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\nmerge_training_data.py:21: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\nmerge_training_data.py:22: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\nmerge_training_data.py:23: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\nAll records should be incorporated into : /groups/ESS/aalnaim/cmaq//training.csv\n",
  "history_begin_time" : 1660370074766,
  "history_end_time" : 1660455344493,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "n3ZIIYF68XxR",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\n# cmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\npath = f'{cmaq_folder}/training_input_hourly'\nall_hourly_files = sorted(glob.glob(os.path.join(path, \"*.csv\"))) \ndf_from_each_hourly_file = (pd.read_csv(f) for f in all_hourly_files)\ncmaq = pd.concat(df_from_each_hourly_file)\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation/observation.csv\")\nref_stations=pd.read_csv(f\"{cmaq_folder}/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(f\"{cmaq_folder}/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(f\"{cmaq_folder}/training.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/training.csv\")\n\n\n",
  "history_output" : "merge_training_data.py:15: FutureWarning: Passing 'suffixes' which cause duplicate columns {'Latitude_y', 'Longitude_y'} in the result is deprecated and will raise a MergeError in a future version.\n  final = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\nmerge_training_data.py:20: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\nmerge_training_data.py:21: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\nmerge_training_data.py:22: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\nmerge_training_data.py:23: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\nAll records should be incorporated into : /groups/ESS/zsun/cmaq//training.csv\n",
  "history_begin_time" : 1660311135191,
  "history_end_time" : 1660513818630,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "9aUmXgqqblB6",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\n# cmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\npath = f'{cmaq_folder}/training_input_hourly'\nall_hourly_files = sorted(glob.glob(os.path.join(path, \"*.csv\"))) \ndf_from_each_hourly_file = (pd.read_csv(f) for f in all_hourly_files)\ncmaq = pd.concat(df_from_each_hourly_file)\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation/observation.csv\")\nref_stations=pd.read_csv(f\"{cmaq_folder}/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(f\"{cmaq_folder}/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(f\"{cmaq_folder}/training.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/training.csv\")\n\n\n",
  "history_output" : "merge_training_data.py:15: FutureWarning: Passing 'suffixes' which cause duplicate columns {'Latitude_y', 'Longitude_y'} in the result is deprecated and will raise a MergeError in a future version.\n  final = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\nmerge_training_data.py:20: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\nmerge_training_data.py:21: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\nmerge_training_data.py:22: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\nmerge_training_data.py:23: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\nAll records should be incorporated into : /groups/ESS/aalnaim/cmaq/training.csv\n",
  "history_begin_time" : 1660301987033,
  "history_end_time" : 1660455342967,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "n2dN4Q6lSbiH",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\n# cmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\npath = f'{cmaq_folder}/training_input_hourly'\nall_hourly_files = sorted(glob.glob(os.path.join(path, \"*.csv\"))) \ndf_from_each_hourly_file = (pd.read_csv(f) for f in all_hourly_files)\ncmaq = pd.concat(df_from_each_hourly_file)\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation/observation.csv\")\nref_stations=pd.read_csv(f\"{cmaq_folder}/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(f\"{cmaq_folder}/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(f\"{cmaq_folder}/training.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/training.csv\")\n\n\n",
  "history_output" : "Running",
  "history_begin_time" : 1660301794120,
  "history_end_time" : 1660301931759,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "47ykuyd2h3p",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\n# cmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\npath = f'{cmaq_folder}/training_input_hourly'\nall_hourly_files = sorted(glob.glob(os.path.join(path, \"*.csv\"))) \ndf_from_each_hourly_file = (pd.read_csv(f) for f in all_hourly_files)\ncmaq = pd.concat(df_from_each_hourly_file)\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation/observation.csv\")\nref_stations=pd.read_csv(f\"{cmaq_folder}/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(f\"{cmaq_folder}/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(f\"{cmaq_folder}/training.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/training.csv\")\n\n\n",
  "history_output" : "Traceback (most recent call last):\n  File \"merge_training_data.py\", line 11, in <module>\n    ref_stations=pd.read_csv(f\"{cmaq_folder}/station_cmaq_location.csv\")\n  File \"/home/aalnaim/CMAQAI/lib/python3.8/site-packages/pandas/util/_decorators.py\", line 311, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/aalnaim/CMAQAI/lib/python3.8/site-packages/pandas/io/parsers/readers.py\", line 680, in read_csv\n    return _read(filepath_or_buffer, kwds)\n  File \"/home/aalnaim/CMAQAI/lib/python3.8/site-packages/pandas/io/parsers/readers.py\", line 575, in _read\n    parser = TextFileReader(filepath_or_buffer, **kwds)\n  File \"/home/aalnaim/CMAQAI/lib/python3.8/site-packages/pandas/io/parsers/readers.py\", line 933, in __init__\n    self._engine = self._make_engine(f, self.engine)\n  File \"/home/aalnaim/CMAQAI/lib/python3.8/site-packages/pandas/io/parsers/readers.py\", line 1217, in _make_engine\n    self.handles = get_handle(  # type: ignore[call-overload]\n  File \"/home/aalnaim/CMAQAI/lib/python3.8/site-packages/pandas/io/common.py\", line 789, in get_handle\n    handle = open(\nFileNotFoundError: [Errno 2] No such file or directory: '/groups/ESS/aalnaim/cmaq/station_cmaq_location.csv'\n",
  "history_begin_time" : 1660299722614,
  "history_end_time" : 1660301768665,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "vpNxNpzwqNAu",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\n# cmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\npath = f'{cmaq_folder}/training_input_hourly'\nall_hourly_files = sorted(glob.glob(os.path.join(path, \"*.csv\"))) \ndf_from_each_hourly_file = (pd.read_csv(f) for f in all_hourly_files)\ncmaq = pd.concat(df_from_each_hourly_file)\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation/observation.csv\")\nref_stations=pd.read_csv(f\"{cmaq_folder}/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(f\"{cmaq_folder}/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(f\"{cmaq_folder}/training.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/training.csv\")\n\n\n",
  "history_output" : "merge_training_data.py:15: FutureWarning: Passing 'suffixes' which cause duplicate columns {'Latitude_y', 'Longitude_y'} in the result is deprecated and will raise a MergeError in a future version.\n  final = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\nmerge_training_data.py:20: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\nmerge_training_data.py:21: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\nmerge_training_data.py:22: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\nmerge_training_data.py:23: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\nAll records should be incorporated into : /groups/ESS/zsun/cmaq//training.csv\n",
  "history_begin_time" : 1660273356281,
  "history_end_time" : 1660513817718,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "aHf0i6CH52qS",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\n# cmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\npath = f'{cmaq_folder}/training_input_hourly'\nall_hourly_files = sorted(glob.glob(os.path.join(path, \"*.csv\"))) \ndf_from_each_hourly_file = (pd.read_csv(f) for f in all_hourly_files)\ncmaq = pd.concat(df_from_each_hourly_file)\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation/observation.csv\")\nref_stations=pd.read_csv(f\"{cmaq_folder}/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(f\"{cmaq_folder}/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(f\"{cmaq_folder}/training.csv\",index=False)\nprint(\"All records should be incorporated into :\", f\"{cmaq_folder}/training.csv\")\n\n\n",
  "history_output" : "merge_training_data.py:15: FutureWarning: Passing 'suffixes' which cause duplicate columns {'Latitude_y', 'Longitude_y'} in the result is deprecated and will raise a MergeError in a future version.\n  final = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\nmerge_training_data.py:20: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\nmerge_training_data.py:21: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\nmerge_training_data.py:22: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\nmerge_training_data.py:23: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\nAll records should be incorporated into : /groups/ESS/zsun/cmaq//training.csv\n",
  "history_begin_time" : 1660273246958,
  "history_end_time" : 1660273339030,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "xLrm6FvMHrQl",
  "history_input" : "# combine cmaq and airnow into training.csv\nfrom cmaq_ai_utils import *\n\n# cmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\npath = f'{cmaq_folder}/training_input_hourly'\nall_hourly_files = sorted(glob.glob(os.path.join(path, \"*.csv\"))) \ndf_from_each_hourly_file = (pd.read_csv(f) for f in all_hourly_files)\ncmaq = pd.concat(df_from_each_hourly_file)\n\nobs=pd.read_csv(f\"{cmaq_folder}/observation/observation.csv\")\nref_stations=pd.read_csv(f\"{cmaq_folder}/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(f\"{cmaq_folder}/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(f\"{cmaq_folder}/training.csv\",index=False)\n\n\n",
  "history_output" : "merge_training_data.py:15: FutureWarning: Passing 'suffixes' which cause duplicate columns {'Longitude_y', 'Latitude_y'} in the result is deprecated and will raise a MergeError in a future version.\n  final = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\nmerge_training_data.py:20: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\nmerge_training_data.py:21: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\nmerge_training_data.py:22: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\nmerge_training_data.py:23: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n",
  "history_begin_time" : 1660273117706,
  "history_end_time" : 1660273338546,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "mnaz0if32m9",
  "history_input" : "# combine cmaq and airnow into training.csv\n\nimport pandas as pd\nfrom pathlib import Path\nimport glob, os\n\n# home directory\n\n# cmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\npath = '/groups/ESS/aalnaim/cmaq/training_input_hourly'\nall_hourly_files = sorted(glob.glob(os.path.join(path, \"*.csv\"))) \ndf_from_each_hourly_file = (pd.read_csv(f) for f in all_hourly_files)\ncmaq = pd.concat(df_from_each_hourly_file)\n\nobs=pd.read_csv(\"/groups/ESS/aalnaim/cmaq/observation/observation.csv\")\nref_stations=pd.read_csv(\"/groups/ESS/mislam25/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(\"/groups/ESS/aalnaim/cmaq/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(\"/groups/ESS/aalnaim/cmaq/training.csv\",index=False)\n\n\n",
  "history_output" : "Running",
  "history_begin_time" : 1660176490113,
  "history_end_time" : 1660189689429,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "xb9ej24udfl",
  "history_input" : "# combine cmaq and airnow into training.csv\n\nimport pandas as pd\nfrom pathlib import Path\nimport glob, os\n\n# home directory\n\n# cmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\npath = '/groups/ESS/aalnaim/cmaq/training_input_hourly'\nall_hourly_files = sorted(glob.glob(os.path.join(path, \"*.csv\"))) \ndf_from_each_hourly_file = (pd.read_csv(f) for f in all_hourly_files)\ncmaq = pd.concat(df_from_each_hourly_file)\n\nobs=pd.read_csv(\"/groups/ESS/aalnaim/cmaq/observation/observation.csv\")\nref_stations=pd.read_csv(\"/groups/ESS/mislam25/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(\"/groups/ESS/aalnaim/cmaq/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(\"/groups/ESS/aalnaim/cmaq/training.csv\",index=False)\n\n\n",
  "history_output" : "Traceback (most recent call last):\n  File \"merge_training_data.py\", line 13, in <module>\n    cmaq = pd.concat(df_from_each_hourly_file)\n  File \"/home/aalnaim/CMAQAI/lib/python3.8/site-packages/pandas/util/_decorators.py\", line 311, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/aalnaim/CMAQAI/lib/python3.8/site-packages/pandas/core/reshape/concat.py\", line 346, in concat\n    op = _Concatenator(\n  File \"/home/aalnaim/CMAQAI/lib/python3.8/site-packages/pandas/core/reshape/concat.py\", line 403, in __init__\n    raise ValueError(\"No objects to concatenate\")\nValueError: No objects to concatenate\n",
  "history_begin_time" : 1660166239049,
  "history_end_time" : 1660166318918,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "80yywkruqo3",
  "history_input" : "# combine cmaq and airnow into training.csv\n\nimport pandas as pd\nfrom pathlib import Path\nimport glob, os\n\n# home directory\n\n# cmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\npath = '/groups/ESS/aalnaim/cmaq/training_input_hourly'\nall_hourly_files = sorted(glob.glob(os.path.join(path, \"*.csv\"))) \ndf_from_each_hourly_file = (pd.read_csv(f) for f in all_hourly_files)\ncmaq = pd.concat(df_from_each_hourly_file)\n\nobs=pd.read_csv(\"/groups/ESS/aalnaim/cmaq/observation/observation.csv\")\nref_stations=pd.read_csv(\"/groups/ESS/mislam25/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(\"/groups/ESS/aalnaim/cmaq/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(\"/groups/ESS/aalnaim/cmaq/training.csv\",index=False)\n\n\n",
  "history_output" : "merge_training_data.py:20: FutureWarning: Passing 'suffixes' which cause duplicate columns {'Latitude_y', 'Longitude_y'} in the result is deprecated and will raise a MergeError in a future version.\n  final = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\nmerge_training_data.py:25: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\nmerge_training_data.py:26: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\nmerge_training_data.py:27: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\nmerge_training_data.py:28: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n",
  "history_begin_time" : 1660008015542,
  "history_end_time" : 1660008066678,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "p6wvf2",
  "indicator" : "Done"
},{
  "history_id" : "XqCfVS5DPVyO",
  "history_input" : "# combine cmaq and airnow into training.csv\n\nimport pandas as pd\nfrom pathlib import Path\nimport glob, os\n\n# home directory\n\n# cmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\npath = '/groups/ESS/aalnaim/cmaq/training_input_hourly'\nall_hourly_files = sorted(glob.glob(os.path.join(path, \"*.csv\"))) \ndf_from_each_hourly_file = (pd.read_csv(f) for f in all_hourly_files)\ncmaq = pd.concat(df_from_each_hourly_file)\n\nobs=pd.read_csv(\"/groups/ESS/aalnaim/cmaq/observation/observation.csv\")\nref_stations=pd.read_csv(\"/groups/ESS/mislam25/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(\"/groups/ESS/aalnaim/cmaq/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(\"/groups/ESS/aalnaim/cmaq/training.csv\",index=False)\n\n\n",
  "history_output" : "merge_training_data.py:20: FutureWarning: Passing 'suffixes' which cause duplicate columns {'Latitude_y', 'Longitude_y'} in the result is deprecated and will raise a MergeError in a future version.\n  final = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\nmerge_training_data.py:25: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\nmerge_training_data.py:26: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\nmerge_training_data.py:27: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\nmerge_training_data.py:28: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n",
  "history_begin_time" : 1659740666203,
  "history_end_time" : 1660273337648,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "locemvcg34p",
  "history_input" : "import pandas as pd\nfrom pathlib import Path\nimport glob, os\n\n# home directory\n\n# cmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\npath = '/groups/ESS/aalnaim/cmaq/training_input_hourly'\nall_hourly_files = sorted(glob.glob(os.path.join(path, \"*.csv\"))) \ndf_from_each_hourly_file = (pd.read_csv(f) for f in all_hourly_files)\ncmaq = pd.concat(df_from_each_hourly_file)\n\nobs=pd.read_csv(\"/groups/ESS/aalnaim/cmaq/observation/observation.csv\")\nref_stations=pd.read_csv(\"/groups/ESS/mislam25/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(\"/groups/ESS/aalnaim/cmaq/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(\"/groups/ESS/aalnaim/cmaq/training.csv\",index=False)",
  "history_output" : "merge_training_data.py:18: FutureWarning: Passing 'suffixes' which cause duplicate columns {'Longitude_y', 'Latitude_y'} in the result is deprecated and will raise a MergeError in a future version.\n  final = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\nmerge_training_data.py:23: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\nmerge_training_data.py:24: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\nmerge_training_data.py:25: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\nmerge_training_data.py:26: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n",
  "history_begin_time" : 1659578466880,
  "history_end_time" : 1659578695073,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "p6wvf2",
  "indicator" : "Done"
},{
  "history_id" : "O5mMaT2s4xVw",
  "history_input" : "import pandas as pd\nfrom pathlib import Path\nimport glob, os\n\n# home directory\n\n# cmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\npath = '/groups/ESS/aalnaim/cmaq/training_input_hourly'\nall_hourly_files = sorted(glob.glob(os.path.join(path, \"*.csv\"))) \ndf_from_each_hourly_file = (pd.read_csv(f) for f in all_hourly_files)\ncmaq = pd.concat(df_from_each_hourly_file)\n\nobs=pd.read_csv(\"/groups/ESS/aalnaim/cmaq/observation/observation.csv\")\nref_stations=pd.read_csv(\"/groups/ESS/mislam25/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(\"/groups/ESS/aalnaim/cmaq/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n#final.to_csv(home+\"/cmaq/subset.csv\",index=False)\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n# dropping unnecessary variables\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(\"/groups/ESS/aalnaim/cmaq/training.csv\",index=False)",
  "history_output" : "merge_training_data.py:18: FutureWarning: Passing 'suffixes' which cause duplicate columns {'Latitude_y', 'Longitude_y'} in the result is deprecated and will raise a MergeError in a future version.\n  final = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\nmerge_training_data.py:23: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\nmerge_training_data.py:24: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\nmerge_training_data.py:25: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\nmerge_training_data.py:26: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n",
  "history_begin_time" : 1659447970829,
  "history_end_time" : 1660273336671,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "JLVQ22AfFUmq",
  "history_input" : "import pandas as pd\nfrom pathlib import Path\nimport glob\n\n# home directory\n\n# cmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\npath = '/groups/ESS/aalnaim/cmaq/training_input_hourly'\nall_hourly_files = sorted(glob.glob(os.path.join(path, \"*.csv\"))) \ndf_from_each_hourly_file = (pd.read_csv(f) for f in all_hourly_files)\ncmaq = pd.concat(df_from_each_hourly_file)\n\nobs=pd.read_csv(\"/groups/ESS/aalnaim/cmaq/observation/observation.csv\")\nref_stations=pd.read_csv(\"/groups/ESS/mislam25/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(\"/groups/ESS/aalnaim/cmaq/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n#final.to_csv(home+\"/cmaq/subset.csv\",index=False)\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n# dropping unnecessary variables\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(\"/groups/ESS/aalnaim/cmaq/training.csv\",index=False)",
  "history_output" : "Traceback (most recent call last):\n  File \"merge_training_data.py\", line 9, in <module>\n    all_hourly_files = sorted(glob.glob(os.path.join(path, \"*.csv\"))) \nNameError: name 'os' is not defined\n",
  "history_begin_time" : 1659447941160,
  "history_end_time" : 1660273336182,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "an1vFRu01MuN",
  "history_input" : "import pandas as pd\nfrom pathlib import Path\nimport glob\nimport os\n\n# home directory\nhome = str(Path.home())\n\npath = '/groups/ESS/aalnaim/cmaq/training_input_hourly'\nall_hourly_files = sorted(glob.glob(os.path.join(path, \"*202207*.csv\"))) \ncmaq_df_from_each_hourly_file = (pd.read_csv(f, dtype=str) for f in all_hourly_files)\n\npath = '/groups/ESS/aalnaim/cmaq/observation'\nall_hourly_files = sorted(glob.glob(os.path.join(path, \"*202207*.txt\")))\nobs_df_from_each_hourly_file = []\nfor f in all_hourly_files:\n    df = pd.read_csv(f, delim_whitespace=True)\n    df['YYYYMMDDHH'] = f[-14:-4] # get date from file name\n    obs_df_from_each_hourly_file.append(df)\n\nref_stations=pd.read_csv(\"/groups/ESS/mislam25/station_cmaq_location.csv\", dtype=str)\n# print(\"ref_stations: \\n\",ref_stations.dtypes)\ntotalNulls = 0\nfor cmaq, obs in zip(cmaq_df_from_each_hourly_file, obs_df_from_each_hourly_file):\n    # print(\"CMAQ: \\n\",cmaq.dtypes)\n    # print(\"OBS: \\n\", obs.dtypes)\n    new_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\n    # print(\"nwe_df: \\n\", new_df.dtypes)\n    final = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n\n    final=final.drop_duplicates(keep=False)\n    training_data = final.loc[:,~final.columns.duplicated()]\n    training_data = training_data.rename(columns={\"OZONE(ppb)\": \"AirNOW_O3\"})\n    # print(\"Final columns: \", training_data.columns)\n\n    new_df=training_data.drop(['AQSID', 'Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\n    final_df = new_df[new_df.AirNOW_O3!= -999]\nprint(final_df)\n    # final_df.to_csv(\"/groups/ESS/aalnaim/cmaq/training.csv\",index=False)",
  "history_output" : "  File \"merge_training_data.py\", line 23\n    \",ref_stations.dtypes)\n                         ^\nSyntaxError: EOL while scanning string literal\n",
  "history_begin_time" : 1659447116167,
  "history_end_time" : 1659447183932,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "8c4jmdj1ozp",
  "history_input" : "import pandas as pd\nfrom pathlib import Path\n\n# home directory\nhome = str(Path.home())\ncmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\nobs=pd.read_csv(home+\"/cmaq/observation.csv\")\nref_stations=pd.read_csv(\"/groups/ESS/mislam25/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(home+\"/cmaq/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n#final.to_csv(home+\"/cmaq/subset.csv\",index=False)\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n# dropping unnecessary variables\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(home+\"/cmaq/training.csv\",index=False)",
  "history_output" : "training_data.py:12: FutureWarning: Passing 'suffixes' which cause duplicate columns {'Latitude_y', 'Longitude_y'} in the result is deprecated and will raise a MergeError in a future version.\n  final = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\ntraining_data.py:17: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data.py:18: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data.py:19: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data.py:20: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n",
  "history_begin_time" : 1655072841907,
  "history_end_time" : 1655072871928,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "p6wvf2",
  "indicator" : "Done"
},{
  "history_id" : "q6xfho4ovog",
  "history_input" : "import pandas as pd\nfrom pathlib import Path\n\n# home directory\nhome = str(Path.home())\ncmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\nobs=pd.read_csv(home+\"/cmaq/observation.csv\")\nref_stations=pd.read_csv(\"/groups/ESS/mislam25/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(home+\"/cmaq/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n#final.to_csv(home+\"/cmaq/subset.csv\",index=False)\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n# dropping unnecessary variables\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(home+\"/cmaq/training.csv\",index=False)",
  "history_output" : "Traceback (most recent call last):\n  File \"/Users/joe/gw-workspace/q6xfho4ovog/training_data.py\", line 6, in <module>\n    cmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/util/_decorators.py\", line 311, in wrapper\n    return func(*args, **kwargs)\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/readers.py\", line 586, in read_csv\n    return _read(filepath_or_buffer, kwds)\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/readers.py\", line 482, in _read\n    parser = TextFileReader(filepath_or_buffer, **kwds)\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/readers.py\", line 811, in __init__\n    self._engine = self._make_engine(self.engine)\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/readers.py\", line 1040, in _make_engine\n    return mapping[engine](self.f, **self.options)  # type: ignore[call-arg]\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/c_parser_wrapper.py\", line 51, in __init__\n    self._open_handles(src, kwds)\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/base_parser.py\", line 222, in _open_handles\n    self.handles = get_handle(\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/io/common.py\", line 702, in get_handle\n    handle = open(\nFileNotFoundError: [Errno 2] No such file or directory: '/Users/joe/cmaq/training_data.csv'\n",
  "history_begin_time" : 1654726158330,
  "history_end_time" : 1654726159022,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "sjun93cyvi6",
  "history_input" : "import pandas as pd\nfrom pathlib import Path\n\n# home directory\nhome = str(Path.home())\ncmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\nobs=pd.read_csv(home+\"/cmaq/observation.csv\")\nref_stations=pd.read_csv(\"/groups/ESS/mislam25/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(home+\"/cmaq/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n#final.to_csv(home+\"/cmaq/subset.csv\",index=False)\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n# dropping unnecessary variables\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(home+\"/cmaq/training.csv\",index=False)",
  "history_output" : "training_data.py:17: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data.py:18: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data.py:19: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data.py:20: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n",
  "history_begin_time" : 1654618476619,
  "history_end_time" : 1654618513243,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "aqt8fv",
  "indicator" : "Done"
},{
  "history_id" : "zdceibzqpdf",
  "history_input" : "import pandas as pd\nfrom pathlib import Path\n\n# home directory\nhome = str(Path.home())\ncmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\nobs=pd.read_csv(home+\"/cmaq/observation.csv\")\nref_stations=pd.read_csv(\"/groups/ESS/mislam25/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(home+\"/cmaq/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n#final.to_csv(home+\"/cmaq/subset.csv\",index=False)\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n# dropping unnecessary variables\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(home+\"/cmaq/training.csv\",index=False)",
  "history_output" : "training_data.py:17: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data.py:18: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data.py:19: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data.py:20: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n",
  "history_begin_time" : 1654616662541,
  "history_end_time" : 1654616693872,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "aqt8fv",
  "indicator" : "Done"
},{
  "history_id" : "zlj5hsns8b2",
  "history_input" : "import pandas as pd\nfrom pathlib import Path\n\n# home directory\nhome = str(Path.home())\ncmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\nobs=pd.read_csv(home+\"/cmaq/observation.csv\")\nref_stations=pd.read_csv(\"/groups/ESS/mislam25/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(home+\"/cmaq/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n#final.to_csv(home+\"/cmaq/subset.csv\",index=False)\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n# dropping unnecessary variables\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(home+\"/cmaq/training.csv\",index=False)",
  "history_output" : "training_data.py:17: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data.py:18: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data.py:19: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data.py:20: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n",
  "history_begin_time" : 1654477372421,
  "history_end_time" : 1654477412005,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "roeaa3",
  "indicator" : "Done"
},{
  "history_id" : "rds3dk31r2m",
  "history_input" : "import pandas as pd\nfrom pathlib import Path\n\n# home directory\nhome = str(Path.home())\ncmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\nobs=pd.read_csv(home+\"/cmaq/observation.csv\")\nref_stations=pd.read_csv(\"/groups/ESS/mislam25/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(home+\"/cmaq/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n#final.to_csv(home+\"/cmaq/subset.csv\",index=False)\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n# dropping unnecessary variables\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(home+\"/cmaq/training.csv\",index=False)",
  "history_output" : "Traceback (most recent call last):\n  File \"training_data.py\", line 6, in <module>\n    cmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\n  File \"C:\\Python37\\lib\\site-packages\\pandas\\io\\parsers.py\", line 676, in parser_f\n    return _read(filepath_or_buffer, kwds)\n  File \"C:\\Python37\\lib\\site-packages\\pandas\\io\\parsers.py\", line 448, in _read\n    parser = TextFileReader(fp_or_buf, **kwds)\n  File \"C:\\Python37\\lib\\site-packages\\pandas\\io\\parsers.py\", line 880, in __init__\n    self._make_engine(self.engine)\n  File \"C:\\Python37\\lib\\site-packages\\pandas\\io\\parsers.py\", line 1114, in _make_engine\n    self._engine = CParserWrapper(self.f, **self.options)\n  File \"C:\\Python37\\lib\\site-packages\\pandas\\io\\parsers.py\", line 1891, in __init__\n    self._reader = parsers.TextReader(src, **kwds)\n  File \"pandas\\_libs\\parsers.pyx\", line 374, in pandas._libs.parsers.TextReader.__cinit__\n  File \"pandas\\_libs\\parsers.pyx\", line 674, in pandas._libs.parsers.TextReader._setup_parser_source\nFileNotFoundError: [Errno 2] File C:\\Users\\JensenSun/cmaq/training_data.csv does not exist: 'C:\\\\Users\\\\JensenSun/cmaq/training_data.csv'\n",
  "history_begin_time" : 1654465997932,
  "history_end_time" : 1654465998460,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "004uo64dkrw",
  "history_input" : "import pandas as pd\nfrom pathlib import Path\n\n# home directory\nhome = str(Path.home())\ncmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\nobs=pd.read_csv(home+\"/cmaq/observation.csv\")\nref_stations=pd.read_csv(\"/groups/ESS/mislam25/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(home+\"/cmaq/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n#final.to_csv(home+\"/cmaq/subset.csv\",index=False)\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n# dropping unnecessary variables\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(home+\"/cmaq/training.csv\",index=False)",
  "history_output" : "training_data.py:17: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data.py:18: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data.py:19: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data.py:20: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n",
  "history_begin_time" : 1654455998076,
  "history_end_time" : 1654456034671,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "roeaa3",
  "indicator" : "Failed"
},{
  "history_id" : "qlyn2mwvnqt",
  "history_input" : "import pandas as pd\nfrom pathlib import Path\n\n# home directory\nhome = str(Path.home())\ncmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\nobs=pd.read_csv(home+\"/cmaq/observation.csv\")\nref_stations=pd.read_csv(\"/groups/ESS/mislam25/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(home+\"/cmaq/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n#final.to_csv(home+\"/cmaq/subset.csv\",index=False)\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n# dropping unnecessary variables\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(home+\"/cmaq/training.csv\",index=False)",
  "history_output" : "training_data.py:12: FutureWarning: Passing 'suffixes' which cause duplicate columns {'Latitude_y', 'Longitude_y'} in the result is deprecated and will raise a MergeError in a future version.\n  final = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\ntraining_data.py:17: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data.py:18: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data.py:19: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data.py:20: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n",
  "history_begin_time" : 1654319680116,
  "history_end_time" : 1654319723096,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "p6wvf2",
  "indicator" : "Done"
},{
  "history_id" : "owyhfo0w3kl",
  "history_input" : "import pandas as pd\nfrom pathlib import Path\n\n# home directory\nhome = str(Path.home())\ncmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\nobs=pd.read_csv(home+\"/cmaq/observation.csv\")\nref_stations=pd.read_csv(\"/groups/ESS/mislam25/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(home+\"/cmaq/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n#final.to_csv(home+\"/cmaq/subset.csv\",index=False)\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n# dropping unnecessary variables\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(home+\"/cmaq/training.csv\",index=False)",
  "history_output" : "training_data.py:17: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data.py:18: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data.py:19: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data.py:20: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n",
  "history_begin_time" : 1654317825242,
  "history_end_time" : 1654317871335,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "roeaa3",
  "indicator" : "Done"
},{
  "history_id" : "of419xbamj1",
  "history_input" : "import pandas as pd\nfrom pathlib import Path\n\n# home directory\nhome = str(Path.home())\ncmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\nobs=pd.read_csv(home+\"/cmaq/observation.csv\")\nref_stations=pd.read_csv(\"/groups/ESS/mislam25/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(home+\"/cmaq/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n#final.to_csv(home+\"/cmaq/subset.csv\",index=False)\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n# dropping unnecessary variables\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(home+\"/cmaq/training.csv\",index=False)",
  "history_output" : "training_data.py:17: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data.py:18: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data.py:19: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data.py:20: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n",
  "history_begin_time" : 1654314622932,
  "history_end_time" : 1654314654959,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "roeaa3",
  "indicator" : "Done"
},{
  "history_id" : "wci4nagb4g6",
  "history_input" : "import pandas as pd\nfrom pathlib import Path\n\n# home directory\nhome = str(Path.home())\ncmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\nobs=pd.read_csv(home+\"/cmaq/observation.csv\")\nref_stations=pd.read_csv(\"/groups/ESS/mislam25/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(home+\"/cmaq/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n#final.to_csv(home+\"/cmaq/subset.csv\",index=False)\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n# dropping unnecessary variables\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(home+\"/cmaq/training.csv\",index=False)",
  "history_output" : "training_data.py:12: FutureWarning: Passing 'suffixes' which cause duplicate columns {'Latitude_y', 'Longitude_y'} in the result is deprecated and will raise a MergeError in a future version.\n  final = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\ntraining_data.py:17: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data.py:18: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data.py:19: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data.py:20: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n",
  "history_begin_time" : 1653698191580,
  "history_end_time" : 1653698223309,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "p6wvf2",
  "indicator" : "Done"
},{
  "history_id" : "3qpjgyglmi7",
  "history_input" : "import pandas as pd\nfrom pathlib import Path\n\n# home directory\nhome = str(Path.home())\ncmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\nobs=pd.read_csv(home+\"/cmaq/observation.csv\")\nref_stations=pd.read_csv(\"/groups/ESS/mislam25/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(home+\"/cmaq/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n#final.to_csv(home+\"/cmaq/subset.csv\",index=False)\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n# dropping unnecessary variables\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(home+\"/cmaq/training.csv\",index=False)",
  "history_output" : "training_data.py:12: FutureWarning: Passing 'suffixes' which cause duplicate columns {'Longitude_y', 'Latitude_y'} in the result is deprecated and will raise a MergeError in a future version.\n  final = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\ntraining_data.py:17: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data.py:18: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data.py:19: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data.py:20: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n",
  "history_begin_time" : 1653698090704,
  "history_end_time" : 1653698125750,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "p6wvf2",
  "indicator" : "Done"
},{
  "history_id" : "qnocu8u1wab",
  "history_input" : "import pandas as pd\nfrom pathlib import Path\n\n# home directory\nhome = str(Path.home())\ncmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\nobs=pd.read_csv(home+\"/cmaq/observation.csv\")\nref_stations=pd.read_csv(\"/groups/ESS/mislam25/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(home+\"/cmaq/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n#final.to_csv(home+\"/cmaq/subset.csv\",index=False)\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n# dropping unnecessary variables\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(home+\"/cmaq/training.csv\",index=False)",
  "history_output" : "Traceback (most recent call last):\n  File \"training_data.py\", line 6, in <module>\n    cmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\n  File \"C:\\Python37\\lib\\site-packages\\pandas\\io\\parsers.py\", line 676, in parser_f\n    return _read(filepath_or_buffer, kwds)\n  File \"C:\\Python37\\lib\\site-packages\\pandas\\io\\parsers.py\", line 448, in _read\n    parser = TextFileReader(fp_or_buf, **kwds)\n  File \"C:\\Python37\\lib\\site-packages\\pandas\\io\\parsers.py\", line 880, in __init__\n    self._make_engine(self.engine)\n  File \"C:\\Python37\\lib\\site-packages\\pandas\\io\\parsers.py\", line 1114, in _make_engine\n    self._engine = CParserWrapper(self.f, **self.options)\n  File \"C:\\Python37\\lib\\site-packages\\pandas\\io\\parsers.py\", line 1891, in __init__\n    self._reader = parsers.TextReader(src, **kwds)\n  File \"pandas\\_libs\\parsers.pyx\", line 374, in pandas._libs.parsers.TextReader.__cinit__\n  File \"pandas\\_libs\\parsers.pyx\", line 674, in pandas._libs.parsers.TextReader._setup_parser_source\nFileNotFoundError: [Errno 2] File C:\\Users\\JensenSun/cmaq/training_data.csv does not exist: 'C:\\\\Users\\\\JensenSun/cmaq/training_data.csv'\n",
  "history_begin_time" : 1652934714029,
  "history_end_time" : 1652934714538,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Done"
},{
  "history_id" : "8c139mg4j4u",
  "history_input" : "import pandas as pd\nfrom pathlib import Path\n\n# home directory\nhome = str(Path.home())\ncmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\nobs=pd.read_csv(home+\"/cmaq/observation.csv\")\nref_stations=pd.read_csv(\"/groups/ESS/mislam25/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(home+\"/cmaq/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n#final.to_csv(home+\"/cmaq/subset.csv\",index=False)\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n# dropping unnecessary variables\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(home+\"/cmaq/training.csv\",index=False)",
  "history_output" : "Traceback (most recent call last):\n  File \"/Users/joe/gw-workspace/8c139mg4j4u/training_data.py\", line 6, in <module>\n    cmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/util/_decorators.py\", line 311, in wrapper\n    return func(*args, **kwargs)\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/readers.py\", line 586, in read_csv\n    return _read(filepath_or_buffer, kwds)\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/readers.py\", line 482, in _read\n    parser = TextFileReader(filepath_or_buffer, **kwds)\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/readers.py\", line 811, in __init__\n    self._engine = self._make_engine(self.engine)\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/readers.py\", line 1040, in _make_engine\n    return mapping[engine](self.f, **self.options)  # type: ignore[call-arg]\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/c_parser_wrapper.py\", line 51, in __init__\n    self._open_handles(src, kwds)\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/base_parser.py\", line 222, in _open_handles\n    self.handles = get_handle(\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/io/common.py\", line 702, in get_handle\n    handle = open(\nFileNotFoundError: [Errno 2] No such file or directory: '/Users/joe/cmaq/training_data.csv'\n",
  "history_begin_time" : 1652897338645,
  "history_end_time" : 1652897339388,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Done"
},{
  "history_id" : "4ltasiwogfp",
  "history_input" : "import pandas as pd\nfrom pathlib import Path\n\n# home directory\nhome = str(Path.home())\ncmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\nobs=pd.read_csv(home+\"/cmaq/observation.csv\")\nref_stations=pd.read_csv(\"/groups/ESS/mislam25/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(home+\"/cmaq/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n#final.to_csv(home+\"/cmaq/subset.csv\",index=False)\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n# dropping unnecessary variables\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(home+\"/cmaq/training.csv\",index=False)",
  "history_output" : "training_data.py:12: FutureWarning: Passing 'suffixes' which cause duplicate columns {'Latitude_y', 'Longitude_y'} in the result is deprecated and will raise a MergeError in a future version.\n  final = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\ntraining_data.py:17: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data.py:18: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data.py:19: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data.py:20: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n",
  "history_begin_time" : 1652831932017,
  "history_end_time" : 1652831959195,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "p6wvf2",
  "indicator" : "Done"
},{
  "history_id" : "m56912soyvj",
  "history_input" : "import pandas as pd\nfrom pathlib import Path\n\n# home directory\nhome = str(Path.home())\ncmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\nobs=pd.read_csv(home+\"/cmaq/observation.csv\")\nref_stations=pd.read_csv(\"/groups/ESS/mislam25/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(home+\"/cmaq/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n#final.to_csv(home+\"/cmaq/subset.csv\",index=False)\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n# dropping unnecessary variables\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(home+\"/cmaq/training.csv\",index=False)",
  "history_output" : "training_data.py:12: FutureWarning: Passing 'suffixes' which cause duplicate columns {'Latitude_y', 'Longitude_y'} in the result is deprecated and will raise a MergeError in a future version.\n  final = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\ntraining_data.py:17: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data.py:18: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data.py:19: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data.py:20: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n",
  "history_begin_time" : 1652831065367,
  "history_end_time" : 1652831094512,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "p6wvf2",
  "indicator" : "Done"
},{
  "history_id" : "4k52pyetkx5",
  "history_input" : null,
  "history_output" : "Remote SCP command had error: scp: 4k52pyetkx5.tar: Disk quota exceeded",
  "history_begin_time" : 1652786135646,
  "history_end_time" : 1652786137654,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "p6wvf2",
  "indicator" : "Failed"
},{
  "history_id" : "odu7qynvngj",
  "history_input" : "import pandas as pd\nfrom pathlib import Path\n\n# home directory\nhome = str(Path.home())\ncmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\nobs=pd.read_csv(home+\"/cmaq/observation.csv\")\nref_stations=pd.read_csv(\"/groups/ESS/mislam25/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(home+\"/cmaq/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n#final.to_csv(home+\"/cmaq/subset.csv\",index=False)\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n# dropping unnecessary variables\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(home+\"/cmaq/training.csv\",index=False)",
  "history_output" : "training_data.py:12: FutureWarning: Passing 'suffixes' which cause duplicate columns {'Longitude_y', 'Latitude_y'} in the result is deprecated and will raise a MergeError in a future version.\n  final = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\ntraining_data.py:17: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data.py:18: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data.py:19: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data.py:20: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n",
  "history_begin_time" : 1652054956899,
  "history_end_time" : 1652054985072,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "p6wvf2",
  "indicator" : "Done"
},{
  "history_id" : "xz2lii6giey",
  "history_input" : "import pandas as pd\nfrom pathlib import Path\n\n# home directory\nhome = str(Path.home())\ncmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\nobs=pd.read_csv(home+\"/cmaq/observation.csv\")\nref_stations=pd.read_csv(\"/groups/ESS/mislam25/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(home+\"/cmaq/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n#final.to_csv(home+\"/cmaq/subset.csv\",index=False)\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n# dropping unnecessary variables\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(home+\"/cmaq/training.csv\",index=False)",
  "history_output" : "Traceback (most recent call last):\n  File \"training_data.py\", line 7, in <module>\n    obs=pd.read_csv(home+\"/cmaq/observation.csv\")\n  File \"/home/aalnaim/CMAQAI/lib/python3.8/site-packages/pandas/util/_decorators.py\", line 311, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/aalnaim/CMAQAI/lib/python3.8/site-packages/pandas/io/parsers/readers.py\", line 680, in read_csv\n    return _read(filepath_or_buffer, kwds)\n  File \"/home/aalnaim/CMAQAI/lib/python3.8/site-packages/pandas/io/parsers/readers.py\", line 575, in _read\n    parser = TextFileReader(filepath_or_buffer, **kwds)\n  File \"/home/aalnaim/CMAQAI/lib/python3.8/site-packages/pandas/io/parsers/readers.py\", line 933, in __init__\n    self._engine = self._make_engine(f, self.engine)\n  File \"/home/aalnaim/CMAQAI/lib/python3.8/site-packages/pandas/io/parsers/readers.py\", line 1217, in _make_engine\n    self.handles = get_handle(  # type: ignore[call-overload]\n  File \"/home/aalnaim/CMAQAI/lib/python3.8/site-packages/pandas/io/common.py\", line 789, in get_handle\n    handle = open(\nFileNotFoundError: [Errno 2] No such file or directory: '/home/aalnaim/cmaq/observation.csv'\n",
  "history_begin_time" : 1652047812791,
  "history_end_time" : 1652047846337,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "p6wvf2",
  "indicator" : "Done"
},{
  "history_id" : "4cpthgcysff",
  "history_input" : "import pandas as pd\nfrom pathlib import Path\n\n# home directory\nhome = str(Path.home())\ncmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\nobs=pd.read_csv(home+\"/cmaq/observation.csv\")\nref_stations=pd.read_csv(home+\"/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(home+\"/cmaq/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\nfinal.to_csv(home+\"/cmaq/subset.csv\",index=False)\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n# dropping unnecessary variables\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(home+\"/cmaq/training.csv\",index=False)",
  "history_output" : "Traceback (most recent call last):\n  File \"/Users/joe/gw-workspace/4cpthgcysff/training_data.py\", line 6, in <module>\n    cmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/util/_decorators.py\", line 311, in wrapper\n    return func(*args, **kwargs)\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/readers.py\", line 586, in read_csv\n    return _read(filepath_or_buffer, kwds)\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/readers.py\", line 482, in _read\n    parser = TextFileReader(filepath_or_buffer, **kwds)\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/readers.py\", line 811, in __init__\n    self._engine = self._make_engine(self.engine)\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/readers.py\", line 1040, in _make_engine\n    return mapping[engine](self.f, **self.options)  # type: ignore[call-arg]\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/c_parser_wrapper.py\", line 51, in __init__\n    self._open_handles(src, kwds)\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/base_parser.py\", line 222, in _open_handles\n    self.handles = get_handle(\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/io/common.py\", line 702, in get_handle\n    handle = open(\nFileNotFoundError: [Errno 2] No such file or directory: '/Users/joe/cmaq/training_data.csv'\n",
  "history_begin_time" : 1651361413318,
  "history_end_time" : 1651361414027,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "100001",
  "indicator" : "Done"
},{
  "history_id" : "4lcbmdnkslv",
  "history_input" : "import pandas as pd\nfrom pathlib import Path\n\n# home directory\nhome = str(Path.home())\ncmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\nobs=pd.read_csv(home+\"/cmaq/observation.csv\")\nref_stations=pd.read_csv(\"/groups/ESS/mislam25/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(home+\"/cmaq/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\nfinal.to_csv(home+\"/cmaq/subset.csv\",index=False)\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n# dropping unnecessary variables\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(home+\"/cmaq/training.csv\",index=False)",
  "history_output" : "Traceback (most recent call last):\n  File \"/home/mislam25/gw-workspace/4lcbmdnkslv/training_data.py\", line 7, in <module>\n    obs=pd.read_csv(home+\"/cmaq/observation.csv\")\n  File \"/home/mislam25/anaconda3/lib/python3.9/site-packages/pandas/util/_decorators.py\", line 311, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/mislam25/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/readers.py\", line 586, in read_csv\n    return _read(filepath_or_buffer, kwds)\n  File \"/home/mislam25/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/readers.py\", line 482, in _read\n    parser = TextFileReader(filepath_or_buffer, **kwds)\n  File \"/home/mislam25/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/readers.py\", line 811, in __init__\n    self._engine = self._make_engine(self.engine)\n  File \"/home/mislam25/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/readers.py\", line 1040, in _make_engine\n    return mapping[engine](self.f, **self.options)  # type: ignore[call-arg]\n  File \"/home/mislam25/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/c_parser_wrapper.py\", line 51, in __init__\n    self._open_handles(src, kwds)\n  File \"/home/mislam25/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/base_parser.py\", line 222, in _open_handles\n    self.handles = get_handle(\n  File \"/home/mislam25/anaconda3/lib/python3.9/site-packages/pandas/io/common.py\", line 702, in get_handle\n    handle = open(\nFileNotFoundError: [Errno 2] No such file or directory: '/home/mislam25/cmaq/observation.csv'\n",
  "history_begin_time" : 1650480291543,
  "history_end_time" : 1650480551470,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "3wgogh",
  "indicator" : "Done"
},{
  "history_id" : "7td16xnrxss",
  "history_input" : "import pandas as pd\nfrom pathlib import Path\n\n# home directory\nhome = str(Path.home())\ncmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\nobs=pd.read_csv(home+\"/cmaq/observation.csv\")\nref_stations=pd.read_csv(\"/groups/ESS/mislam25/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(home+\"/cmaq/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\nfinal.to_csv(home+\"/cmaq/subset.csv\",index=False)\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n# dropping unnecessary variables\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(home+\"/cmaq/training.csv\",index=False)",
  "history_output" : "Traceback (most recent call last):\n  File \"/home/mislam25/gw-workspace/7td16xnrxss/training_data.py\", line 7, in <module>\n    obs=pd.read_csv(home+\"/cmaq/observation.csv\")\n  File \"/home/mislam25/anaconda3/lib/python3.9/site-packages/pandas/util/_decorators.py\", line 311, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/mislam25/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/readers.py\", line 586, in read_csv\n    return _read(filepath_or_buffer, kwds)\n  File \"/home/mislam25/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/readers.py\", line 482, in _read\n    parser = TextFileReader(filepath_or_buffer, **kwds)\n  File \"/home/mislam25/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/readers.py\", line 811, in __init__\n    self._engine = self._make_engine(self.engine)\n  File \"/home/mislam25/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/readers.py\", line 1040, in _make_engine\n    return mapping[engine](self.f, **self.options)  # type: ignore[call-arg]\n  File \"/home/mislam25/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/c_parser_wrapper.py\", line 51, in __init__\n    self._open_handles(src, kwds)\n  File \"/home/mislam25/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/base_parser.py\", line 222, in _open_handles\n    self.handles = get_handle(\n  File \"/home/mislam25/anaconda3/lib/python3.9/site-packages/pandas/io/common.py\", line 702, in get_handle\n    handle = open(\nFileNotFoundError: [Errno 2] No such file or directory: '/home/mislam25/cmaq/observation.csv'\n",
  "history_begin_time" : 1650473135420,
  "history_end_time" : 1650473497567,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "3wgogh",
  "indicator" : "Done"
},{
  "history_id" : "a7c91896dhw",
  "history_input" : "import pandas as pd\nfrom pathlib import Path\n\n# home directory\nhome = str(Path.home())\ncmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\nobs=pd.read_csv(home+\"/cmaq/observation.csv\")\nref_stations=pd.read_csv(\"/groups/ESS/mislam25/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(home+\"/cmaq/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\nfinal.to_csv(home+\"/cmaq/subset.csv\",index=False)\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n# dropping unnecessary variables\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(home+\"/cmaq/training.csv\",index=False)",
  "history_output" : "/home/mislam25/gw-workspace/a7c91896dhw/training_data.py:12: FutureWarning: Passing 'suffixes' which cause duplicate columns {'Latitude_y', 'Longitude_y'} in the result is deprecated and will raise a MergeError in a future version.\n  final = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n/home/mislam25/gw-workspace/a7c91896dhw/training_data.py:17: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\n/home/mislam25/gw-workspace/a7c91896dhw/training_data.py:18: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\n/home/mislam25/gw-workspace/a7c91896dhw/training_data.py:19: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\n/home/mislam25/gw-workspace/a7c91896dhw/training_data.py:20: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n",
  "history_begin_time" : 1650252062981,
  "history_end_time" : 1650252114588,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "3wgogh",
  "indicator" : "Done"
},{
  "history_id" : "tylof4csr2r",
  "history_input" : "import pandas as pd\nfrom pathlib import Path\n\n# home directory\nhome = str(Path.home())\ncmaq=pd.read_csv(home+\"/cmaq/training_data.csv\")\nobs=pd.read_csv(home+\"/cmaq/observation.csv\")\nref_stations=pd.read_csv(home+\"/station_cmaq_location.csv\")\n\nnew_df = pd.merge(ref_stations, cmaq,  how='left', left_on=['Latitude_y','Longitude_y'], right_on = ['Latitude','Longitude'])\nnew_df.to_csv(home+\"/cmaq/subset.csv\")\nfinal = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\nfinal.to_csv(home+\"/cmaq/subset.csv\",index=False)\nfinal=final.drop_duplicates(keep=False)\ntraining_data = final.loc[:,~final.columns.duplicated()]\n# dropping unnecessary variables\ntraining_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\ntraining_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\ntraining_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\ntraining_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n\nnew_df=training_data.drop(['StationID','Latitude_y','Longitude_y','YYYYMMDDHH'],axis=1)\nfinal_df = new_df[new_df.AirNOW_O3!= -999]\nfinal_df.to_csv(home+\"/cmaq/training.csv\",index=False)",
  "history_output" : "/home/mislam25/gw-workspace/tylof4csr2r/training_data.py:12: FutureWarning: Passing 'suffixes' which cause duplicate columns {'Longitude_y', 'Latitude_y'} in the result is deprecated and will raise a MergeError in a future version.\n  final = pd.merge(obs, new_df,  how='left', left_on=['Latitude','Longitude','YYYYMMDDHH'], right_on = ['Latitude_x','Longitude_x','YYYYMMDDHH'])\n/home/mislam25/gw-workspace/tylof4csr2r/training_data.py:17: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['YYYYMMDDHH'] = training_data['YYYYMMDDHH'].map(str)\n/home/mislam25/gw-workspace/tylof4csr2r/training_data.py:18: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['month'] = training_data['YYYYMMDDHH'].str[4:6]\n/home/mislam25/gw-workspace/tylof4csr2r/training_data.py:19: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['day'] = training_data['YYYYMMDDHH'].str[6:8]\n/home/mislam25/gw-workspace/tylof4csr2r/training_data.py:20: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  training_data['hours'] = training_data['YYYYMMDDHH'].str[8:10]\n",
  "history_begin_time" : 1650214654818,
  "history_end_time" : 1650214699383,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "3wgogh",
  "indicator" : "Done"
},{
  "history_id" : "h4gkz7hwtzk",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1664422603415,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "aqt8fv",
  "indicator" : "Stopped"
},{
  "history_id" : "uh9mj1plauf",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1660777307030,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "rwpuseo5n4y",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1660294477696,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "588j1rmlbv5",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1660786975139,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "ofbmzkhalw2",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1660853992767,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "7gemau61re7",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1660854222320,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "e3tndwc8isj",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1660295756074,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "5z6ohk00gcm",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1664422878582,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "aqt8fv",
  "indicator" : "Stopped"
},]
