[{
  "history_id" : "ph43s81029v",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665949241995,
  "history_end_time" : 1665950753607,
  "history_notes" : null,
  "history_process" : "6up921",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "j88fskmmni8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665949242080,
  "history_end_time" : 1665950753609,
  "history_notes" : null,
  "history_process" : "xpdg66",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "8id4wbw49eu",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665949242104,
  "history_end_time" : 1665950753610,
  "history_notes" : null,
  "history_process" : "xlayd5",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "m33hrky3ehl",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665949242117,
  "history_end_time" : 1665950753612,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "m784t8sxdre",
  "history_input" : "# use the trained model to predict on the testing data and save the results to prediction_rf.csv\n\nimport pandas as pd\nimport pickle\nfrom pathlib import Path\nfrom time import sleep\nimport glob, os\nfrom sklearn.metrics import r2_score, mean_squared_error\nfrom cmaq_ai_utils import *\n\ncreate_and_clean_folder(f\"{cmaq_folder}/prediction_files/\")\n\n# importing data\n# final=pd.read_csv(f\"{cmaq_folder}/testing_input_hourly/testing.csv\")\ntesting_path = f'{cmaq_folder}/testing_input_hourly'\nall_hourly_files = glob.glob(os.path.join(testing_path, \"test_data_*.csv\"))\ndf_from_each_hourly_file = (pd.read_csv(f) for f in all_hourly_files)\n\n# load the model from disk\n# filename = f'{cmaq_folder}/models/rf_pycaret.sav'\n\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_one_year.sav'\nloaded_model = pickle.load(open(filename, 'rb'))\n\nfor testing_df in df_from_each_hourly_file:\n  print(testing_df['YYYYMMDDHH'].values[0])\n  file_dateTime = testing_df['YYYYMMDDHH'].values[0]\n  #X = testing_df.drop(['YYYYMMDDHH','Latitude','Longitude'],axis=1)\n  testing_df['time_of_day'] = (testing_df['hours'] % 24 + 4) // 4\n\n  # Make coords even more coarse by rounding to closest multiple of 5 \n  # (e.g., 40, 45, 85, 55)\n  #testing_df['Latitude_ExtraCoarse'] = 0.1 * round(testing_df['Latitude']/0.1)\n  #testing_df['Longitude_ExtraCoarse'] = 0.1 * round(testing_df['Longitude']/0.1)\n  X = testing_df.drop(['YYYYMMDDHH','Latitude','Longitude', 'CO(moles/s)'],axis=1)\n  \n#   print(X.columns)\n\n# # making prediction\n  pred = loaded_model.predict(X)\n\n# adding prediction values to test dataset\n  #testing_df['prediction'] = testing_df['CMAQ12KM_O3(ppb)'].tolist()\n  testing_df['prediction'] = pred\n\n  testing_df = testing_df[['Latitude', 'Longitude','YYYYMMDDHH','prediction']]\n# saving the dataset into local drive\n  print(f'Saving: {cmaq_folder}/prediction_files/prediction_rf_{file_dateTime}.csv')\n  testing_df.to_csv(f'{cmaq_folder}/prediction_files/prediction_rf_{file_dateTime}.csv',index=False)",
  "history_output" : "2022101319\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101319.csv\n2022101310\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101310.csv\n2022101317\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101317.csv\n2022101322\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101322.csv\n2022101221\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101221.csv\n2022101306\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101306.csv\n2022101214\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101214.csv\n2022101213\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101213.csv\n2022101301\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101301.csv\n2022101404\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101404.csv\n2022101403\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101403.csv\n2022101308\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101308.csv\n2022101323\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101323.csv\n2022101316\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101316.csv\n2022101311\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101311.csv\n2022101318\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101318.csv\n2022101309\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101309.csv\n2022101402\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101402.csv\n2022101405\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101405.csv\n2022101212\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101212.csv\n2022101300\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101300.csv\n2022101307\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101307.csv\n2022101215\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101215.csv\n2022101220\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101220.csv\n2022101406\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101406.csv\n2022101401\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101401.csv\n2022101218\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101218.csv\n2022101304\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101304.csv\n2022101216\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101216.csv\n2022101303\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101303.csv\n2022101408\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101408.csv\n2022101223\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101223.csv\n2022101320\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101320.csv\n2022101312\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101312.csv\n2022101315\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101315.csv\n2022101410\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101410.csv\n2022101222\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101222.csv\n2022101409\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101409.csv\n2022101302\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101302.csv\n2022101305\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101305.csv\n2022101217\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101217.csv\n2022101400\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101400.csv\n2022101219\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101219.csv\n2022101407\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101407.csv\n2022101411\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101411.csv\n2022101314\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101314.csv\n2022101313\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101313.csv\n2022101321\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101321.csv\n",
  "history_begin_time" : 1665949596271,
  "history_end_time" : 1665950753613,
  "history_notes" : null,
  "history_process" : "l8vlic",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "1e1frv6960l",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665949242307,
  "history_end_time" : 1665950753615,
  "history_notes" : null,
  "history_process" : "wny2dz",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "x53b2geao02",
  "history_input" : "# load the prediction_rf.csv into a NetCDF file for visualization\nfrom cmaq_ai_utils import *\n\n# Auto date method\nsdate, edate = get_date_range_auto(days_ago=4)\n\n# Manual date method\n# sdate = date(2022, 8, 6)   # start date\n# edate = date(2022, 8, 7)   # end date\n\ndays = get_days_list(sdate, edate)\n\nprediction_path = f\"{cmaq_folder}/prediction_files/\"\n\nall_hourly_files = sorted(glob.glob(os.path.join(prediction_path, \"*.csv\")))\n# print(\"overall hourly files: \", all_hourly_files)\n\nfor i in range(len(days)-1):\n  print(days[i])\n  \n  df_cdf = xr.open_dataset(\"/groups/ESS/share/projects/SWUS3km/data/cmaqdata/CCTMout/12km/POST/COMBINE3D_ACONC_v531_gcc_AQF5X_\"+days[i+1]+\"_extracted.nc\")\n  \n  print(\"single day hourly files: \", all_hourly_files[i*24:(i+1)*24])\n  df_from_each_hourly_file = (pd.read_csv(f) for f in all_hourly_files[i*24:(i+1)*24])\n  \n  df_csv = pd.concat(df_from_each_hourly_file, ignore_index=True)\n\n  reshaped_prediction = df_csv['prediction'].to_numpy().reshape(24, 265, 442)\n  print(reshaped_prediction.shape)\n  \n  # Remove \"LAY\" Dimension in O3 variable already in nc file.\n  reduced_dim = df_cdf['O3'].sel(LAY=1, drop=True)\n\n  # Swap values from original nc file with new prediction data\n  reduced_dim.values = reshaped_prediction\n\n  # Apply changes to data variable in nc file\n  df_cdf['O3'] = (['TSTEP', 'ROW', 'COL'], reshaped_prediction)\n\n#   create_and_clean_folder(f\"{cmaq_folder}/prediction_nc_files\")\n  df_cdf.to_netcdf(f'{cmaq_folder}/prediction_nc_files/COMBINE3D_ACONC_v531_gcc_AQF5X_'+days[i]+'_ML_extracted.nc')\n\n  print(f'Saved updated netCDF file: {cmaq_folder}/prediction_nc_files/COMBINE3D_ACONC_v531_gcc_AQF5X_'+days[i]+'_ML_extracted.nc')",
  "history_output" : "20221012\nsingle day hourly files:  ['/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101212.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101213.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101214.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101215.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101216.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101217.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101218.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101219.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101220.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101221.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101222.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101223.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101300.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101301.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101302.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101303.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101304.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101305.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101306.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101307.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101308.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101309.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101310.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101311.csv']\n(24, 265, 442)\nSaved updated netCDF file: /groups/ESS3/aalnaim/cmaq//prediction_nc_files/COMBINE3D_ACONC_v531_gcc_AQF5X_20221012_ML_extracted.nc\n20221013\nsingle day hourly files:  ['/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101312.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101313.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101314.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101315.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101316.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101317.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101318.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101319.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101320.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101321.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101322.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101323.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101400.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101401.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101402.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101403.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101404.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101405.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101406.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101407.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101408.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101409.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101410.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022101411.csv']\n(24, 265, 442)\nSaved updated netCDF file: /groups/ESS3/aalnaim/cmaq//prediction_nc_files/COMBINE3D_ACONC_v531_gcc_AQF5X_20221013_ML_extracted.nc\n",
  "history_begin_time" : 1665949947361,
  "history_end_time" : 1665950753617,
  "history_notes" : null,
  "history_process" : "3asyzj",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "yqti7ud7y0j",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665949242343,
  "history_end_time" : 1665950753618,
  "history_notes" : null,
  "history_process" : "9xdvh6",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "4j2m6ukcjbm",
  "history_input" : "# get hourly CMAQ data into csv for prediction\n\nfrom cmaq_ai_utils import *\n\n\n# Auto date method\nsdate, edate = get_date_range_auto(days_ago=4)\n\n# Manual date method\n# sdate = date(2022, 8, 6)   # start date\n# edate = date(2022, 8, 7)   # end date\n\ndays = get_days_list(sdate, edate)\n\nreal_hour_list = [12,13,14,15,16,17,18,19,20,21,22,23,0,1,2,3,4,5,6,7,8,9,10,11]\ntime_step_in_netcdf_list = range(0,24)\n\ntest_folder = f\"{cmaq_folder}/testing_input_hourly/\"\ncreate_and_clean_folder(test_folder)\n\nfor x in range(len(days)-1):\n  current_day = days[x]\n  next_day = days[x+1]\n  print(\"Getting data for: \"+current_day)\n  \n  # read cmaq results\n  df_cmaq = xr.open_dataset(\"/groups/ESS/share/projects/SWUS3km/data/cmaqdata/CCTMout/12km/POST/COMBINE3D_ACONC_v531_gcc_AQF5X_\"+current_day+\"_extracted.nc\")\n  \n  # read mcip results \n  df_mcip = xr.open_dataset(\"/groups/ESS/share/projects/SWUS3km/data/cmaqdata/mcip/12km/METCRO2D_\"+current_day+\".nc\")\n  \n  # read emissions results \n  df_emis = xr.open_dataset(\"/groups/ESS/share/projects/SWUS3km/data/cmaqdata/emis2021/12km/all/emis_mole_all_\"+current_day+\"_AQF5X_cmaq_cb6ae7_2017gb_17j.ncf\")\n  \n  for k in time_step_in_netcdf_list:\n    real_hour_value = real_hour_list[k]\n    \n    if real_hour_value<12:\n      day = next_day\n    else:\n      day = current_day\n    \n    df_hourly = pd.DataFrame()\n    \n    \n    # CMAQ data\n    # O3 variable\n    o3=df_cmaq.variables['O3'][:].values[k, 0]\n    cmaq_O3=list(np.ravel(o3).transpose())\n    \n    # NO2\n    no2=df_cmaq.variables['NO2'][:].values[k, 0]\n    cmaq_NO2=list(np.ravel(no2).transpose())\n    \n    # CO\n    co=df_cmaq.variables['CO'][:].values[k, 0]\n    cmaq_CO=list(np.ravel(co).transpose())\n    \n    # PM25_CO\n    pm25=df_cmaq.variables['PM25_OC'][:].values[k, 0]\n    cmaq_PM25_CO=list(np.ravel(pm25).transpose())\n    \n    # EMIS data\n    co_emis=df_emis.variables['CO'][:].values[k, 0]\n    CO_emi=list(np.ravel(co_emis).transpose())    \n    \n    # MCIP data\n    # CO variable\n    prsfc=df_mcip.variables['PRSFC'][:].values[k, 0]\n    PRSFC=list(np.ravel(prsfc).transpose())\n    \n    # NO2\n    pbl=df_mcip.variables['PBL'][:].values[k, 0]\n    PBL=list(np.ravel(pbl).transpose())\n    \n    # TEMP2\n    temp2=df_mcip.variables['TEMP2'][:].values[k, 0]\n    TEMP2=list(np.ravel(temp2).transpose())\n    \n    # WSPD10\n    wspd10=df_mcip.variables['WSPD10'][:].values[k, 0]\n    WSPD10=list(np.ravel(wspd10).transpose())\n    \n    # WDIR10\n    wdir10=df_mcip.variables['WDIR10'][:].values[k, 0]\n    WDIR10=list(np.ravel(wdir10).transpose())\n    \n    # RGRND\n    rgrnd=df_mcip.variables['RGRND'][:].values[k, 0]\n    RGRND=list(np.ravel(rgrnd).transpose())\n    \n    # CFRAC\n    cfrac=df_mcip.variables['CFRAC'][:].values[k, 0]\n    CFRAC=list(np.ravel(cfrac).transpose())\n    \n    ## LAT/LON data\n    df_coords = xr.open_dataset('/home/yli74/scripts/plots/2020fire/GRIDCRO2D')\n    \n    lat = df_coords.variables['LAT'][:].values[0,0]\n    print(\"lat shape\", lat.shape)\n    lat_flt=np.ravel(lat)\n    LAT=lat_flt #np.tile(lat_flt,1)\n    \n    lon = df_coords.variables['LON'][:].values[0,0]\n    lon_flt=np.ravel(lon)\n    LON=lon_flt #np.tile(lon_flt,1)\n    \n    df_hourly['Latitude'] = LAT\n    df_hourly['Longitude'] = LON\n    df_hourly['YYYYMMDDHH'] = day+turn_2_digits(real_hour_value)\n    df_hourly['CMAQ12KM_O3(ppb)'] = cmaq_O3\n    df_hourly['CMAQ12KM_NO2(ppb)'] = cmaq_NO2\n    df_hourly['CMAQ12KM_CO(ppm)'] = cmaq_CO\n    df_hourly['CMAQ_OC(ug/m3)'] = cmaq_PM25_CO\n    df_hourly['CO(moles/s)'] = CO_emi\n    df_hourly['PRSFC(Pa)'] = PRSFC\n    df_hourly['PBL(m)'] = PBL\n    df_hourly['TEMP2(K)'] = TEMP2\n    df_hourly['WSPD10(m/s)'] = WSPD10\n    df_hourly['WDIR10(degree)'] = WDIR10\n    df_hourly['RGRND(W/m2)'] = RGRND\n    df_hourly['CFRAC'] = CFRAC\n    df_hourly['month'] = df_hourly['YYYYMMDDHH'].str[4:6]\n    df_hourly['day'] = df_hourly['YYYYMMDDHH'].str[6:8]\n    df_hourly['hours'] = df_hourly['YYYYMMDDHH'].str[8:10]\n    print(f'Saving file: test_data_{day}_{turn_2_digits(real_hour_value)}.csv')\n    df_hourly.to_csv(f'{test_folder}/test_data_{day}_{turn_2_digits(real_hour_value)}.csv',index=False)\n\nprint('Done with preparing testing data!')",
  "history_output" : "Getting data for: 20221012\nlat shape (265, 442)\nSaving file: test_data_20221012_12.csv\nlat shape (265, 442)\nSaving file: test_data_20221012_13.csv\nlat shape (265, 442)\nSaving file: test_data_20221012_14.csv\nlat shape (265, 442)\nSaving file: test_data_20221012_15.csv\nlat shape (265, 442)\nSaving file: test_data_20221012_16.csv\nlat shape (265, 442)\nSaving file: test_data_20221012_17.csv\nlat shape (265, 442)\nSaving file: test_data_20221012_18.csv\nlat shape (265, 442)\nSaving file: test_data_20221012_19.csv\nlat shape (265, 442)\nSaving file: test_data_20221012_20.csv\nlat shape (265, 442)\nSaving file: test_data_20221012_21.csv\nlat shape (265, 442)\nSaving file: test_data_20221012_22.csv\nlat shape (265, 442)\nSaving file: test_data_20221012_23.csv\nlat shape (265, 442)\nSaving file: test_data_20221013_00.csv\nlat shape (265, 442)\nSaving file: test_data_20221013_01.csv\nlat shape (265, 442)\nSaving file: test_data_20221013_02.csv\nlat shape (265, 442)\nSaving file: test_data_20221013_03.csv\nlat shape (265, 442)\nSaving file: test_data_20221013_04.csv\nlat shape (265, 442)\nSaving file: test_data_20221013_05.csv\nlat shape (265, 442)\nSaving file: test_data_20221013_06.csv\nlat shape (265, 442)\nSaving file: test_data_20221013_07.csv\nlat shape (265, 442)\nSaving file: test_data_20221013_08.csv\nlat shape (265, 442)\nSaving file: test_data_20221013_09.csv\nlat shape (265, 442)\nSaving file: test_data_20221013_10.csv\nlat shape (265, 442)\nSaving file: test_data_20221013_11.csv\nGetting data for: 20221013\nlat shape (265, 442)\nSaving file: test_data_20221013_12.csv\nlat shape (265, 442)\nSaving file: test_data_20221013_13.csv\nlat shape (265, 442)\nSaving file: test_data_20221013_14.csv\nlat shape (265, 442)\nSaving file: test_data_20221013_15.csv\nlat shape (265, 442)\nSaving file: test_data_20221013_16.csv\nlat shape (265, 442)\nSaving file: test_data_20221013_17.csv\nlat shape (265, 442)\nSaving file: test_data_20221013_18.csv\nlat shape (265, 442)\nSaving file: test_data_20221013_19.csv\nlat shape (265, 442)\nSaving file: test_data_20221013_20.csv\nlat shape (265, 442)\nSaving file: test_data_20221013_21.csv\nlat shape (265, 442)\nSaving file: test_data_20221013_22.csv\nlat shape (265, 442)\nSaving file: test_data_20221013_23.csv\nlat shape (265, 442)\nSaving file: test_data_20221014_00.csv\nlat shape (265, 442)\nSaving file: test_data_20221014_01.csv\nlat shape (265, 442)\nSaving file: test_data_20221014_02.csv\nlat shape (265, 442)\nSaving file: test_data_20221014_03.csv\nlat shape (265, 442)\nSaving file: test_data_20221014_04.csv\nlat shape (265, 442)\nSaving file: test_data_20221014_05.csv\nlat shape (265, 442)\nSaving file: test_data_20221014_06.csv\nlat shape (265, 442)\nSaving file: test_data_20221014_07.csv\nlat shape (265, 442)\nSaving file: test_data_20221014_08.csv\nlat shape (265, 442)\nSaving file: test_data_20221014_09.csv\nlat shape (265, 442)\nSaving file: test_data_20221014_10.csv\nlat shape (265, 442)\nSaving file: test_data_20221014_11.csv\nDone with preparing testing data!\n",
  "history_begin_time" : 1665949243573,
  "history_end_time" : 1665950753620,
  "history_notes" : null,
  "history_process" : "ex3vh9",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "wtuyq600f3o",
  "history_input" : "# merge all hourly testing data into daily files\n\nimport pandas as pd\nimport glob\nimport os\nfrom pathlib import Path\nfrom cmaq_ai_utils import *\n\ntesting_path = f'{cmaq_folder}/testing_input_hourly'\nall_hourly_files = glob.glob(os.path.join(testing_path, \"test_data_*.csv\"))   \n# advisable to use os.path.join as this makes concatenation OS independent\n\ndf_from_each_hourly_file = (pd.read_csv(f) for f in all_hourly_files)\ncmaq = pd.concat(df_from_each_hourly_file, ignore_index=True)\n\n# dropping unnecessary variables\ncmaq['YYYYMMDDHH'] = cmaq['YYYYMMDDHH'].map(str)\ncmaq['month'] = cmaq['YYYYMMDDHH'].str[4:6]\ncmaq['day'] = cmaq['YYYYMMDDHH'].str[6:8]\ncmaq['hours'] = cmaq['YYYYMMDDHH'].str[8:10]\n\nremove_file(f\"{testing_path}/testing.csv\")\ncmaq.to_csv(f\"{testing_path}/testing.csv\",index=False)\n\nprint('Done with generating testing.csv!')",
  "history_output" : "remove old files/groups/ESS3/aalnaim/cmaq//testing_input_hourly/testing.csv\nDone with generating testing.csv!\n",
  "history_begin_time" : 1665949498330,
  "history_end_time" : 1665950753621,
  "history_notes" : null,
  "history_process" : "b8uv5z",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "uav5g592jg6",
  "history_input" : "#!/bin/bash\n# generate images and gif from the NetCDF files\n\nexport cmaq_folder=\"/groups/ESS3/aalnaim/cmaq\"\nmkdir $cmaq_folder\"/plots\"\nrm $cmaq_folder/plots/* # clean everything first\n\necho $(date -d '4 day ago' '+%Y%m%d')\n# Setting env variables\nexport YYYYMMDD_POST=$(date -d '4 day ago' '+%Y%m%d')\n\nexport stdate_post=$(date -d '4 day ago' '+%Y-%m-%d')\nexport eddate_post=$(date -d '3 day ago' '+%Y-%m-%d')\n\nexport stdate_file=$(date -d '4 day ago' '+%Y%m%d')\nexport eddate_file=$(date -d '3 day ago' '+%Y%m%d')\n\n# export YYYYMMDD_POST='20221002'\n# export stdate_post='2022-10-02'\n# export eddate_post='2022-10-03'\n# export stdate_file='20221002'\n# export eddate_file='20221003'\n\nexport postdata_dir=$cmaq_folder\"/prediction_nc_files\"\nexport mcip_dir=\"/groups/ESS/share/projects/SWUS3km/data/cmaqdata/mcip/12km\"\nexport dir_graph=$cmaq_folder\"/plots\"\n\nmodule load ncl\n\nrm $cmaq_folder/geoweaver_plot_daily_O3.ncl\ncat <<EOF >> $cmaq_folder/geoweaver_plot_daily_O3.ncl\nload \"/opt/sw/spack/apps/linux-centos8-cascadelake/gcc-9.3.0-openmpi-4.0.4/ncl-6.6.2-fr/lib/ncarg/nclscripts/csm/gsn_code.ncl\"\nload \"/opt/sw/spack/apps/linux-centos8-cascadelake/gcc-9.3.0-openmpi-4.0.4/ncl-6.6.2-fr/lib/ncarg/nclscripts/csm/gsn_csm.ncl\"\nload \"/opt/sw/spack/apps/linux-centos8-cascadelake/gcc-9.3.0-openmpi-4.0.4/ncl-6.6.2-fr/lib/ncarg/nclscripts/csm/contributed.ncl\"\n\nsetvalues NhlGetWorkspaceObjectId()\n\"wsMaximumSize\": 600000000\nend setvalues\n\nbegin\n\ndate = getenv(\"YYYYMMDD_POST\")\nd1 = getenv(\"stdate_post\")\nd2 = getenv(\"eddate_post\")\n\ndFile1 = getenv(\"stdate_file\")\ndFile2 = getenv(\"eddate_file\")\n\ncmaq_dir = getenv(\"cmaq_folder\")\n\n;print(\"Passed Date: \"+date)\n\n;aconc_dir = getenv(\"postdata_dir\")\ngrid_dir = getenv(\"mcip_dir\")\nplot_dir = getenv(\"dir_graph\")\n\nprint(cmaq_dir+\"/prediction_nc_files/COMBINE3D_ACONC_v531_gcc_AQF5X_\"+dFile1+\"_ML_extracted.nc\")\ncdf_file1 = addfile(cmaq_dir+\"/prediction_nc_files/COMBINE3D_ACONC_v531_gcc_AQF5X_\"+dFile1+\"_ML_extracted.nc\",\"r\")\ncdf_file= addfile(grid_dir+\"/GRIDCRO2D_\"+date+\".nc\",\"r\")\n\nptime = (/\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"00\",\"01\",\"02\",\"03\",\"04\",\"05\",\"06\",\"07\",\"08\",\"09\",\"10\",\"11\"/)\n\ntime = cdf_file1->TFLAG(:,0,:)\no3 = cdf_file1->O3(:,:,:) ;ppb\n;pm25 = cdf_file1->PM25_TOT(:,0,:,:)\n\n\nnt = dimsizes(o3(:,0,0))\nny = dimsizes(o3(0,:,0))\nnx = dimsizes(o3(0,0,:))\n\nprint(nt+\" \"+ny+\" \"+nx)\nprint(max(o3))\nprint(min(o3))\nprint(avg(o3))\n\n;print(max(pm25))\n;print(min(pm25))\n;print(avg(pm25))\n\n;print(time)\n\nlat = cdf_file->LAT(0,0,:,:)\nlon = cdf_file->LON(0,0,:,:)\n\no3@lat2d = lat\no3@lon2d = lon\n\nres = True\nres@gsnMaximize = True                ; maximize pot in frame\nres@gsnFrame = False               ; don't advance frame\nres@gsnDraw = False\n;res@gsnSpreadColors = True\nres@lbLabelAutoStride = True\n;res@lbBoxLinesOn = False\nres@pmLabelBarHeightF = 0.1\nres@pmLabelBarWidthF = 0.5\nres@cnFillOn=True\n;res@cnMonoFillPattern=True\n;res@cnMonoLineColor=True\nres@cnLinesOn=False\n;res@pmLabelBarDisplayMode=\"never\"\nres@gsnLeftString  = \"\";\nres@gsnRightString = \"\"\n\nres@mpLimitMode = \"LatLon\"\nres@mpMinLonF = -120 ;min(lon)+0.2\nres@mpMaxLonF = -70 ;max(lon)-0.2\nres@mpMinLatF = 25 ;min(lat)+0.05\nres@mpMaxLatF = 50 ;max(lat)-0.05\nres@mpDataBaseVersion = \"MediumRes\"\n;res@tiMainString = times(it)\nres@mpDataBaseVersion       = \"MediumRes\"\nres@mpDataSetName           = \"Earth..4\"\nres@mpAreaMaskingOn         = True\nres@mpOutlineBoundarySets = \"GeophysicalAndUSStates\"\nres@mpOutlineSpecifiers=\"United States : States\"\nres@mpLandFillColor         = \"white\"\nres@mpInlandWaterFillColor  = \"white\"\nres@mpOceanFillColor        = \"white\"\nres@mpGeophysicalLineColor    = \"Black\"\nres@mpGeophysicalLineThicknessF = 1.5\n\n;res@gsnSpreadColors         = True\nres@lbLabelAutoStride       = True\nres@lbLabelFont             = 25\nres@tiXAxisFont             = 25\nres@pmTickMarkDisplayMode   = \"Always\"\nres@tmXBLabelFont           = 25\nres@tmXBLabelFontHeightF    = 0.013\nres@tmXBLabelDeltaF         = -0.5\nres@tmYLLabelFont           = 25\nres@tmYLLabelFontHeightF    = 0.013\nres@tmXBLabelDeltaF         = -0.5\nres@tmXTLabelsOn            = False\nres@tmXTLabelFont           = 25\nres@tmXTLabelFontHeightF    = 0.013\nres@tmYRLabelsOn            = False\nres@tmYRLabelFont           = 25\nres@tmYRLabelFontHeightF    = 0.013\n\n\nres@mpProjection           = \"LambertConformal\" ;\"CylindricalEquidistant\"\nres@mpLambertParallel1F    = 33.\nres@mpLambertParallel2F    = 45.\nres@mpLambertMeridianF     = -98.\n\nres@cnLevelSelectionMode = \"ManualLevels\"\nres@cnMinLevelValF          = 0.\nres@cnMaxLevelValF          = 80\nres@cnLevelSpacingF         = 4\n\nres@txFont   = \"times-roman\"\nres@tiMainFont   = \"times-roman\"\n\ndo it = 0, nt-1\n  if (it .lt. 12) then\n    pdate=d1\n  else\n    pdate=d2\n  end if\n\n  pname=plot_dir+\"/testPlot_\"+pdate+\"_\"+ptime(it)\n  wks = gsn_open_wks(\"png\",pname)\n  gsn_define_colormap(wks, \"WhiteBlueGreenYellowRed\")\n\n  res@tiMainString = pdate+\" \"+ptime(it)+\" UTC O~B~3~N~ Forecast (ppbV)\"\n  plot = gsn_csm_contour_map(wks,o3(it,:,:),res)\n  draw(plot)\n  frame(wks)\n  delete(wks)\n  system(\"composite -geometry 100x70+900+900 /groups/ESS/zsun/cmaq/mason-logo-green.png \"+pname+\".png \"+pname+\".png\")\nend do\ndelete(res)\n\nend\nEOF\n\n\nncl $cmaq_folder/geoweaver_plot_daily_O3.ncl\n\n# convert -delay 100 *.png 20220613_20220614.gif\nconvert -delay 100 $cmaq_folder/plots/testPlot*.png $cmaq_folder/plots/\"Map_\"$YYYYMMDD_POST.gif\n\nif [ $? -eq 0 ]; then\n    echo \"Generating images/gif Completed Successfully\"\nelse\n    echo \"Generating images/gif Failed!\"\nfi\n",
  "history_output" : "mkdir: cannot create directory ‘/groups/ESS3/aalnaim/cmaq/plots’: File exists\nrm: cannot remove '/groups/ESS3/aalnaim/cmaq/plots/*': No such file or directory\n20221012\nrm: cannot remove '/groups/ESS3/aalnaim/cmaq/geoweaver_plot_daily_O3.ncl': No such file or directory\n Copyright (C) 1995-2019 - All Rights Reserved\n University Corporation for Atmospheric Research\n NCAR Command Language Version 6.6.2\n The use of this software is governed by a License Agreement.\n See http://www.ncl.ucar.edu/ for more details.\n(0)\t/groups/ESS3/aalnaim/cmaq/prediction_nc_files/COMBINE3D_ACONC_v531_gcc_AQF5X_20221012_ML_extracted.nc\n(0)\t24 265 442\n(0)\t88.8875\n(0)\t0.71\n(0)\t28.47824432442982\n",
  "history_begin_time" : 1665950192732,
  "history_end_time" : 1665950753623,
  "history_notes" : null,
  "history_process" : "iicy7w",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "xymvr8fxq01",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1665950753633,
  "history_notes" : null,
  "history_process" : "fsk7f2",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "em8ixxg151j",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1665950753638,
  "history_notes" : null,
  "history_process" : "is1w3m",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "oe2p0snmpe1",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665949242501,
  "history_end_time" : 1665950753644,
  "history_notes" : null,
  "history_process" : "h76ld0",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "ty8umouzauh",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665949242525,
  "history_end_time" : 1665950753646,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "7ie88bpy9vl",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665949242541,
  "history_end_time" : 1665950753652,
  "history_notes" : null,
  "history_process" : "pvzabv",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "06qbh2m0kga",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665949242631,
  "history_end_time" : 1665950753654,
  "history_notes" : null,
  "history_process" : "8i9ptn",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "dl16qme98f4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665949242662,
  "history_end_time" : 1665950753655,
  "history_notes" : null,
  "history_process" : "sgm1fk",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
}]
