[{
  "history_id" : "p7kpzfekkn2",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1667925180866,
  "history_end_time" : 1667925180866,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : "aqt8fv",
  "indicator" : "Skipped"
},{
  "history_id" : "b6s1q50gu6p",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1667892171426,
  "history_end_time" : 1667892171426,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : "aqt8fv",
  "indicator" : "Skipped"
},{
  "history_id" : "mggswdbxez0",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1666685317345,
  "history_end_time" : 1666685918696,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : "aqt8fv",
  "indicator" : "Stopped"
},{
  "history_id" : "51nbudaudx4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1666682218535,
  "history_end_time" : 1666683406506,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : "aqt8fv",
  "indicator" : "Stopped"
},{
  "history_id" : "27znt0vs1yq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1666681701646,
  "history_end_time" : 1666681701646,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : "aqt8fv",
  "indicator" : "Skipped"
},{
  "history_id" : "3yi9us4h7kw",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1666681684523,
  "history_end_time" : 1666681684523,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : "aqt8fv",
  "indicator" : "Skipped"
},{
  "history_id" : "fp1mv4la93a",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1666681592915,
  "history_end_time" : 1666681656093,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : "aqt8fv",
  "indicator" : "Stopped"
},{
  "history_id" : "gyya94x11w7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1666678879222,
  "history_end_time" : 1666678879222,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : "aqt8fv",
  "indicator" : "Skipped"
},{
  "history_id" : "qjcnkw9jiqp",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1666576238884,
  "history_end_time" : 1666577007698,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : "aqt8fv",
  "indicator" : "Stopped"
},{
  "history_id" : "lf2yf4729mw",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1666553421762,
  "history_end_time" : 1666553446660,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : "aqt8fv",
  "indicator" : "Stopped"
},{
  "history_id" : "kaagcfh78pn",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1666542247586,
  "history_end_time" : 1666553384747,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : "aqt8fv",
  "indicator" : "Stopped"
},{
  "history_id" : "hpv9l3pxkjl",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665934797986,
  "history_end_time" : 1665935665912,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : "aqt8fv",
  "indicator" : "Stopped"
},{
  "history_id" : "xh5g2z9c1jl",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665932107475,
  "history_end_time" : 1665934029303,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : "aqt8fv",
  "indicator" : "Stopped"
},{
  "history_id" : "d69a5lh6f6q",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665930832329,
  "history_end_time" : 1665930832329,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : "aqt8fv",
  "indicator" : "Skipped"
},{
  "history_id" : "4gjzwwq59eq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665930614473,
  "history_end_time" : 1665930705231,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : "aqt8fv",
  "indicator" : "Stopped"
},{
  "history_id" : "m7jna35r3bs",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665930050153,
  "history_end_time" : 1665930589646,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : "aqt8fv",
  "indicator" : "Stopped"
},{
  "history_id" : "ix3um6s1cro",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665928489334,
  "history_end_time" : 1665928489334,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : "aqt8fv",
  "indicator" : "Skipped"
},{
  "history_id" : "r9lis5s7bzz",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665926309117,
  "history_end_time" : 1665926309117,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : "aqt8fv",
  "indicator" : "Skipped"
},{
  "history_id" : "stc1zzimy71",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665007808730,
  "history_end_time" : 1665007808730,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : "aqt8fv",
  "indicator" : "Skipped"
},{
  "history_id" : "dwzalaqyt19",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1664983201639,
  "history_end_time" : 1665009008663,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : "aqt8fv",
  "indicator" : "Stopped"
},{
  "history_id" : "vxbeq6rfhje",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1664949775954,
  "history_end_time" : 1664949775954,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : "aqt8fv",
  "indicator" : "Skipped"
},{
  "history_id" : "dxoz5g6v6k3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1664505829301,
  "history_end_time" : 1664505829301,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : "aqt8fv",
  "indicator" : "Skipped"
},{
  "history_id" : "z7GQfDMAREag",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\ncolnames=[\"Latitude_x\",\"Longitude_x\",\"CMAQ12KM_O3(ppb)\",\"CMAQ12KM_NO2(ppb)\",\"CMAQ12KM_CO(ppm)\",\"CMAQ_OC(ug/m3)\",\"PRSFC(Pa)\",\"PBL(m)\",\"TEMP2(K)\",\"WSPD10(m/s)\",\"WDIR10(degree)\",\"RGRND(W/m2)\",\"CFRAC\",\"month\",\"day\",\"hours\",\"Lat_airnow\",\"Lon_airnow\",\"Lat_cmaq\",\"Lon_cmaq\",\"StationID\",\"Latitude_y\",\"Longitude_y\",\"AirNOW_O3\"] \nfinal=pd.read_csv(f'{cmaq_folder}/training_one_year.csv', names=colnames, header=None)\nprint(final.head())\nfinal=final.dropna()\n#print(\"shape before: \", final.shape)\n#final = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']<0.05]\n#print(\"shape 1 after: \", final.shape)\n#final = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']>-0.05]\n#print(\"shape 2 after: \", final.shape)\n\nfinal['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\n#final['Latitude_ExtraCoarse'] = 0.1 * round(final['Latitude_x']/0.1)\n#final['Longitude_ExtraCoarse'] = 0.1 * round(final['Longitude_x']/0.1)\n\n\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x','Lat_airnow','Lon_airnow', 'Lat_cmaq', 'Lon_cmaq', 'Latitude_y', 'Longitude_y', 'StationID'],axis=1)\nprint(\"input shape:\", X.shape)\nprint(\"input variables: \", X.columns)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_one_year_1.5g.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\nprint(f\"Model is trained and saved to {filename}\")",
  "history_output" : "train_cmaq_directly_no_slurm.py:14: DtypeWarning: Columns (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23) have mixed types. Specify dtype option on import or set low_memory=False.\n  final=pd.read_csv(f'{cmaq_folder}/training_one_year.csv', names=colnames, header=None)\n  Latitude_x Longitude_x CMAQ12KM_O3(ppb)  ... Latitude_y Longitude_y AirNOW_O3\n0  StationID  Latitude_x      Longitude_x  ...      month         day     hours\n1  120350004   29.489082       -81.276833  ...         08          01        12\n2  360850111     40.5802       -74.199402  ...         08          01        12\n3  390610040    39.12886       -84.504044  ...         08          01        12\n4  390990013   41.096157       -80.658905  ...         08          01        12\n\n[5 rows x 24 columns]\nTraceback (most recent call last):\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/ops/array_ops.py\", line 163, in _na_arithmetic_op\n    result = func(left, right)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/computation/expressions.py\", line 240, in evaluate\n    return _evaluate_standard(op, op_str, a, b)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/computation/expressions.py\", line 69, in _evaluate_standard\n    return op(a, b)\nTypeError: not all arguments converted during string formatting\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"train_cmaq_directly_no_slurm.py\", line 23, in <module>\n    final['time_of_day'] = (final['hours'] % 24 + 4) // 4\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/ops/common.py\", line 70, in new_method\n    return method(self, other)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/arraylike.py\", line 140, in __mod__\n    return self._arith_method(other, operator.mod)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/series.py\", line 5639, in _arith_method\n    return base.IndexOpsMixin._arith_method(self, other, op)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/base.py\", line 1295, in _arith_method\n    result = ops.arithmetic_op(lvalues, rvalues, op)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/ops/array_ops.py\", line 222, in arithmetic_op\n    res_values = _na_arithmetic_op(left, right, op)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/ops/array_ops.py\", line 170, in _na_arithmetic_op\n    result = _masked_arith_op(left, right, op)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/ops/array_ops.py\", line 127, in _masked_arith_op\n    result[mask] = op(xrav[mask], y)\nTypeError: not all arguments converted during string formatting\n",
  "history_begin_time" : 1664469200375,
  "history_end_time" : 1664469387494,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "U78OgZW0Eqkz",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\ncolnames=[\"Latitude_x\",\"Longitude_x\",\"CMAQ12KM_O3(ppb)\",\"CMAQ12KM_NO2(ppb)\",\"CMAQ12KM_CO(ppm)\",\"CMAQ_OC(ug/m3)\",\"PRSFC(Pa)\",\"PBL(m)\",\"TEMP2(K)\",\"WSPD10(m/s)\",\"WDIR10(degree)\",\"RGRND(W/m2)\",\"CFRAC\",\"month\",\"day\",\"hours\",\"Lat_airnow\",\"Lon_airnow\",\"Lat_cmaq\",\"Lon_cmaq\",\"StationID\",\"Latitude_y\",\"Longitude_y\",\"AirNOW_O3\"] \nfinal=pd.read_csv(f'{cmaq_folder}/training_new_one_year.csv', names=colnames, header=None)\nprint(final.head())\nfinal=final.dropna()\n#print(\"shape before: \", final.shape)\n#final = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']<0.05]\n#print(\"shape 1 after: \", final.shape)\n#final = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']>-0.05]\n#print(\"shape 2 after: \", final.shape)\n\nfinal['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\n#final['Latitude_ExtraCoarse'] = 0.1 * round(final['Latitude_x']/0.1)\n#final['Longitude_ExtraCoarse'] = 0.1 * round(final['Longitude_x']/0.1)\n\n\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x','Lat_airnow','Lon_airnow', 'Lat_cmaq', 'Lon_cmaq', 'Latitude_y', 'Longitude_y', 'StationID'],axis=1)\nprint(\"input shape:\", X.shape)\nprint(\"input variables: \", X.columns)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_one_year_1.5g.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\nprint(f\"Model is trained and saved to {filename}\")",
  "history_output" : "Traceback (most recent call last):\n  File \"train_cmaq_directly_no_slurm.py\", line 14, in <module>\n    final=pd.read_csv(f'{cmaq_folder}/training_new_one_year.csv', names=colnames, header=None)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/util/_decorators.py\", line 311, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/io/parsers/readers.py\", line 680, in read_csv\n    return _read(filepath_or_buffer, kwds)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/io/parsers/readers.py\", line 575, in _read\n    parser = TextFileReader(filepath_or_buffer, **kwds)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/io/parsers/readers.py\", line 933, in __init__\n    self._engine = self._make_engine(f, self.engine)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/io/parsers/readers.py\", line 1217, in _make_engine\n    self.handles = get_handle(  # type: ignore[call-overload]\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/io/common.py\", line 789, in get_handle\n    handle = open(\nFileNotFoundError: [Errno 2] No such file or directory: '/groups/ESS/zsun/cmaq//training_new_one_year.csv'\n",
  "history_begin_time" : 1664459407831,
  "history_end_time" : 1664459470738,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "lrl3i3tsjl9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1664428239280,
  "history_end_time" : 1664428239280,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : "aqt8fv",
  "indicator" : "Skipped"
},{
  "history_id" : "4qpncxalap1",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1664427014370,
  "history_end_time" : 1664427014370,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : "aqt8fv",
  "indicator" : "Skipped"
},{
  "history_id" : "xi67lto3k25",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1664426709417,
  "history_end_time" : 1664426992856,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : "aqt8fv",
  "indicator" : "Stopped"
},{
  "history_id" : "hrhYXzd8wkfa",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\ncolnames=[\"Latitude_x\",\"Longitude_x\",\"CMAQ12KM_O3(ppb)\",\"CMAQ12KM_NO2(ppb)\",\"CMAQ12KM_CO(ppm)\",\"CMAQ_OC(ug/m3)\",\"PRSFC(Pa)\",\"PBL(m)\",\"TEMP2(K)\",\"WSPD10(m/s)\",\"WDIR10(degree)\",\"RGRND(W/m2)\",\"CFRAC\",\"month\",\"day\",\"hours\",\"Lat_airnow\",\"Lon_airnow\",\"Lat_cmaq\",\"Lon_cmaq\",\"StationID\",\"Latitude_y\",\"Longitude_y\",\"AirNOW_O3\"] \nfinal=pd.read_csv(f'{cmaq_folder}/training_new_one_year_valid.csv', names=colnames, header=None)\nprint(final.head())\nfinal=final.dropna()\n#print(\"shape before: \", final.shape)\n#final = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']<0.05]\n#print(\"shape 1 after: \", final.shape)\n#final = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']>-0.05]\n#print(\"shape 2 after: \", final.shape)\n\nfinal['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\n#final['Latitude_ExtraCoarse'] = 0.1 * round(final['Latitude_x']/0.1)\n#final['Longitude_ExtraCoarse'] = 0.1 * round(final['Longitude_x']/0.1)\n\n\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x','Lat_airnow','Lon_airnow', 'Lat_cmaq', 'Lon_cmaq', 'Latitude_y', 'Longitude_y', 'StationID'],axis=1)\nprint(\"input shape:\", X.shape)\nprint(\"input variables: \", X.columns)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_one_year.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\nprint(f\"Model is trained and saved to {filename}\")",
  "history_output" : "   Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n0   26.157295    -97.76709  ...   -97.712502        8.0\n1   26.258575    -98.24072  ...   -98.291069       10.0\n2   25.628311    -80.31506  ...   -80.326897        7.0\n3   25.712883    -80.17825  ...   -80.162201       19.0\n4   26.285812    -81.73959  ...   -81.720001       18.0\n\n[5 rows x 24 columns]\ninput shape: (23754, 15)\ninput variables:  Index(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)',\n       'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours',\n       'time_of_day'],\n      dtype='object')\n/home/zsun/.local/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\nModel is trained and saved to /groups/ESS/zsun/cmaq//models/rf_pycaret_o3_one_year.sav\n",
  "history_begin_time" : 1664135426643,
  "history_end_time" : 1664135486022,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "OrRb4hpXJ5fI",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\ncolnames=[\"Latitude_x\",\"Longitude_x\",\"CMAQ12KM_O3(ppb)\",\"CMAQ12KM_NO2(ppb)\",\"CMAQ12KM_CO(ppm)\",\"CMAQ_OC(ug/m3)\",\"PRSFC(Pa)\",\"PBL(m)\",\"TEMP2(K)\",\"WSPD10(m/s)\",\"WDIR10(degree)\",\"RGRND(W/m2)\",\"CFRAC\",\"month\",\"day\",\"hours\",\"Lat_airnow\",\"Lon_airnow\",\"Lat_cmaq\",\"Lon_cmaq\",\"StationID\",\"Latitude_y\",\"Longitude_y\",\"AirNOW_O3\"] \nfinal=pd.read_csv(f'{cmaq_folder}/training_new_one_year_valid.csv', names=colnames, header=None)\nprint(final.head())\nfinal=final.dropna()\n#print(\"shape before: \", final.shape)\n#final = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']<0.05]\n#print(\"shape 1 after: \", final.shape)\n#final = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']>-0.05]\n#print(\"shape 2 after: \", final.shape)\n\nfinal['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\n#final['Latitude_ExtraCoarse'] = 0.1 * round(final['Latitude_x']/0.1)\n#final['Longitude_ExtraCoarse'] = 0.1 * round(final['Longitude_x']/0.1)\n\n\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x','Lat_airnow','Lon_airnow', 'Lat_cmaq', 'Lon_cmaq', 'Latitude_y', 'Longitude_y', 'StationID'],axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_one_year.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\nprint(f\"Model is trained and saved to {filename}\")",
  "history_output" : "   Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n0   26.157295    -97.76709  ...   -97.712502        8.0\n1   26.258575    -98.24072  ...   -98.291069       10.0\n2   25.628311    -80.31506  ...   -80.326897        7.0\n3   25.712883    -80.17825  ...   -80.162201       19.0\n4   26.285812    -81.73959  ...   -81.720001       18.0\n\n[5 rows x 24 columns]\ninput shape: (23754, 15)\n/home/zsun/.local/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\nModel is trained and saved to /groups/ESS/zsun/cmaq//models/rf_pycaret_o3_one_year.sav\n",
  "history_begin_time" : 1664135055075,
  "history_end_time" : 1664135115343,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "uRkviHiJgUxi",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\ncolnames=[\"Latitude_x\",\"Longitude_x\",\"CMAQ12KM_O3(ppb)\",\"CMAQ12KM_NO2(ppb)\",\"CMAQ12KM_CO(ppm)\",\"CMAQ_OC(ug/m3)\",\"PRSFC(Pa)\",\"PBL(m)\",\"TEMP2(K)\",\"WSPD10(m/s)\",\"WDIR10(degree)\",\"RGRND(W/m2)\",\"CFRAC\",\"month\",\"day\",\"hours\",\"Lat_airnow\",\"Lon_airnow\",\"Lat_cmaq\",\"Lon_cmaq\",\"StationID\",\"Latitude_y\",\"Longitude_y\",\"AirNOW_O3\"] \nfinal=pd.read_csv(f'{cmaq_folder}/training_new_one_year_valid.csv', names=colnames, header=None)\nprint(final.head())\nfinal=final.dropna()\n#print(\"shape before: \", final.shape)\n#final = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']<0.05]\n#print(\"shape 1 after: \", final.shape)\n#final = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']>-0.05]\n#print(\"shape 2 after: \", final.shape)\n\nfinal['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\n#final['Latitude_ExtraCoarse'] = 0.1 * round(final['Latitude_x']/0.1)\n#final['Longitude_ExtraCoarse'] = 0.1 * round(final['Longitude_x']/0.1)\n\n\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x','Lat_airnow','Lon_airnow', 'Lat_cmaq', 'Lon_cmaq', 'Latitude_y', 'Longitude_y', 'StationID'],axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_one_year.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "   Latitude_x  Longitude_x  ...  Longitude_y  AirNOW_O3\n0   26.157295    -97.76709  ...   -97.712502        8.0\n1   26.258575    -98.24072  ...   -98.291069       10.0\n2   25.628311    -80.31506  ...   -80.326897        7.0\n3   25.712883    -80.17825  ...   -80.162201       19.0\n4   26.285812    -81.73959  ...   -81.720001       18.0\n\n[5 rows x 24 columns]\ninput shape: (23754, 15)\n/home/zsun/.local/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1664134911264,
  "history_end_time" : 1664134972599,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "XhJIpKIsdrfR",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\ncolnames=[\"Latitude_x\",\"Longitude_x\",\"CMAQ12KM_O3(ppb)\",\"CMAQ12KM_NO2(ppb)\",\"CMAQ12KM_CO(ppm)\",\"CMAQ_OC(ug/m3)\",\"PRSFC(Pa)\",\"PBL(m)\",\"TEMP2(K)\",\"WSPD10(m/s)\",\"WDIR10(degree)\",\"RGRND(W/m2)\",\"CFRAC\",\"month\",\"day\",\"hours\",\"Lat_airnow\",\"Lon_airnow\",\"Lat_cmaq\",\"Lon_cmaq\",\"StationID\",\"Latitude_y\",\"Longitude_y\",\"AirNOW_O3\"] \nfinal=pd.read_csv(f'{cmaq_folder}/training_one_year.csv', names=colnames, header=None)\nprint(final.head())\nfinal=final.dropna()\n#print(\"shape before: \", final.shape)\n#final = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']<0.05]\n#print(\"shape 1 after: \", final.shape)\n#final = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']>-0.05]\n#print(\"shape 2 after: \", final.shape)\n\nfinal['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\n#final['Latitude_ExtraCoarse'] = 0.1 * round(final['Latitude_x']/0.1)\n#final['Longitude_ExtraCoarse'] = 0.1 * round(final['Longitude_x']/0.1)\n\n\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x','Lat_airnow','Lon_airnow', 'Lat_cmaq', 'Lon_cmaq', 'Latitude_y', 'Longitude_y', 'StationID'],axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_one_year.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "",
  "history_begin_time" : 1664134890098,
  "history_end_time" : 1664134911288,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "4BbMey4fCWQc",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training_one_year.csv')\nprint(final.head())\nfinal=final.dropna()\n#print(\"shape before: \", final.shape)\n#final = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']<0.05]\n#print(\"shape 1 after: \", final.shape)\n#final = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']>-0.05]\n#print(\"shape 2 after: \", final.shape)\n\nfinal['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\n#final['Latitude_ExtraCoarse'] = 0.1 * round(final['Latitude_x']/0.1)\n#final['Longitude_ExtraCoarse'] = 0.1 * round(final['Longitude_x']/0.1)\n\n\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x','Lat_airnow','Lon_airnow', 'Lat_cmaq', 'Lon_cmaq', 'Latitude_y', 'Longitude_y', 'StationID'],axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_one_year.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "      StationID  Latitude_x  Longitude_x  AirNOW_O3  ...  CFRAC  month  day  hours\n0     120350004   29.489082   -81.276833       15.0  ...    NaN      8    1     12\n1     360850111   40.580200   -74.199402       27.0  ...    NaN      8    1     12\n2     390610040   39.128860   -84.504044       29.0  ...    NaN      8    1     12\n3     390990013   41.096157   -80.658905       29.0  ...    NaN      8    1     12\n4  840450070006   34.635960   -82.810669       23.0  ...    NaN      8    1     12\n\n[5 rows x 24 columns]\ninput shape: (9286860, 15)\n/home/zsun/.local/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1664117982826,
  "history_end_time" : 1664118553819,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "Zdji9R8nYoqL",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training_one_year.csv')\nprint(final.head())\nfinal=final.dropna()\n#print(\"shape before: \", final.shape)\n#final = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']<0.05]\n#print(\"shape 1 after: \", final.shape)\n#final = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']>-0.05]\n#print(\"shape 2 after: \", final.shape)\n\nfinal['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\n#final['Latitude_ExtraCoarse'] = 0.1 * round(final['Latitude_x']/0.1)\n#final['Longitude_ExtraCoarse'] = 0.1 * round(final['Longitude_x']/0.1)\n\n\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x','Lat_airnow','Lon_airnow', 'Lat_cmaq', 'Lon_cmaq', 'Latitude_y', 'Longitude_y', 'StationID'],axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_one_year.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : null,
  "history_begin_time" : 1664117964828,
  "history_end_time" : null,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : null
},{
  "history_id" : "488WcF8R6hPQ",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training_one_year.csv')\nprint(final.head())\nfinal=final.dropna()\n#print(\"shape before: \", final.shape)\n#final = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']<0.05]\n#print(\"shape 1 after: \", final.shape)\n#final = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']>-0.05]\n#print(\"shape 2 after: \", final.shape)\n\nfinal['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\n#final['Latitude_ExtraCoarse'] = 0.1 * round(final['Latitude_x']/0.1)\n#final['Longitude_ExtraCoarse'] = 0.1 * round(final['Longitude_x']/0.1)\n\n\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x','Lat_airnow','Lon_airnow', 'Lat_cmaq', 'Lon_cmaq', 'Latitude_y', 'Longitude_y', 'StationID'],axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_new_matched.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "",
  "history_begin_time" : 1664117937511,
  "history_end_time" : 1664117964863,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "1pM0QJAcQ7Zq",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/trainingNew.csv')\nprint(final.head())\nfinal=final.dropna()\n#print(\"shape before: \", final.shape)\n#final = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']<0.05]\n#print(\"shape 1 after: \", final.shape)\n#final = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']>-0.05]\n#print(\"shape 2 after: \", final.shape)\n\nfinal['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\n#final['Latitude_ExtraCoarse'] = 0.1 * round(final['Latitude_x']/0.1)\n#final['Longitude_ExtraCoarse'] = 0.1 * round(final['Longitude_x']/0.1)\n\n\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x','Lat_airnow','Lon_airnow', 'Lat_cmaq', 'Lon_cmaq', 'Latitude_y', 'Longitude_y', 'StationID'],axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_new_matched.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "   StationID  Latitude_x  Longitude_x  AirNOW_O3  ...  CFRAC  month  day  hours\n0  060290008   35.054401  -119.403900       19.0  ...    0.0      8    1     12\n1  090011123   41.401402   -73.444702       29.0  ...    1.0      8    1     12\n2  120118002   26.086399   -80.111397       12.0  ...    0.0      8    1     12\n3  340250005   40.277645   -74.005096       33.0  ...    1.0      8    1     12\n4  320312002   39.250439  -119.956741       38.0  ...    1.0      8    1     12\n\n[5 rows x 25 columns]\ninput shape: (58682, 16)\n/home/zsun/.local/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1663784316006,
  "history_end_time" : 1663784377650,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "J2l0QDRb5p9C",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/trainingNew.csv')\nprint(final.head())\nfinal=final.dropna()\n#print(\"shape before: \", final.shape)\n#final = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']<0.05]\n#print(\"shape 1 after: \", final.shape)\n#final = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']>-0.05]\n#print(\"shape 2 after: \", final.shape)\n\nfinal['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\n#final['Latitude_ExtraCoarse'] = 0.1 * round(final['Latitude_x']/0.1)\n#final['Longitude_ExtraCoarse'] = 0.1 * round(final['Longitude_x']/0.1)\n\n\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x','Lat_airnow','Lon_airnow', 'Lat_cmaq', 'Lon_cmaq', 'Latitude_y', 'Longitude_y'],axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_new_matched.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "   StationID  Latitude_x  Longitude_x  AirNOW_O3  ...  CFRAC  month  day  hours\n0  060290008   35.054401  -119.403900       19.0  ...    0.0      8    1     12\n1  090011123   41.401402   -73.444702       29.0  ...    1.0      8    1     12\n2  120118002   26.086399   -80.111397       12.0  ...    0.0      8    1     12\n3  340250005   40.277645   -74.005096       33.0  ...    1.0      8    1     12\n4  320312002   39.250439  -119.956741       38.0  ...    1.0      8    1     12\n\n[5 rows x 25 columns]\ninput shape: (58682, 17)\nTraceback (most recent call last):\n  File \"train_cmaq_directly_no_slurm.py\", line 46, in <module>\n    rf.fit(X, y)\n  File \"/home/zsun/.local/lib/python3.8/site-packages/sklearn/ensemble/_forest.py\", line 327, in fit\n    X, y = self._validate_data(\n  File \"/home/zsun/.local/lib/python3.8/site-packages/sklearn/base.py\", line 581, in _validate_data\n    X, y = check_X_y(X, y, **check_params)\n  File \"/home/zsun/.local/lib/python3.8/site-packages/sklearn/utils/validation.py\", line 964, in check_X_y\n    X = check_array(\n  File \"/home/zsun/.local/lib/python3.8/site-packages/sklearn/utils/validation.py\", line 746, in check_array\n    array = np.asarray(array, order=order, dtype=dtype)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/generic.py\", line 2072, in __array__\n    return np.asarray(self._values, dtype=dtype)\nValueError: could not convert string to float: 'CC0090228'\n",
  "history_begin_time" : 1663784208796,
  "history_end_time" : 1663784268623,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "zBA4WRYcB7tr",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal=final.dropna()\n#print(\"shape before: \", final.shape)\n#final = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']<0.05]\n#print(\"shape 1 after: \", final.shape)\n#final = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']>-0.05]\n#print(\"shape 2 after: \", final.shape)\n\nfinal['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\n#final['Latitude_ExtraCoarse'] = 0.1 * round(final['Latitude_x']/0.1)\n#final['Longitude_ExtraCoarse'] = 0.1 * round(final['Longitude_x']/0.1)\n\n\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x','Lat_airnow','Lon_airnow', 'Lat_cmaq', 'Lon_cmaq', 'Latitude_y', 'Longitude_y'],axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_new_matched.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "   Latitude_x  Longitude_x  AirNOW_O3  ...  month  day  hours\n0   35.054401  -119.403900       19.0  ...      8    1     12\n1   41.401402   -73.444702       29.0  ...      8    1     12\n2   26.086399   -80.111397       12.0  ...      8    1     12\n3   40.277645   -74.005096       33.0  ...      8    1     12\n4   39.250439  -119.956741       38.0  ...      8    1     12\n\n[5 rows x 18 columns]\nTraceback (most recent call last):\n  File \"train_cmaq_directly_no_slurm.py\", line 34, in <module>\n    X = final.drop(['AirNOW_O3','Latitude_x','Longitude_x','Lat_airnow','Lon_airnow', 'Lat_cmaq', 'Lon_cmaq', 'Latitude_y', 'Longitude_y'],axis=1)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/util/_decorators.py\", line 311, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/frame.py\", line 4948, in drop\n    return super().drop(\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/generic.py\", line 4279, in drop\n    obj = obj._drop_axis(labels, axis, level=level, errors=errors)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/generic.py\", line 4323, in _drop_axis\n    new_axis = axis.drop(labels, errors=errors)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/indexes/base.py\", line 6644, in drop\n    raise KeyError(f\"{list(labels[mask])} not found in axis\")\nKeyError: \"['Lat_airnow', 'Lon_airnow', 'Lat_cmaq', 'Lon_cmaq', 'Latitude_y', 'Longitude_y'] not found in axis\"\n",
  "history_begin_time" : 1663784058030,
  "history_end_time" : 1663784118617,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "egpw3ac9j31",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal=final.dropna()\n#print(\"shape before: \", final.shape)\n#final = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']<0.05]\n#print(\"shape 1 after: \", final.shape)\n#final = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']>-0.05]\n#print(\"shape 2 after: \", final.shape)\n\nfinal['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\nfinal['Latitude_ExtraCoarse'] = 0.1 * round(final['Latitude_x']/0.1)\nfinal['Longitude_ExtraCoarse'] = 0.1 * round(final['Longitude_x']/0.1)\n\n\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x','CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'],axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_coarse_loc.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "Traceback (most recent call last):\n  File \"/Users/joe/gw-workspace/egpw3ac9j31/train_cmaq_directly_no_slurm.py\", line 13, in <module>\n    final=pd.read_csv(f'{cmaq_folder}/training.csv')\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/util/_decorators.py\", line 311, in wrapper\n    return func(*args, **kwargs)\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/readers.py\", line 586, in read_csv\n    return _read(filepath_or_buffer, kwds)\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/readers.py\", line 482, in _read\n    parser = TextFileReader(filepath_or_buffer, **kwds)\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/readers.py\", line 811, in __init__\n    self._engine = self._make_engine(self.engine)\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/readers.py\", line 1040, in _make_engine\n    return mapping[engine](self.f, **self.options)  # type: ignore[call-arg]\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/c_parser_wrapper.py\", line 51, in __init__\n    self._open_handles(src, kwds)\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/base_parser.py\", line 222, in _open_handles\n    self.handles = get_handle(\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/io/common.py\", line 702, in get_handle\n    handle = open(\nFileNotFoundError: [Errno 2] No such file or directory: '/groups/ESS/zsun/cmaq//training.csv'\n",
  "history_begin_time" : 1663783481770,
  "history_end_time" : 1663783484269,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "v9KLU67GVmTh",
  "history_input" : "# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal=final.dropna()\n#print(\"shape before: \", final.shape)\n#final = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']<0.05]\n#print(\"shape 1 after: \", final.shape)\n#final = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']>-0.05]\n#print(\"shape 2 after: \", final.shape)\n\nfinal['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\nfinal['Latitude_ExtraCoarse'] = 0.1 * round(final['Latitude_x']/0.1)\nfinal['Longitude_ExtraCoarse'] = 0.1 * round(final['Longitude_x']/0.1)\n\n\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x','CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'],axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_coarse_loc.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "   Latitude_x  Longitude_x  AirNOW_O3  ...  month  day  hours\n0   35.054401  -119.403900       19.0  ...      8    1     12\n1   41.401402   -73.444702       29.0  ...      8    1     12\n2   26.086399   -80.111397       12.0  ...      8    1     12\n3   40.277645   -74.005096       33.0  ...      8    1     12\n4   39.250439  -119.956741       38.0  ...      8    1     12\n\n[5 rows x 18 columns]\ninput shape: (55351, 4)\n/home/zsun/.local/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1662137578088,
  "history_end_time" : 1662137646854,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "OdDvAsx9RtTs",
  "history_input" : "# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal=final.dropna()\n#print(\"shape before: \", final.shape)\n#final = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']<0.05]\n#print(\"shape 1 after: \", final.shape)\n#final = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']>-0.05]\n#print(\"shape 2 after: \", final.shape)\n\nfinal['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\nfinal['Latitude_ExtraCoarse'] = 0.1 * round(final['Latitude_x']/0.1)\nfinal['Longitude_ExtraCoarse'] = 0.1 * round(final['Longitude_x']/0.1)\n\n\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x','CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'],axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_coarse_loc.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "   Latitude_x  Longitude_x  AirNOW_O3  ...  month  day  hours\n0   35.054401  -119.403900       19.0  ...      8    1     12\n1   41.401402   -73.444702       29.0  ...      8    1     12\n2   26.086399   -80.111397       12.0  ...      8    1     12\n3   40.277645   -74.005096       33.0  ...      8    1     12\n4   39.250439  -119.956741       38.0  ...      8    1     12\n\n[5 rows x 18 columns]\ninput shape: (55351, 4)\n/home/zsun/.local/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1662134160777,
  "history_end_time" : 1662134228715,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "x42B3rnUQlVI",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal=final.dropna()\n#print(\"shape before: \", final.shape)\n#final = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']<0.05]\n#print(\"shape 1 after: \", final.shape)\n#final = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']>-0.05]\n#print(\"shape 2 after: \", final.shape)\n\nfinal['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\nfinal['Latitude_ExtraCoarse'] = 0.1 * round(final['Latitude_x']/0.1)\nfinal['Longitude_ExtraCoarse'] = 0.1 * round(final['Longitude_x']/0.1)\n\n\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x','CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'],axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_coarse_loc.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "   Latitude_x  Longitude_x  AirNOW_O3  ...  month  day  hours\n0   35.054401  -119.403900       19.0  ...      8    1     12\n1   41.401402   -73.444702       29.0  ...      8    1     12\n2   26.086399   -80.111397       12.0  ...      8    1     12\n3   40.277645   -74.005096       33.0  ...      8    1     12\n4   39.250439  -119.956741       38.0  ...      8    1     12\n\n[5 rows x 18 columns]\ninput shape: (55351, 4)\n/home/zsun/.local/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1661735172134,
  "history_end_time" : 1661735232411,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "VCxFdDHqQ4hv",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal=final.dropna()\n#print(\"shape before: \", final.shape)\n#final = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']<0.05]\n#print(\"shape 1 after: \", final.shape)\n#final = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']>-0.05]\n#print(\"shape 2 after: \", final.shape)\n\nfinal['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\nfinal['Latitude_ExtraCoarse'] = 0.1 * round(final['Latitude_x']/0.1)\nfinal['Longitude_ExtraCoarse'] = 0.1 * round(final['Longitude_x']/0.1)\n\n\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x','CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'],axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "   Latitude_x  Longitude_x  AirNOW_O3  ...  month  day  hours\n0   35.054401  -119.403900       19.0  ...      8    1     12\n1   41.401402   -73.444702       29.0  ...      8    1     12\n2   26.086399   -80.111397       12.0  ...      8    1     12\n3   40.277645   -74.005096       33.0  ...      8    1     12\n4   39.250439  -119.956741       38.0  ...      8    1     12\n\n[5 rows x 18 columns]\ninput shape: (55351, 4)\n/home/zsun/.local/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1661735016771,
  "history_end_time" : 1661735079567,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "DEyKbiKpVWBv",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal=final.dropna()\n#print(\"shape before: \", final.shape)\n#final = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']<0.05]\n#print(\"shape 1 after: \", final.shape)\n#final = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']>-0.05]\n#print(\"shape 2 after: \", final.shape)\n\nfinal['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\nfinal['Latitude_ExtraCoarse'] = 0.1 * round(final['Latitude_x']/0.1)\nfinal['Longitude_ExtraCoarse'] = 0.1 * round(final['Longitude_x']/0.1)\n\n\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x','CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'],axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "   Latitude_x  Longitude_x  AirNOW_O3  ...  month  day  hours\n0   35.054401  -119.403900       19.0  ...      8    1     12\n1   41.401402   -73.444702       29.0  ...      8    1     12\n2   26.086399   -80.111397       12.0  ...      8    1     12\n3   40.277645   -74.005096       33.0  ...      8    1     12\n4   39.250439  -119.956741       38.0  ...      8    1     12\n\n[5 rows x 18 columns]\ninput shape: (55351, 4)\n/home/zsun/.local/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1661326192222,
  "history_end_time" : 1661326810801,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "yqInYycxDEct",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal=final.dropna()\n#print(\"shape before: \", final.shape)\n#final = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']<0.05]\n#print(\"shape 1 after: \", final.shape)\n#final = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']>-0.05]\n#print(\"shape 2 after: \", final.shape)\n\nfinal['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\nfinal['Latitude_ExtraCoarse'] = 0.1 * round(final['Latitude_x']/0.1)\nfinal['Longitude_ExtraCoarse'] = 0.1 * round(final['Longitude_x']/0.1)\n\n\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x','CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'],axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "Running",
  "history_begin_time" : 1661325766444,
  "history_end_time" : 1661735031349,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "NOhqs33TrJYc",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal=final.dropna()\n#print(\"shape before: \", final.shape)\n#final = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']<0.05]\n#print(\"shape 1 after: \", final.shape)\n#final = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']>-0.05]\n#print(\"shape 2 after: \", final.shape)\n\nfinal['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\nfinal['Latitude_ExtraCoarse'] = 0.1 * round(final['Latitude']/0.1)\nfinal['Longitude_ExtraCoarse'] = 0.1 * round(final['Longitude']/0.1)\n\n\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x','CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'],axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "   Latitude_x  Longitude_x  AirNOW_O3  ...  month  day  hours\n0   35.054401  -119.403900       19.0  ...      8    1     12\n1   41.401402   -73.444702       29.0  ...      8    1     12\n2   26.086399   -80.111397       12.0  ...      8    1     12\n3   40.277645   -74.005096       33.0  ...      8    1     12\n4   39.250439  -119.956741       38.0  ...      8    1     12\n\n[5 rows x 18 columns]\nTraceback (most recent call last):\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/indexes/base.py\", line 3621, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"pandas/_libs/index.pyx\", line 136, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/index.pyx\", line 163, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'Latitude'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"train_cmaq_directly_no_slurm.py\", line 26, in <module>\n    final['Latitude_ExtraCoarse'] = 0.1 * round(final['Latitude']/0.1)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/frame.py\", line 3505, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/core/indexes/base.py\", line 3623, in get_loc\n    raise KeyError(key) from err\nKeyError: 'Latitude'\n",
  "history_begin_time" : 1661324987697,
  "history_end_time" : 1661326058676,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "I4IV9ypQyor9",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal=final.dropna()\n#print(\"shape before: \", final.shape)\n#final = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']<0.05]\n#print(\"shape 1 after: \", final.shape)\n#final = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']>-0.05]\n#print(\"shape 2 after: \", final.shape)\n\nfinal['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\nfinal['Latitude_ExtraCoarse'] = 0.1 * round(final['Latitude']/0.1)\nfinal['Longitude_ExtraCoarse'] = 0.1 * round(final['Longitude']/0.1)\n\n\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x','CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'],axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "    Latitude   Longitude  AirNOW_O3  CMAQ12KM_O3(ppb)  ...  CFRAC  month  day  hours\n0  44.232498  -79.781403       43.0              35.0  ...    1.0      7    1     12\n1  32.205002 -110.877197       35.0              15.0  ...    0.0      7    1     12\n2  35.438557  -81.276749       21.0              19.0  ...    0.0      7    1     12\n3  41.644066  -83.546249       50.0              27.0  ...    0.0      7    1     12\n4  46.205601  -93.758904       25.0              18.0  ...    0.0      7    1     12\n\n[5 rows x 18 columns]\nTraceback (most recent call last):\n  File \"train_cmaq_directly_no_slurm.py\", line 31, in <module>\n    create_and_clean_folder(f\"{cmaq_folder}/models/\")\n  File \"/home/zsun/gw-workspace/I4IV9ypQyor9/cmaq_ai_utils.py\", line 37, in create_and_clean_folder\n    os.remove(os.path.join(folder_path, f))\nPermissionError: [Errno 13] Permission denied: '/groups/ESS/aalnaim/cmaq//models/rf_pycaret_o3_only.sav'\n",
  "history_begin_time" : 1661265880909,
  "history_end_time" : 1661326058129,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "8cBcWygs6QR7",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal=final.dropna()\n\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x','CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'],axis=1)\nprint(\"input shape:\", X.shape)\nprint(\"Columns used as inputs: \", X.columns)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "   Latitude_x  Longitude_x  AirNOW_O3  ...  month  day  hours\n0   30.260300   -81.453300       14.0  ...      8    5     12\n1   42.770802   -71.102798       40.0  ...      8    5     12\n2   34.528599   -86.970596        8.0  ...      8    5     12\n3   42.194401   -72.555603       23.0  ...      8    5     12\n4   34.751801   -82.256699        8.0  ...      8    5     12\n\n[5 rows x 18 columns]\ninput shape: (55900, 1)\nColumns used as inputs:  Index(['CMAQ12KM_O3(ppb)'], dtype='object')\n/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660807991356,
  "history_end_time" : 1662909418238,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "7895eNrFfnFq",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal=final.dropna()\n\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x','CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC'],axis=1)\nprint(\"input shape:\", X.shape)\nprint(\"Columns used as inputs: \", X.columns)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "   Latitude_x  Longitude_x  AirNOW_O3  ...  month  day  hours\n0   30.260300   -81.453300       14.0  ...      8    5     12\n1   42.770802   -71.102798       40.0  ...      8    5     12\n2   34.528599   -86.970596        8.0  ...      8    5     12\n3   42.194401   -72.555603       23.0  ...      8    5     12\n4   34.751801   -82.256699        8.0  ...      8    5     12\n\n[5 rows x 18 columns]\ninput shape: (55900, 4)\nColumns used as inputs:  Index(['CMAQ12KM_O3(ppb)', 'month', 'day', 'hours'], dtype='object')\n/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660805932835,
  "history_end_time" : 1662909418750,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "BlWn5bqFIRkV",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal=final.dropna()\n\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x','CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC'],axis=1)\nprint(\"input shape:\", X.shape)\nprint(\"Columns used as inputs: \", X.columns)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "   Latitude_x  Longitude_x  AirNOW_O3  ...  month  day  hours\n0   30.260300   -81.453300       14.0  ...      8    5     12\n1   42.770802   -71.102798       40.0  ...      8    5     12\n2   34.528599   -86.970596        8.0  ...      8    5     12\n3   42.194401   -72.555603       23.0  ...      8    5     12\n4   34.751801   -82.256699        8.0  ...      8    5     12\n\n[5 rows x 18 columns]\ninput shape: (55900, 4)\nColumns used as inputs:  Index(['CMAQ12KM_O3(ppb)', 'month', 'day', 'hours'], dtype='object')\n/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660804455549,
  "history_end_time" : null,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Running"
},{
  "history_id" : "Vfh2ZqHRrT7i",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal=final.dropna()\n\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x','CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'],axis=1)\nprint(\"input shape:\", X.shape)\nprint(\"Columns used as inputs: \", X.columns)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "   Latitude_x  Longitude_x  AirNOW_O3  ...  month  day  hours\n0   30.260300   -81.453300       14.0  ...      8    5     12\n1   42.770802   -71.102798       40.0  ...      8    5     12\n2   34.528599   -86.970596        8.0  ...      8    5     12\n3   42.194401   -72.555603       23.0  ...      8    5     12\n4   34.751801   -82.256699        8.0  ...      8    5     12\n\n[5 rows x 18 columns]\ninput shape: (55900, 1)\nColumns used as inputs:  Index(['CMAQ12KM_O3(ppb)'], dtype='object')\n/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660794331668,
  "history_end_time" : 1660804284880,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "qgK9mMdOcLiG",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal=final.dropna()\n\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x','CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC'],axis=1)\nprint(\"input shape:\", X.shape)\nprint(\"Columns used as inputs: \", X.columns)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "   Latitude_x  Longitude_x  AirNOW_O3  ...  month  day  hours\n0   30.260300   -81.453300       14.0  ...      8    5     12\n1   42.770802   -71.102798       40.0  ...      8    5     12\n2   34.528599   -86.970596        8.0  ...      8    5     12\n3   42.194401   -72.555603       23.0  ...      8    5     12\n4   34.751801   -82.256699        8.0  ...      8    5     12\n\n[5 rows x 18 columns]\ninput shape: (55900, 4)\nColumns used as inputs:  Index(['CMAQ12KM_O3(ppb)', 'month', 'day', 'hours'], dtype='object')\n/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660794168873,
  "history_end_time" : 1660804284202,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "f37tPpt26HLt",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal=final.dropna()\n\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'],axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_no2_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "   Latitude_x  Longitude_x  AirNOW_O3  ...  month  day  hours\n0   30.260300   -81.453300       14.0  ...      8    5     12\n1   42.770802   -71.102798       40.0  ...      8    5     12\n2   34.528599   -86.970596        8.0  ...      8    5     12\n3   42.194401   -72.555603       23.0  ...      8    5     12\n4   34.751801   -82.256699        8.0  ...      8    5     12\n\n[5 rows x 18 columns]\ninput shape: (55900, 2)\n/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660791266915,
  "history_end_time" : 1660794090875,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "d0YfKBkXxuyf",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal=final.dropna()\n\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC'],axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_no2_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "   Latitude_x  Longitude_x  AirNOW_O3  ...  month  day  hours\n0   30.260300   -81.453300       14.0  ...      8    5     12\n1   42.770802   -71.102798       40.0  ...      8    5     12\n2   34.528599   -86.970596        8.0  ...      8    5     12\n3   42.194401   -72.555603       23.0  ...      8    5     12\n4   34.751801   -82.256699        8.0  ...      8    5     12\n\n[5 rows x 18 columns]\ninput shape: (55900, 5)\n/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660790203471,
  "history_end_time" : 1660794091358,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "o36PCDe8oCOF",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal=final.dropna()\n\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x','CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC'],axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "   Latitude_x  Longitude_x  AirNOW_O3  ...  month  day  hours\n0   30.260300   -81.453300       14.0  ...      8    5     12\n1   42.770802   -71.102798       40.0  ...      8    5     12\n2   34.528599   -86.970596        8.0  ...      8    5     12\n3   42.194401   -72.555603       23.0  ...      8    5     12\n4   34.751801   -82.256699        8.0  ...      8    5     12\n\n[5 rows x 18 columns]\ninput shape: (55900, 4)\n/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660787652541,
  "history_end_time" : 1660794091825,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "i3xoxv4vkdw",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal=final.dropna()\n\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x','CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC'],axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "   Latitude_x  Longitude_x  AirNOW_O3  ...  month  day  hours\n0   30.260300   -81.453300       14.0  ...      8    5     12\n1   42.770802   -71.102798       40.0  ...      8    5     12\n2   34.528599   -86.970596        8.0  ...      8    5     12\n3   42.194401   -72.555603       23.0  ...      8    5     12\n4   34.751801   -82.256699        8.0  ...      8    5     12\n\n[5 rows x 18 columns]\ninput shape: (55900, 4)\n/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660786836196,
  "history_end_time" : 1660786903466,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "rdEHYHlraTtz",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal=final.dropna()\n\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x','CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC'],axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "   Latitude_x  Longitude_x  AirNOW_O3  ...  month  day  hours\n0   30.260300   -81.453300       14.0  ...      8    5     12\n1   42.770802   -71.102798       40.0  ...      8    5     12\n2   34.528599   -86.970596        8.0  ...      8    5     12\n3   42.194401   -72.555603       23.0  ...      8    5     12\n4   34.751801   -82.256699        8.0  ...      8    5     12\n\n[5 rows x 18 columns]\ninput shape: (55900, 4)\n/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660786277862,
  "history_end_time" : 1660794092493,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "DfFw9bZmyyfg",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal=final.dropna()\n\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x','CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'],axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "   Latitude_x  Longitude_x  AirNOW_O3  ...  month  day  hours\n0   30.260300   -81.453300       14.0  ...      8    5     12\n1   42.770802   -71.102798       40.0  ...      8    5     12\n2   34.528599   -86.970596        8.0  ...      8    5     12\n3   42.194401   -72.555603       23.0  ...      8    5     12\n4   34.751801   -82.256699        8.0  ...      8    5     12\n\n[5 rows x 18 columns]\ninput shape: (55900, 1)\n/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660784605373,
  "history_end_time" : 1660794092942,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "jce7fxiz7uBi",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal=final.dropna()\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x','CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'],axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "   Latitude_x  Longitude_x  AirNOW_O3  ...  month  day  hours\n0   30.260300   -81.453300       14.0  ...      8    5     12\n1   42.770802   -71.102798       40.0  ...      8    5     12\n2   34.528599   -86.970596        8.0  ...      8    5     12\n3   42.194401   -72.555603       23.0  ...      8    5     12\n4   34.751801   -82.256699        8.0  ...      8    5     12\n\n[5 rows x 18 columns]\ninput shape: (28161, 1)\n/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660779003185,
  "history_end_time" : 1660794094357,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "i4ck934cb2d",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal=final.dropna()\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x','CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'],axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "   Latitude_x  Longitude_x  AirNOW_O3  ...  month  day  hours\n0   30.260300   -81.453300       14.0  ...      8    5     12\n1   42.770802   -71.102798       40.0  ...      8    5     12\n2   34.528599   -86.970596        8.0  ...      8    5     12\n3   42.194401   -72.555603       23.0  ...      8    5     12\n4   34.751801   -82.256699        8.0  ...      8    5     12\n\n[5 rows x 18 columns]\ninput shape: (28161, 1)\n/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660777540352,
  "history_end_time" : 1660778171079,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "gsi1HqsS8mXg",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal=final.dropna()\n#print(\"shape before: \", final.shape)\n#final = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']<0.05]\n#print(\"shape 1 after: \", final.shape)\n#final = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']>-0.05]\n#print(\"shape 2 after: \", final.shape)\n\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x','CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'],axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "   Latitude_x  Longitude_x  AirNOW_O3  ...  month  day  hours\n0   35.054401  -119.403900       19.0  ...      8    1     12\n1   41.401402   -73.444702       29.0  ...      8    1     12\n2   26.086399   -80.111397       12.0  ...      8    1     12\n3   40.277645   -74.005096       33.0  ...      8    1     12\n4   39.250439  -119.956741       38.0  ...      8    1     12\n\n[5 rows x 18 columns]\ninput shape: (55351, 1)\n/home/zsun/.local/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660775260570,
  "history_end_time" : 1661326057553,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "s2yn1X7yld79",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal=final.dropna()\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x','CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'],axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "   Latitude_x  Longitude_x  AirNOW_O3  ...  month  day  hours\n0   44.232498   -79.781403       43.0  ...      7    1     12\n1   32.205002  -110.877197       35.0  ...      7    1     12\n2   35.438557   -81.276749       21.0  ...      7    1     12\n3   41.644066   -83.546249       50.0  ...      7    1     12\n4   46.205601   -93.758904       25.0  ...      7    1     12\n\n[5 rows x 18 columns]\ninput shape: (862076, 1)\n/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660773299573,
  "history_end_time" : 1660794095698,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "UZKxbxiZSynP",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal=final.dropna()\nprint(\"shape before: \", final.shape)\nfinal = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']<0.05]\nprint(\"shape 1 after: \", final.shape)\nfinal = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']>-0.05]\nprint(\"shape 2 after: \", final.shape)\n\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x','CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'],axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "   Latitude_x  Longitude_x  AirNOW_O3  ...  month  day  hours\n0   35.054401  -119.403900       19.0  ...      8    1     12\n1   41.401402   -73.444702       29.0  ...      8    1     12\n2   26.086399   -80.111397       12.0  ...      8    1     12\n3   40.277645   -74.005096       33.0  ...      8    1     12\n4   39.250439  -119.956741       38.0  ...      8    1     12\n\n[5 rows x 18 columns]\nshape before:  (55351, 18)\nshape 1 after:  (30879, 18)\nshape 2 after:  (5793, 18)\ninput shape: (5793, 1)\n/home/zsun/.local/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660750074616,
  "history_end_time" : 1661326056298,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "MwDLgAElVZMO",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal=final.dropna()\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x'],axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only_moreInputs.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "   Latitude_x  Longitude_x  AirNOW_O3  ...  month  day  hours\n0   44.232498   -79.781403       43.0  ...      7    1     12\n1   32.205002  -110.877197       35.0  ...      7    1     12\n2   35.438557   -81.276749       21.0  ...      7    1     12\n3   41.644066   -83.546249       50.0  ...      7    1     12\n4   46.205601   -93.758904       25.0  ...      7    1     12\n\n[5 rows x 18 columns]\ninput shape: (51577, 15)\n/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660704895507,
  "history_end_time" : 1660794096340,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "YWDSxcFPIXKv",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal=final.dropna()\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x'],axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only_moreInputs.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "   Latitude_x  Longitude_x  AirNOW_O3  ...  month  day  hours\n0   44.232498   -79.781403       43.0  ...      7    1     12\n1   32.205002  -110.877197       35.0  ...      7    1     12\n2   35.438557   -81.276749       21.0  ...      7    1     12\n3   41.644066   -83.546249       50.0  ...      7    1     12\n4   46.205601   -93.758904       25.0  ...      7    1     12\n\n[5 rows x 18 columns]\ninput shape: (139200, 15)\n/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660679587848,
  "history_end_time" : 1660794098986,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "QdX4oxuvsTq8",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal=final.dropna()\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x', 'month', 'day', 'hours'],axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only_layers.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "   Latitude_x  Longitude_x  AirNOW_O3  CMAQ12KM_O3(ppb)  month  day  hours\n0   44.232498   -79.781403       43.0              35.0      7    1     12\n1   32.205002  -110.877197       35.0              15.0      7    1     12\n2   35.438557   -81.276749       21.0              19.0      7    1     12\n3   41.644066   -83.546249       50.0              27.0      7    1     12\n4   46.205601   -93.758904       25.0              18.0      7    1     12\ninput shape: (139200, 1)\n/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660674705199,
  "history_end_time" : 1660677402329,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "zSHtNe8ak6B0",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal=final.dropna()\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x','CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'],axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only_layers.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "   Latitude_x  Longitude_x  AirNOW_O3  CMAQ12KM_O3(ppb)  month  day  hours\n0   44.232498   -79.781403       43.0              35.0      7    1     12\n1   32.205002  -110.877197       35.0              15.0      7    1     12\n2   35.438557   -81.276749       21.0              19.0      7    1     12\n3   41.644066   -83.546249       50.0              27.0      7    1     12\n4   46.205601   -93.758904       25.0              18.0      7    1     12\nTraceback (most recent call last):\n  File \"train_cmaq_directly_no_slurm.py\", line 20, in <module>\n    X = final.drop(['AirNOW_O3','Latitude_x','Longitude_x','CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'],axis=1)\n  File \"/home/aalnaim/CMAQAI/lib/python3.8/site-packages/pandas/util/_decorators.py\", line 311, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/aalnaim/CMAQAI/lib/python3.8/site-packages/pandas/core/frame.py\", line 4948, in drop\n    return super().drop(\n  File \"/home/aalnaim/CMAQAI/lib/python3.8/site-packages/pandas/core/generic.py\", line 4279, in drop\n    obj = obj._drop_axis(labels, axis, level=level, errors=errors)\n  File \"/home/aalnaim/CMAQAI/lib/python3.8/site-packages/pandas/core/generic.py\", line 4323, in _drop_axis\n    new_axis = axis.drop(labels, errors=errors)\n  File \"/home/aalnaim/CMAQAI/lib/python3.8/site-packages/pandas/core/indexes/base.py\", line 6644, in drop\n    raise KeyError(f\"{list(labels[mask])} not found in axis\")\nKeyError: \"['CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC'] not found in axis\"\n",
  "history_begin_time" : 1660674558806,
  "history_end_time" : 1660677403058,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "qp1lbsOmjIJ4",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal=final.dropna()\nprint(\"shape before: \", final.shape)\nfinal = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']<0.05]\nprint(\"shape 1 after: \", final.shape)\nfinal = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']>-0.05]\nprint(\"shape 2 after: \", final.shape)\n\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x','CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'],axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "   Latitude_x  Longitude_x  AirNOW_O3  ...  month  day  hours\n0   35.054401  -119.403900       19.0  ...      8    1     12\n1   41.401402   -73.444702       29.0  ...      8    1     12\n2   26.086399   -80.111397       12.0  ...      8    1     12\n3   40.277645   -74.005096       33.0  ...      8    1     12\n4   39.250439  -119.956741       38.0  ...      8    1     12\n\n[5 rows x 18 columns]\nshape before:  (55351, 18)\nshape 1 after:  (30879, 18)\nshape 2 after:  (5793, 18)\ninput shape: (5793, 1)\n/home/zsun/.local/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660522843182,
  "history_end_time" : 1661326055775,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "KJsN6VBEXaca",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal=final.dropna()\nprint(\"shape before: \", final.shape)\nfinal = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']<0.05]\nprint(\"shape 1 after: \", final.shape)\nfinal = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']>-0.05]\nprint(\"shape 2 after: \", final.shape)\n\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x','CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'],axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : null,
  "history_begin_time" : 1660522813332,
  "history_end_time" : null,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : null
},{
  "history_id" : "4r66o43OY09D",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal=final.dropna()\nprint(\"shape before: \", final.shape)\nfinal = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']<0.1]\nprint(\"shape 1 after: \", final.shape)\nfinal = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']>-0.1]\nprint(\"shape 2 after: \", final.shape)\n\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x','CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'],axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "   Latitude_x  Longitude_x  AirNOW_O3  ...  month  day  hours\n0   35.054401  -119.403900       19.0  ...      8    1     12\n1   41.401402   -73.444702       29.0  ...      8    1     12\n2   26.086399   -80.111397       12.0  ...      8    1     12\n3   40.277645   -74.005096       33.0  ...      8    1     12\n4   39.250439  -119.956741       38.0  ...      8    1     12\n\n[5 rows x 18 columns]\nshape before:  (55351, 18)\nshape 1 after:  (33603, 18)\nshape 2 after:  (11590, 18)\ninput shape: (11590, 1)\n/home/zsun/.local/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660522483095,
  "history_end_time" : 1660522822886,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "PhrABFPVAmRL",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal=final.dropna()\nprint(\"shape before: \", final.shape)\nfinal = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']<0.1]\nprint(\"shape 1 after: \", final.shape)\nfinal = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']>-0.1]\nprint(\"shape 2 after: \", final.shape)\n\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x','CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'],axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "   Latitude_x  Longitude_x  AirNOW_O3  ...  month  day  hours\n0   44.232498   -79.781403       43.0  ...      7    1     12\n1   32.205002  -110.877197       35.0  ...      7    1     12\n2   35.438557   -81.276749       21.0  ...      7    1     12\n3   41.644066   -83.546249       50.0  ...      7    1     12\n4   46.205601   -93.758904       25.0  ...      7    1     12\n\n[5 rows x 18 columns]\nshape before:  (55942, 18)\nshape 1 after:  (37038, 18)\nshape 2 after:  (12879, 18)\ninput shape: (12879, 1)\n/home/zsun/.local/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660519994156,
  "history_end_time" : 1660522823520,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "05u2Npm64CXL",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal=final.dropna()\nprint(\"shape before: \", final.shape)\nfinal = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']<0.15]\nprint(\"shape 1 after: \", final.shape)\nfinal = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']>-0.15]\nprint(\"shape 2 after: \", final.shape)\n\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x','CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'],axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "   Latitude_x  Longitude_x  AirNOW_O3  ...  month  day  hours\n0   44.232498   -79.781403       43.0  ...      7    1     12\n1   32.205002  -110.877197       35.0  ...      7    1     12\n2   35.438557   -81.276749       21.0  ...      7    1     12\n3   41.644066   -83.546249       50.0  ...      7    1     12\n4   46.205601   -93.758904       25.0  ...      7    1     12\n\n[5 rows x 18 columns]\nshape before:  (55942, 18)\nshape 1 after:  (39241, 18)\nshape 2 after:  (19247, 18)\ninput shape: (19247, 1)\n/home/zsun/.local/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660519066335,
  "history_end_time" : 1660522823985,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "azQmZA4GS2dl",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal=final.dropna()\nprint(\"shape before: \", final.shape)\nfinal = final.loc[(final['CMAQ12KM_O3(ppb)']-final['AirNOW_O3'])/final['AirNOW_O3']<0.15]\nprint(\"shape after: \", final.shape)\n\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x','CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'],axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "   Latitude_x  Longitude_x  AirNOW_O3  ...  month  day  hours\n0   44.232498   -79.781403       43.0  ...      7    1     12\n1   32.205002  -110.877197       35.0  ...      7    1     12\n2   35.438557   -81.276749       21.0  ...      7    1     12\n3   41.644066   -83.546249       50.0  ...      7    1     12\n4   46.205601   -93.758904       25.0  ...      7    1     12\n\n[5 rows x 18 columns]\nshape before:  (55942, 18)\nshape after:  (39241, 18)\ninput shape: (39241, 1)\n/home/zsun/.local/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660515304374,
  "history_end_time" : 1660522824539,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "6LC5oZCOjYrM",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal=final.dropna()\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x','CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'],axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only_fifteenMean.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "   Latitude_x  Longitude_x  AirNOW_O3  ...  month  day  hours\n0   44.232498   -79.781403       43.0  ...      7    1     12\n1   32.205002  -110.877197       35.0  ...      7    1     12\n2   35.438557   -81.276749       21.0  ...      7    1     12\n3   41.644066   -83.546249       50.0  ...      7    1     12\n4   46.205601   -93.758904       25.0  ...      7    1     12\n\n[5 rows x 18 columns]\ninput shape: (862076, 1)\n/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660455422681,
  "history_end_time" : 1660677400561,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "bTMJTllc4ifX",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal=final.dropna()\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x','CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'],axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only_fifteenMean.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : null,
  "history_begin_time" : 1660455386624,
  "history_end_time" : null,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : null
},{
  "history_id" : "1gSKJb1G1DiE",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal=final.dropna()\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x','CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'],axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "   Latitude_x  Longitude_x  AirNOW_O3  ...  month  day  hours\n0   44.232498   -79.781403       43.0  ...      7    1     12\n1   32.205002  -110.877197       35.0  ...      7    1     12\n2   35.438557   -81.276749       21.0  ...      7    1     12\n3   41.644066   -83.546249       50.0  ...      7    1     12\n4   46.205601   -93.758904       25.0  ...      7    1     12\n\n[5 rows x 18 columns]\ninput shape: (862076, 1)\n/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660370840210,
  "history_end_time" : 1660455375743,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "2hAWxzdwrmBD",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal=final.dropna()\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x','CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'],axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "   Latitude_x  Longitude_x  AirNOW_O3  ...  month  day  hours\n0   44.232498   -79.781403       43.0  ...      7    1     12\n1   32.205002  -110.877197       35.0  ...      7    1     12\n2   35.438557   -81.276749       21.0  ...      7    1     12\n3   41.644066   -83.546249       50.0  ...      7    1     12\n4   46.205601   -93.758904       25.0  ...      7    1     12\n\n[5 rows x 18 columns]\ninput shape: (55942, 1)\n/home/zsun/.local/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660363381780,
  "history_end_time" : 1660522825854,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "tKJoEQYmnoOA",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal=final.dropna()\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x','CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'],axis=1)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "   Latitude_x  Longitude_x  AirNOW_O3  ...  month  day  hours\n0   44.232498   -79.781403       43.0  ...      7    1     12\n1   32.205002  -110.877197       35.0  ...      7    1     12\n2   35.438557   -81.276749       21.0  ...      7    1     12\n3   41.644066   -83.546249       50.0  ...      7    1     12\n4   46.205601   -93.758904       25.0  ...      7    1     12\n\n[5 rows x 18 columns]\n/home/zsun/.local/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660363277823,
  "history_end_time" : 1660522826302,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "ZM6CXPoa8lnr",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal=final.dropna()\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\n#X = final.drop(['AirNOW_O3','Latitude_x','Longitude_x'],axis=1)\nX = [final['CMAQ12KM_O3(ppb)']]\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "   Latitude_x  Longitude_x  AirNOW_O3  ...  month  day  hours\n0   44.232498   -79.781403       43.0  ...      7    1     12\n1   32.205002  -110.877197       35.0  ...      7    1     12\n2   35.438557   -81.276749       21.0  ...      7    1     12\n3   41.644066   -83.546249       50.0  ...      7    1     12\n4   46.205601   -93.758904       25.0  ...      7    1     12\n\n[5 rows x 18 columns]\nTraceback (most recent call last):\n  File \"train_cmaq_directly_no_slurm.py\", line 32, in <module>\n    rf.fit(X, y)\n  File \"/home/zsun/.local/lib/python3.8/site-packages/sklearn/ensemble/_forest.py\", line 327, in fit\n    X, y = self._validate_data(\n  File \"/home/zsun/.local/lib/python3.8/site-packages/sklearn/base.py\", line 581, in _validate_data\n    X, y = check_X_y(X, y, **check_params)\n  File \"/home/zsun/.local/lib/python3.8/site-packages/sklearn/utils/validation.py\", line 981, in check_X_y\n    check_consistent_length(X, y)\n  File \"/home/zsun/.local/lib/python3.8/site-packages/sklearn/utils/validation.py\", line 332, in check_consistent_length\n    raise ValueError(\nValueError: Found input variables with inconsistent numbers of samples: [1, 55942]\n",
  "history_begin_time" : 1660313000446,
  "history_end_time" : 1660522826803,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "xxdzQG5JcX7N",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal=final.dropna()\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\n#X = final.drop(['AirNOW_O3','Latitude_x','Longitude_x'],axis=1)\nX = final['CMAQ12KM_O3(ppb)']\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "   Latitude_x  Longitude_x  AirNOW_O3  ...  month  day  hours\n0   44.232498   -79.781403       43.0  ...      7    1     12\n1   32.205002  -110.877197       35.0  ...      7    1     12\n2   35.438557   -81.276749       21.0  ...      7    1     12\n3   41.644066   -83.546249       50.0  ...      7    1     12\n4   46.205601   -93.758904       25.0  ...      7    1     12\n\n[5 rows x 18 columns]\nTraceback (most recent call last):\n  File \"train_cmaq_directly_no_slurm.py\", line 32, in <module>\n    rf.fit(X, y)\n  File \"/home/zsun/.local/lib/python3.8/site-packages/sklearn/ensemble/_forest.py\", line 327, in fit\n    X, y = self._validate_data(\n  File \"/home/zsun/.local/lib/python3.8/site-packages/sklearn/base.py\", line 581, in _validate_data\n    X, y = check_X_y(X, y, **check_params)\n  File \"/home/zsun/.local/lib/python3.8/site-packages/sklearn/utils/validation.py\", line 964, in check_X_y\n    X = check_array(\n  File \"/home/zsun/.local/lib/python3.8/site-packages/sklearn/utils/validation.py\", line 769, in check_array\n    raise ValueError(\nValueError: Expected 2D array, got 1D array instead:\narray=[35. 15. 19. ... 21. 39. 26.].\nReshape your data either using array.reshape(-1, 1) if your data has a single feature or array.reshape(1, -1) if it contains a single sample.\n",
  "history_begin_time" : 1660312920364,
  "history_end_time" : 1660522827586,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "FoRHU91fpqrz",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal=final.dropna()\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\n#X = final.drop(['AirNOW_O3','Latitude_x','Longitude_x'],axis=1)\nX = final['CMAQ12KM_O3(ppb)'],axis=1)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "  File \"train_cmaq_directly_no_slurm.py\", line 21\n    X = final['CMAQ12KM_O3(ppb)'],axis=1)\n                                        ^\nSyntaxError: unmatched ')'\n",
  "history_begin_time" : 1660312900268,
  "history_end_time" : 1660522828186,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "ny7cBLcJVXd2",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal=final.dropna()\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\n#X = final.drop(['AirNOW_O3','Latitude_x','Longitude_x'],axis=1)\nX = final[['CMAQ12KM_O3(ppb)']],axis=1)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "  File \"train_cmaq_directly_no_slurm.py\", line 21\n    X = final[['CMAQ12KM_O3(ppb)']],axis=1)\n                                          ^\nSyntaxError: unmatched ')'\n",
  "history_begin_time" : 1660312866625,
  "history_end_time" : 1660312894676,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "IjcHWg1mLoCm",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal=final.dropna()\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x'],axis=1)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "   Latitude_x  Longitude_x  AirNOW_O3  ...  month  day  hours\n0   44.232498   -79.781403       43.0  ...      7    1     12\n1   32.205002  -110.877197       35.0  ...      7    1     12\n2   35.438557   -81.276749       21.0  ...      7    1     12\n3   41.644066   -83.546249       50.0  ...      7    1     12\n4   46.205601   -93.758904       25.0  ...      7    1     12\n\n[5 rows x 18 columns]\n/home/zsun/.local/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660311231768,
  "history_end_time" : 1660312895562,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "x0EYm3pYr6TH",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal=final.dropna()\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x'],axis=1)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "   Latitude_x  Longitude_x  AirNOW_O3  ...  month  day  hours\n0   44.232498   -79.781403       43.0  ...      7    1     12\n1   32.205002  -110.877197       35.0  ...      7    1     12\n2   35.438557   -81.276749       21.0  ...      7    1     12\n3   41.644066   -83.546249       50.0  ...      7    1     12\n4   46.205601   -93.758904       25.0  ...      7    1     12\n\n[5 rows x 18 columns]\n/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660302314216,
  "history_end_time" : null,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Running"
},{
  "history_id" : "olxlwzs7tcu",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal=final.dropna()\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x'],axis=1)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "   Latitude_x  Longitude_x  AirNOW_O3  ...  month  day  hours\n0   44.232498   -79.781403       43.0  ...      7    1     12\n1   32.205002  -110.877197       35.0  ...      7    1     12\n2   35.438557   -81.276749       21.0  ...      7    1     12\n3   41.644066   -83.546249       50.0  ...      7    1     12\n4   46.205601   -93.758904       25.0  ...      7    1     12\n\n[5 rows x 18 columns]\n/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660299895013,
  "history_end_time" : 1660301768674,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "pGj8vEYJvqpL",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom pathlib import Path\nfrom cmaq_ai_utils import *\n\n# importing data\nfinal=pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal=final.dropna()\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3','Latitude_x','Longitude_x'],axis=1)\ny = final['AirNOW_O3']\n\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n                      max_samples=None, min_impurity_decrease=0.0,\n                      min_samples_leaf=1,\n                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n                      n_estimators=100, n_jobs=-1, oob_score=False,\n                      random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))",
  "history_output" : "   Latitude_x  Longitude_x  AirNOW_O3  ...  month  day  hours\n0   44.232498   -79.781403       43.0  ...      7    1     12\n1   32.205002  -110.877197       35.0  ...      7    1     12\n2   35.438557   -81.276749       21.0  ...      7    1     12\n3   41.644066   -83.546249       50.0  ...      7    1     12\n4   46.205601   -93.758904       25.0  ...      7    1     12\n\n[5 rows x 18 columns]\n/home/zsun/.local/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660273650183,
  "history_end_time" : 1660312896552,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "xda188e7smm",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1660294477721,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "om4j1vyrbil",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1660854222336,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "co6ib7b0z1k",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1660786975153,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "gg16kzj1430",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1660295756150,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "8b357xjjw9o",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1660777307139,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "tdky0zbi5wn",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1660853992793,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "kim1319x4yl",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1664422603508,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : "aqt8fv",
  "indicator" : "Stopped"
},{
  "history_id" : "qys0g61n6ce",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1664422878627,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : "aqt8fv",
  "indicator" : "Stopped"
},]
