[{
  "history_id" : "zELqOzprCKWi",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\n# import sklearn\nfrom sklearn.ensemble import RandomForestRegressor\n# from xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\nfrom sklearn.preprocessing import MinMaxScaler\n\n# importing data\n# final = pd.read_csv('/groups/ESS3/aalnaim/cmaq/training.csv')\nfinal = pd.read_csv('/Users/uhhmed/localCMAQ/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\n# Initialize a normalizer\n# scaler = MinMaxScaler(feature_range=(0, 1))\n# final[final.columns] = scaler.fit_transform(final)\n\n# Make coords coarse by removing decimals\n# final['Latitude_coarse'] = round(final['Latitude'])\n# final['Longitude_coarse'] = round(final['Longitude'])\n\n# Split time of day into value ranges.\n# Hours 0 - 3 is value 1 (Midnight), 4 - 7 is value 2 (Early Morning), 8 - 11 is value 3 (Morning), 12 - 15 is value 4 (Noon), 16 - 19 is value 5 (Evening), 20 - 23 is value 6 (Night)\nfinal['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\nfinal['Latitude_Coarse_5_Degree'] = 5 * round(final['Latitude']/5)\nfinal['Longitude_Coarse_5_Degree'] = 5 * round(final['Longitude']/5)\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3', 'Latitude', 'Longitude'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : "    Latitude  Longitude  AirNOW_O3  CMAQ12KM_O3(ppb)  ...  CFRAC  month  day  hours\n0  30.260300 -81.453300       14.0              21.0  ...    0.0      8    5     12\n1  42.770802 -71.102798       40.0              25.0  ...    0.0      8    5     12\n2  34.528599 -86.970596        8.0              14.0  ...    0.0      8    5     12\n3  42.194401 -72.555603       23.0              25.0  ...    0.0      8    5     12\n4  34.751801 -82.256699        8.0              17.0  ...    0.0      8    5     12\n[5 rows x 18 columns]\ninput shape: (55900, 18)\nused as inputs:  Index(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)',\n       'WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day',\n       'hours', 'time_of_day', 'Latitude_Coarse_5_Degree',\n       'Longitude_Coarse_5_Degree'],\n      dtype='object')\n",
  "history_begin_time" : 1661429134219,
  "history_end_time" : 1661429177340,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "m0TPhg3XJRKZ",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\n# import sklearn\nfrom sklearn.ensemble import RandomForestRegressor\n# from xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\nfrom sklearn.preprocessing import MinMaxScaler\n\n# importing data\n# final = pd.read_csv('/groups/ESS3/aalnaim/cmaq/training.csv')\nfinal = pd.read_csv('/Users/uhhmed/localCMAQ/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\n# Initialize a normalizer\n# scaler = MinMaxScaler(feature_range=(0, 1))\n# final[final.columns] = scaler.fit_transform(final)\n\n# Make coords coarse by removing decimals\n# final['Latitude_coarse'] = round(final['Latitude'])\n# final['Longitude_coarse'] = round(final['Longitude'])\n\n# Split time of day into value ranges.\n# Hours 0 - 3 is value 1 (Midnight), 4 - 7 is value 2 (Early Morning), 8 - 11 is value 3 (Morning), 12 - 15 is value 4 (Noon), 16 - 19 is value 5 (Evening), 20 - 23 is value 6 (Night)\nfinal['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\nfinal['Latitude_Coarse_5_Degree'] = 5 * round(final['Latitude']/5)\nfinal['Longitude_Coarse_5_Degree'] = 5 * round(final['Longitude']/5)\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3', 'Latitude', 'Longitude', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : "    Latitude  Longitude  AirNOW_O3  CMAQ12KM_O3(ppb)  ...  CFRAC  month  day  hours\n0  30.260300 -81.453300       14.0              21.0  ...    0.0      8    5     12\n1  42.770802 -71.102798       40.0              25.0  ...    0.0      8    5     12\n2  34.528599 -86.970596        8.0              14.0  ...    0.0      8    5     12\n3  42.194401 -72.555603       23.0              25.0  ...    0.0      8    5     12\n4  34.751801 -82.256699        8.0              17.0  ...    0.0      8    5     12\n[5 rows x 18 columns]\ninput shape: (55900, 5)\nused as inputs:  Index(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'time_of_day',\n       'Latitude_Coarse_5_Degree', 'Longitude_Coarse_5_Degree'],\n      dtype='object')\n",
  "history_begin_time" : 1661421529219,
  "history_end_time" : 1661421538989,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "zLr7VLn1T70a",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\n# import sklearn\nfrom sklearn.ensemble import RandomForestRegressor\n# from xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\nfrom sklearn.preprocessing import MinMaxScaler\n\n# importing data\n# final = pd.read_csv('/groups/ESS3/aalnaim/cmaq/training.csv')\nfinal = pd.read_csv('/Users/uhhmed/localCMAQ/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\n# Initialize a normalizer\n# scaler = MinMaxScaler(feature_range=(0, 1))\n# final[final.columns] = scaler.fit_transform(final)\n\n# Make coords coarse by removing decimals\n# final['Latitude_coarse'] = round(final['Latitude'])\n# final['Longitude_coarse'] = round(final['Longitude'])\n\n# Split time of day into value ranges.\n# Hours 0 - 3 is value 1 (Midnight), 4 - 7 is value 2 (Early Morning), 8 - 11 is value 3 (Morning), 12 - 15 is value 4 (Noon), 16 - 19 is value 5 (Evening), 20 - 23 is value 6 (Night)\nfinal['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\nfinal['Latitude_Coarse_0.1_Degree'] = 0.1 * round(final['Latitude']/0.1)\nfinal['Longitude_Coarse_0.1_Degree'] = 0.1 * round(final['Longitude']/0.1)\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3', 'Latitude', 'Longitude', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : "    Latitude  Longitude  AirNOW_O3  CMAQ12KM_O3(ppb)  ...  CFRAC  month  day  hours\n0  30.260300 -81.453300       14.0              21.0  ...    0.0      8    5     12\n1  42.770802 -71.102798       40.0              25.0  ...    0.0      8    5     12\n2  34.528599 -86.970596        8.0              14.0  ...    0.0      8    5     12\n3  42.194401 -72.555603       23.0              25.0  ...    0.0      8    5     12\n4  34.751801 -82.256699        8.0              17.0  ...    0.0      8    5     12\n[5 rows x 18 columns]\ninput shape: (55900, 4)\nused as inputs:  Index(['CMAQ12KM_O3(ppb)', 'time_of_day', 'Latitude_Coarse_0.1_Degree',\n       'Longitude_Coarse_0.1_Degree'],\n      dtype='object')\n",
  "history_begin_time" : 1661405933942,
  "history_end_time" : 1661405946638,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "xsQzdo3y3XDt",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\n# import sklearn\nfrom sklearn.ensemble import RandomForestRegressor\n# from xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\nfrom sklearn.preprocessing import MinMaxScaler\n\n# importing data\n# final = pd.read_csv('/groups/ESS3/aalnaim/cmaq/training.csv')\nfinal = pd.read_csv('/Users/uhhmed/localCMAQ/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\n# Initialize a normalizer\n# scaler = MinMaxScaler(feature_range=(0, 1))\n# final[final.columns] = scaler.fit_transform(final)\n\n# Make coords coarse by removing decimals\n# final['Latitude_coarse'] = round(final['Latitude'])\n# final['Longitude_coarse'] = round(final['Longitude'])\n\n# Split time of day into value ranges.\n# Hours 0 - 3 is value 1 (Midnight), 4 - 7 is value 2 (Early Morning), 8 - 11 is value 3 (Morning), 12 - 15 is value 4 (Noon), 16 - 19 is value 5 (Evening), 20 - 23 is value 6 (Night)\nfinal['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\nfinal['Latitude_Coarse_5_Degree'] = 5 * round(final['Latitude']/5)\nfinal['Longitude_Coarse_5_Degree'] = 5 * round(final['Longitude']/5)\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3', 'Latitude', 'Longitude', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : "    Latitude  Longitude  AirNOW_O3  CMAQ12KM_O3(ppb)  ...  CFRAC  month  day  hours\n0  30.260300 -81.453300       14.0              21.0  ...    0.0      8    5     12\n1  42.770802 -71.102798       40.0              25.0  ...    0.0      8    5     12\n2  34.528599 -86.970596        8.0              14.0  ...    0.0      8    5     12\n3  42.194401 -72.555603       23.0              25.0  ...    0.0      8    5     12\n4  34.751801 -82.256699        8.0              17.0  ...    0.0      8    5     12\n[5 rows x 18 columns]\ninput shape: (55900, 4)\nused as inputs:  Index(['CMAQ12KM_O3(ppb)', 'time_of_day', 'Latitude_Coarse_5_Degree',\n       'Longitude_Coarse_5_Degree'],\n      dtype='object')\n",
  "history_begin_time" : 1661401391111,
  "history_end_time" : 1661401400142,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "afCENy6rxKnB",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\n# import sklearn\nfrom sklearn.ensemble import RandomForestRegressor\n# from xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\nfrom sklearn.preprocessing import MinMaxScaler\n\n# importing data\n# final = pd.read_csv('/groups/ESS3/aalnaim/cmaq/training.csv')\nfinal = pd.read_csv('/Users/uhhmed/localCMAQ/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\n# Initialize a normalizer\n# scaler = MinMaxScaler(feature_range=(0, 1))\n# final[final.columns] = scaler.fit_transform(final)\n\n# Make coords coarse by removing decimals\n# final['Latitude_coarse'] = round(final['Latitude'])\n# final['Longitude_coarse'] = round(final['Longitude'])\n\n# Split time of day into value ranges.\n# Hours 0 - 3 is value 1 (Midnight), 4 - 7 is value 2 (Early Morning), 8 - 11 is value 3 (Morning), 12 - 15 is value 4 (Noon), 16 - 19 is value 5 (Evening), 20 - 23 is value 6 (Night)\n# final['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\nfinal['Latitude_Coarse_0.1_Degree'] = 0.1 * round(final['Latitude']/0.1)\nfinal['Longitude_Coarse_0.1_Degree'] = 0.1 * round(final['Longitude']/0.1)\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3', 'Latitude', 'Longitude', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : "    Latitude  Longitude  AirNOW_O3  CMAQ12KM_O3(ppb)  ...  CFRAC  month  day  hours\n0  30.260300 -81.453300       14.0              21.0  ...    0.0      8    5     12\n1  42.770802 -71.102798       40.0              25.0  ...    0.0      8    5     12\n2  34.528599 -86.970596        8.0              14.0  ...    0.0      8    5     12\n3  42.194401 -72.555603       23.0              25.0  ...    0.0      8    5     12\n4  34.751801 -82.256699        8.0              17.0  ...    0.0      8    5     12\n[5 rows x 18 columns]\ninput shape: (55900, 3)\nused as inputs:  Index(['CMAQ12KM_O3(ppb)', 'Latitude_Coarse_0.1_Degree',\n       'Longitude_Coarse_0.1_Degree'],\n      dtype='object')\n",
  "history_begin_time" : 1661393690355,
  "history_end_time" : 1661393702838,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "3QJdlFPepCKv",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\n# import sklearn\nfrom sklearn.ensemble import RandomForestRegressor\n# from xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\nfrom sklearn.preprocessing import MinMaxScaler\n\n# importing data\n# final = pd.read_csv('/groups/ESS3/aalnaim/cmaq/training.csv')\nfinal = pd.read_csv('/Users/uhhmed/localCMAQ/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\n# Initialize a normalizer\n# scaler = MinMaxScaler(feature_range=(0, 1))\n# final[final.columns] = scaler.fit_transform(final)\n\n# Make coords coarse by removing decimals\n# final['Latitude_coarse'] = round(final['Latitude'])\n# final['Longitude_coarse'] = round(final['Longitude'])\n\n# Split time of day into value ranges.\n# Hours 0 - 3 is value 1 (Midnight), 4 - 7 is value 2 (Early Morning), 8 - 11 is value 3 (Morning), 12 - 15 is value 4 (Noon), 16 - 19 is value 5 (Evening), 20 - 23 is value 6 (Night)\n# final['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\nfinal['Latitude_Coarse_5_Degree'] = 5 * round(final['Latitude']/5)\nfinal['Longitude_Coarse_5_Degree'] = 5 * round(final['Longitude']/5)\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3', 'Latitude', 'Longitude', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : "    Latitude  Longitude  AirNOW_O3  CMAQ12KM_O3(ppb)  ...  CFRAC  month  day  hours\n0  30.260300 -81.453300       14.0              21.0  ...    0.0      8    5     12\n1  42.770802 -71.102798       40.0              25.0  ...    0.0      8    5     12\n2  34.528599 -86.970596        8.0              14.0  ...    0.0      8    5     12\n3  42.194401 -72.555603       23.0              25.0  ...    0.0      8    5     12\n4  34.751801 -82.256699        8.0              17.0  ...    0.0      8    5     12\n[5 rows x 18 columns]\ninput shape: (55900, 3)\nused as inputs:  Index(['CMAQ12KM_O3(ppb)', 'Latitude_Coarse_5_Degree',\n       'Longitude_Coarse_5_Degree'],\n      dtype='object')\n",
  "history_begin_time" : 1661388524393,
  "history_end_time" : 1661388533301,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "nFfmAssCziIf",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\n# import sklearn\nfrom sklearn.ensemble import RandomForestRegressor\n# from xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\nfrom sklearn.preprocessing import MinMaxScaler\n\n# importing data\nfinal = pd.read_csv('/groups/ESS3/aalnaim/cmaq/training.csv')\n# final = pd.read_csv('/Users/uhhmed/localCMAQ/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\n# Initialize a normalizer\n# scaler = MinMaxScaler(feature_range=(0, 1))\n# final[final.columns] = scaler.fit_transform(final)\n\n# Make coords coarse by removing decimals\n# final['Latitude_coarse'] = round(final['Latitude'])\n# final['Longitude_coarse'] = round(final['Longitude'])\n\n# Split time of day into value ranges.\n# Hours 0 - 3 is value 1 (Midnight), 4 - 7 is value 2 (Early Morning), 8 - 11 is value 3 (Morning), 12 - 15 is value 4 (Noon), 16 - 19 is value 5 (Evening), 20 - 23 is value 6 (Night)\n# final['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\nfinal['Latitude_Coarse_5_Degree'] = 5 * round(final['Latitude']/5)\nfinal['Longitude_Coarse_5_Degree'] = 5 * round(final['Longitude']/5)\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3', 'Latitude', 'Longitude', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : "    Latitude  Longitude  AirNOW_O3  CMAQ12KM_O3(ppb)  ...  CFRAC  month  day  hours\n0  30.260300 -81.453300       14.0              21.0  ...    0.0      8    5     12\n1  42.770802 -71.102798       40.0              25.0  ...    0.0      8    5     12\n2  34.528599 -86.970596        8.0              14.0  ...    0.0      8    5     12\n3  42.194401 -72.555603       23.0              25.0  ...    0.0      8    5     12\n4  34.751801 -82.256699        8.0              17.0  ...    0.0      8    5     12\n\n[5 rows x 18 columns]\ninput shape: (55900, 3)\nused as inputs:  Index(['CMAQ12KM_O3(ppb)', 'Latitude_Coarse_5_Degree',\n       'Longitude_Coarse_5_Degree'],\n      dtype='object')\n/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1661387201975,
  "history_end_time" : 1661388035318,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "qLseain31vWp",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\n# import sklearn\nfrom sklearn.ensemble import RandomForestRegressor\n# from xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\nfrom sklearn.preprocessing import MinMaxScaler\n\n# importing data\n# final = pd.read_csv('/groups/ESS/aalnaim/cmaq/training.csv')\nfinal = pd.read_csv('/Users/uhhmed/localCMAQ/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\n# Initialize a normalizer\n# scaler = MinMaxScaler(feature_range=(0, 1))\n# final[final.columns] = scaler.fit_transform(final)\n\n# Make coords coarse by removing decimals\n# final['Latitude_coarse'] = round(final['Latitude'])\n# final['Longitude_coarse'] = round(final['Longitude'])\n\n# Split time of day into value ranges.\n# Hours 0 - 3 is value 1 (Midnight), 4 - 7 is value 2 (Early Morning), 8 - 11 is value 3 (Morning), 12 - 15 is value 4 (Noon), 16 - 19 is value 5 (Evening), 20 - 23 is value 6 (Night)\nfinal['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\nfinal['Latitude_Coarse_0.1_Degree'] = 0.1 * round(final['Latitude']/0.1)\nfinal['Longitude_Coarse_0.1_Degree'] = 0.1 * round(final['Longitude']/0.1)\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3', 'Latitude', 'Longitude'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : "    Latitude   Longitude  AirNOW_O3  CMAQ12KM_O3(ppb)  ...  CFRAC  month  day  hours\n0  44.232498  -79.781403       43.0              35.0  ...    1.0      7    1     12\n1  32.205002 -110.877197       35.0              15.0  ...    0.0      7    1     12\n2  35.438557  -81.276749       21.0              19.0  ...    0.0      7    1     12\n3  41.644066  -83.546249       50.0              27.0  ...    0.0      7    1     12\n4  46.205601  -93.758904       25.0              18.0  ...    0.0      7    1     12\n[5 rows x 18 columns]\ninput shape: (862076, 18)\nused as inputs:  Index(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)',\n       'WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day',\n       'hours', 'time_of_day', 'Latitude_Coarse_0.1_Degree',\n       'Longitude_Coarse_0.1_Degree'],\n      dtype='object')\n",
  "history_begin_time" : 1661377162205,
  "history_end_time" : 1661377816342,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "1G6ZYO3EMm2Q",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\n# import sklearn\nfrom sklearn.ensemble import RandomForestRegressor\n# from xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\nfrom sklearn.preprocessing import MinMaxScaler\n\n# importing data\n# final = pd.read_csv('/groups/ESS/aalnaim/cmaq/training.csv')\nfinal = pd.read_csv('/Users/uhhmed/localCMAQ/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\n# Initialize a normalizer\n# scaler = MinMaxScaler(feature_range=(0, 1))\n# final[final.columns] = scaler.fit_transform(final)\n\n# Make coords coarse by removing decimals\n# final['Latitude_coarse'] = round(final['Latitude'])\n# final['Longitude_coarse'] = round(final['Longitude'])\n\n# Split time of day into value ranges.\n# Hours 0 - 3 is value 1 (Midnight), 4 - 7 is value 2 (Early Morning), 8 - 11 is value 3 (Morning), 12 - 15 is value 4 (Noon), 16 - 19 is value 5 (Evening), 20 - 23 is value 6 (Night)\nfinal['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\nfinal['Latitude_ExtraCoarse'] = 0.1 * round(final['Latitude']/0.1)\nfinal['Longitude_ExtraCoarse'] = 0.1 * round(final['Longitude']/0.1)\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3', 'Latitude', 'Longitude'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : "    Latitude   Longitude  AirNOW_O3  CMAQ12KM_O3(ppb)  ...  CFRAC  month  day  hours\n0  44.232498  -79.781403       43.0              35.0  ...    1.0      7    1     12\n1  32.205002 -110.877197       35.0              15.0  ...    0.0      7    1     12\n2  35.438557  -81.276749       21.0              19.0  ...    0.0      7    1     12\n3  41.644066  -83.546249       50.0              27.0  ...    0.0      7    1     12\n4  46.205601  -93.758904       25.0              18.0  ...    0.0      7    1     12\n[5 rows x 18 columns]\ninput shape: (862076, 18)\nused as inputs:  Index(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)',\n       'WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day',\n       'hours', 'time_of_day', 'Latitude_ExtraCoarse',\n       'Longitude_ExtraCoarse'],\n      dtype='object')\n",
  "history_begin_time" : 1661373776352,
  "history_end_time" : 1661374436157,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "8EtlJfrXY9uj",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\nfrom sklearn.preprocessing import MinMaxScaler\n\n# importing data\n# final = pd.read_csv('/groups/ESS/aalnaim/cmaq/training.csv')\nfinal = pd.read_csv('/Users/uhhmed/localCMAQ/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\n# Initialize a normalizer\n# scaler = MinMaxScaler(feature_range=(0, 1))\n# final[final.columns] = scaler.fit_transform(final)\n\n# Make coords coarse by removing decimals\n# final['Latitude_coarse'] = round(final['Latitude'])\n# final['Longitude_coarse'] = round(final['Longitude'])\n\n# Split time of day into value ranges.\n# Hours 0 - 3 is value 1 (Midnight), 4 - 7 is value 2 (Early Morning), 8 - 11 is value 3 (Morning), 12 - 15 is value 4 (Noon), 16 - 19 is value 5 (Evening), 20 - 23 is value 6 (Night)\nfinal['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\nfinal['Latitude_ExtraCoarse'] = 0.1 * round(final['Latitude']/0.1)\nfinal['Longitude_ExtraCoarse'] = 0.1 * round(final['Longitude']/0.1)\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3', 'Latitude', 'Longitude'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : "",
  "history_begin_time" : 1661373070469,
  "history_end_time" : 1661373621595,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "d30ArnaWvQ36",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\nfrom sklearn.preprocessing import MinMaxScaler\n\n# importing data\nfinal = pd.read_csv('/groups/ESS/aalnaim/cmaq/training.csv')\n# final = pd.read_csv('/Users/uhhmed/localCMAQ/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\n# Initialize a normalizer\n# scaler = MinMaxScaler(feature_range=(0, 1))\n# final[final.columns] = scaler.fit_transform(final)\n\n# Make coords coarse by removing decimals\n# final['Latitude_coarse'] = round(final['Latitude'])\n# final['Longitude_coarse'] = round(final['Longitude'])\n\n# Split time of day into value ranges.\n# Hours 0 - 3 is value 1 (Midnight), 4 - 7 is value 2 (Early Morning), 8 - 11 is value 3 (Morning), 12 - 15 is value 4 (Noon), 16 - 19 is value 5 (Evening), 20 - 23 is value 6 (Night)\nfinal['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\nfinal['Latitude_ExtraCoarse'] = 0.1 * round(final['Latitude']/0.1)\nfinal['Longitude_ExtraCoarse'] = 0.1 * round(final['Longitude']/0.1)\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3', 'Latitude', 'Longitude'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : "    Latitude   Longitude  AirNOW_O3  CMAQ12KM_O3(ppb)  ...  CFRAC  month  day  hours\n0  44.232498  -79.781403       43.0              35.0  ...    1.0      7    1     12\n1  32.205002 -110.877197       35.0              15.0  ...    0.0      7    1     12\n2  35.438557  -81.276749       21.0              19.0  ...    0.0      7    1     12\n3  41.644066  -83.546249       50.0              27.0  ...    0.0      7    1     12\n4  46.205601  -93.758904       25.0              18.0  ...    0.0      7    1     12\n\n[5 rows x 18 columns]\ninput shape: (862076, 18)\nused as inputs:  Index(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)',\n       'WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day',\n       'hours', 'time_of_day', 'Latitude_ExtraCoarse',\n       'Longitude_ExtraCoarse'],\n      dtype='object')\n/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1661344572140,
  "history_end_time" : 1661344953856,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "1pnKV7yLEVFY",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\nfrom sklearn.preprocessing import MinMaxScaler\n\n# importing data\nfinal = pd.read_csv('/groups/ESS/aalnaim/cmaq/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\n# Initialize a normalizer\n# scaler = MinMaxScaler(feature_range=(0, 1))\n# final[final.columns] = scaler.fit_transform(final)\n\n# Make coords coarse by removing decimals\n# final['Latitude_coarse'] = round(final['Latitude'])\n# final['Longitude_coarse'] = round(final['Longitude'])\n\n# Split time of day into value ranges.\n# Hours 0 - 3 is value 1 (Midnight), 4 - 7 is value 2 (Early Morning), 8 - 11 is value 3 (Morning), 12 - 15 is value 4 (Noon), 16 - 19 is value 5 (Evening), 20 - 23 is value 6 (Night)\nfinal['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\nfinal['Latitude_ExtraCoarse'] = 0.1 * round(final['Latitude']/0.1)\nfinal['Longitude_ExtraCoarse'] = 0.1 * round(final['Longitude']/0.1)\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3', 'Latitude', 'Longitude'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : null,
  "history_begin_time" : 1661322893094,
  "history_end_time" : null,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : null,
  "indicator" : null
},{
  "history_id" : "rxzjNz0IVG75",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\nfrom sklearn.preprocessing import MinMaxScaler\n\n# importing data\nfinal = pd.read_csv('/groups/ESS/aalnaim/cmaq/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\n# Initialize a normalizer\n# scaler = MinMaxScaler(feature_range=(0, 1))\n# final[final.columns] = scaler.fit_transform(final)\n\n# Make coords coarse by removing decimals\n# final['Latitude_coarse'] = round(final['Latitude'])\n# final['Longitude_coarse'] = round(final['Longitude'])\n\n# Split time of day into value ranges.\n# Hours 0 - 3 is value 1 (Midnight), 4 - 7 is value 2 (Early Morning), 8 - 11 is value 3 (Morning), 12 - 15 is value 4 (Noon), 16 - 19 is value 5 (Evening), 20 - 23 is value 6 (Night)\nfinal['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\nfinal['Latitude_ExtraCoarse'] = 0.1 * round(final['Latitude']/0.1)\nfinal['Longitude_ExtraCoarse'] = 0.1 * round(final['Longitude']/0.1)\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3', 'Latitude', 'Longitude'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : "    Latitude   Longitude  AirNOW_O3  CMAQ12KM_O3(ppb)  ...  CFRAC  month  day  hours\n0  44.232498  -79.781403       43.0              35.0  ...    1.0      7    1     12\n1  32.205002 -110.877197       35.0              15.0  ...    0.0      7    1     12\n2  35.438557  -81.276749       21.0              19.0  ...    0.0      7    1     12\n3  41.644066  -83.546249       50.0              27.0  ...    0.0      7    1     12\n4  46.205601  -93.758904       25.0              18.0  ...    0.0      7    1     12\n\n[5 rows x 18 columns]\ninput shape: (862076, 18)\nused as inputs:  Index(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)',\n       'WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day',\n       'hours', 'time_of_day', 'Latitude_ExtraCoarse',\n       'Longitude_ExtraCoarse'],\n      dtype='object')\n/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1661322210247,
  "history_end_time" : 1661322900803,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "aPexoXOq2QjB",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\nfrom sklearn.preprocessing import MinMaxScaler\n\n# importing data\nfinal = pd.read_csv('/groups/ESS/aalnaim/cmaq/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\n# Initialize a normalizer\n# scaler = MinMaxScaler(feature_range=(0, 1))\n# final[final.columns] = scaler.fit_transform(final)\n\n# Make coords coarse by removing decimals\n# final['Latitude_coarse'] = round(final['Latitude'])\n# final['Longitude_coarse'] = round(final['Longitude'])\n\n# Split time of day into value ranges.\n# Hours 0 - 3 is value 1 (Midnight), 4 - 7 is value 2 (Early Morning), 8 - 11 is value 3 (Morning), 12 - 15 is value 4 (Noon), 16 - 19 is value 5 (Evening), 20 - 23 is value 6 (Night)\nfinal['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\nfinal['Latitude_ExtraCoarse'] = 0.1 * round(final['Latitude']/0.1)\nfinal['Longitude_ExtraCoarse'] = 0.1 * round(final['Longitude']/0.1)\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3', 'Latitude', 'Longitude'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : null,
  "history_begin_time" : 1661322123756,
  "history_end_time" : null,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : null,
  "indicator" : null
},{
  "history_id" : "0CAwGDmmTt3a",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\nfrom sklearn.preprocessing import MinMaxScaler\n\n# importing data\nfinal = pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\n# Initialize a normalizer\n# scaler = MinMaxScaler(feature_range=(0, 1))\n# final[final.columns] = scaler.fit_transform(final)\n\n# Make coords coarse by removing decimals\n# final['Latitude_coarse'] = round(final['Latitude'])\n# final['Longitude_coarse'] = round(final['Longitude'])\n\n# Split time of day into value ranges.\n# Hours 0 - 3 is value 1 (Midnight), 4 - 7 is value 2 (Early Morning), 8 - 11 is value 3 (Morning), 12 - 15 is value 4 (Noon), 16 - 19 is value 5 (Evening), 20 - 23 is value 6 (Night)\nfinal['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\nfinal['Latitude_ExtraCoarse'] = 0.1 * round(final['Latitude']/0.1)\nfinal['Longitude_ExtraCoarse'] = 0.1 * round(final['Longitude']/0.1)\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3', 'Latitude', 'Longitude'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : "    Latitude   Longitude  AirNOW_O3  CMAQ12KM_O3(ppb)  ...  CFRAC  month  day  hours\n0  44.232498  -79.781403       43.0              35.0  ...    1.0      7    1     12\n1  32.205002 -110.877197       35.0              15.0  ...    0.0      7    1     12\n2  35.438557  -81.276749       21.0              19.0  ...    0.0      7    1     12\n3  41.644066  -83.546249       50.0              27.0  ...    0.0      7    1     12\n4  46.205601  -93.758904       25.0              18.0  ...    0.0      7    1     12\n\n[5 rows x 18 columns]\ninput shape: (862076, 18)\nused as inputs:  Index(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)',\n       'WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day',\n       'hours', 'time_of_day', 'Latitude_ExtraCoarse',\n       'Longitude_ExtraCoarse'],\n      dtype='object')\n/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1661321192689,
  "history_end_time" : 1661322134802,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "bU8em6o9Uqjz",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\nfrom sklearn.preprocessing import MinMaxScaler\n\n# importing data\nfinal = pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\n# Initialize a normalizer\n# scaler = MinMaxScaler(feature_range=(0, 1))\n# final[final.columns] = scaler.fit_transform(final)\n\n# Make coords coarse by removing decimals\n# final['Latitude_coarse'] = round(final['Latitude'])\n# final['Longitude_coarse'] = round(final['Longitude'])\n\n# Split time of day into value ranges.\n# Hours 0 - 3 is value 1 (Midnight), 4 - 7 is value 2 (Early Morning), 8 - 11 is value 3 (Morning), 12 - 15 is value 4 (Noon), 16 - 19 is value 5 (Evening), 20 - 23 is value 6 (Night)\nfinal['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\nfinal['Latitude_ExtraCoarse'] = 0.1 * round(final['Latitude']/0.1)\nfinal['Longitude_ExtraCoarse'] = 0.1 * round(final['Longitude']/0.1)\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3', 'Latitude', 'Longitude'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : "Running",
  "history_begin_time" : 1661318424512,
  "history_end_time" : 1661321533568,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "wWqkmwmYoz9D",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\nfrom sklearn.preprocessing import MinMaxScaler\n\n# importing data\nfinal = pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\n# Initialize a normalizer\n# scaler = MinMaxScaler(feature_range=(0, 1))\n# final[final.columns] = scaler.fit_transform(final)\n\n# Make coords coarse by removing decimals\n# final['Latitude_coarse'] = round(final['Latitude'])\n# final['Longitude_coarse'] = round(final['Longitude'])\n\n# Split time of day into value ranges.\n# Hours 0 - 3 is value 1 (Midnight), 4 - 7 is value 2 (Early Morning), 8 - 11 is value 3 (Morning), 12 - 15 is value 4 (Noon), 16 - 19 is value 5 (Evening), 20 - 23 is value 6 (Night)\nfinal['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\nfinal['Latitude_ExtraCoarse'] = 0.1 * round(final['Latitude']/0.1)\nfinal['Longitude_ExtraCoarse'] = 0.1 * round(final['Longitude']/0.1)\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3', 'Latitude', 'Longitude', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)',  'RGRND(W/m2)', 'CFRAC'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : "",
  "history_begin_time" : 1661265698106,
  "history_end_time" : 1661266138470,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "Ky03TjOTkqcY",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\nfrom sklearn.preprocessing import MinMaxScaler\n\n# importing data\nfinal = pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\n# Initialize a normalizer\n# scaler = MinMaxScaler(feature_range=(0, 1))\n# final[final.columns] = scaler.fit_transform(final)\n\n# Make coords coarse by removing decimals\n# final['Latitude_coarse'] = round(final['Latitude'])\n# final['Longitude_coarse'] = round(final['Longitude'])\n\n# Split time of day into value ranges.\n# Hours 0 - 3 is value 1 (Midnight), 4 - 7 is value 2 (Early Morning), 8 - 11 is value 3 (Morning), 12 - 15 is value 4 (Noon), 16 - 19 is value 5 (Evening), 20 - 23 is value 6 (Night)\nfinal['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\nfinal['Latitude_ExtraCoarse'] = 0.1 * round(final['Latitude']/0.1)\nfinal['Longitude_ExtraCoarse'] = 0.1 * round(final['Longitude']/0.1)\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3', 'Latitude', 'Longitude', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)',  'RGRND(W/m2)', 'CFRAC'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : "",
  "history_begin_time" : 1661265209282,
  "history_end_time" : 1661265601162,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "ia34KyX77nj7",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\nfrom sklearn.preprocessing import MinMaxScaler\n\n# importing data\nfinal = pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\n# Initialize a normalizer\n# scaler = MinMaxScaler(feature_range=(0, 1))\n# final[final.columns] = scaler.fit_transform(final)\n\n# Make coords coarse by removing decimals\n# final['Latitude_coarse'] = round(final['Latitude'])\n# final['Longitude_coarse'] = round(final['Longitude'])\n\n# Split time of day into value ranges.\n# Hours 0 - 3 is value 1 (Midnight), 4 - 7 is value 2 (Early Morning), 8 - 11 is value 3 (Morning), 12 - 15 is value 4 (Noon), 16 - 19 is value 5 (Evening), 20 - 23 is value 6 (Night)\nfinal['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\nfinal['Latitude_ExtraCoarse'] = 0.1 * round(final['Latitude']/0.1)\nfinal['Longitude_ExtraCoarse'] = 0.1 * round(final['Longitude']/0.1)\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3', 'Latitude', 'Longitude', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)',  'RGRND(W/m2)', 'CFRAC'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : null,
  "history_begin_time" : 1661265149543,
  "history_end_time" : null,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : null,
  "indicator" : null
},{
  "history_id" : "uLIP1YkQYxdn",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n# from sklearn.preprocessing import MinMaxScaler\n\n# importing data\nfinal = pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\n# Initialize a normalizer\n# scaler = MinMaxScaler(feature_range=(0, 1))\n# final[final.columns] = scaler.fit_transform(final)\n\n# Make coords coarse by removing decimals\n# final['Latitude_coarse'] = round(final['Latitude'])\n# final['Longitude_coarse'] = round(final['Longitude'])\n\n# Split time of day into value ranges.\n# Hours 0 - 3 is value 1 (Midnight), 4 - 7 is value 2 (Early Morning), 8 - 11 is value 3 (Morning), 12 - 15 is value 4 (Noon), 16 - 19 is value 5 (Evening), 20 - 23 is value 6 (Night)\n# final['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\n# final['Latitude_ExtraCoarse'] = 5 * round(final['Latitude']/5)\n# final['Longitude_ExtraCoarse'] = 5 * round(final['Longitude']/5)\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3', 'Latitude', 'Longitude'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : "",
  "history_begin_time" : 1661263700288,
  "history_end_time" : 1661265179612,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "CUGQvCMTY9Wm",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\nfrom sklearn.preprocessing import MinMaxScaler\n\n# importing data\nfinal = pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\n# Initialize a normalizer\n# scaler = MinMaxScaler(feature_range=(0, 1))\n# final[final.columns] = scaler.fit_transform(final)\n\n# Make coords coarse by removing decimals\n# final['Latitude_coarse'] = round(final['Latitude'])\n# final['Longitude_coarse'] = round(final['Longitude'])\n\n# Split time of day into value ranges.\n# Hours 0 - 3 is value 1 (Midnight), 4 - 7 is value 2 (Early Morning), 8 - 11 is value 3 (Morning), 12 - 15 is value 4 (Noon), 16 - 19 is value 5 (Evening), 20 - 23 is value 6 (Night)\n# final['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\n# final['Latitude_ExtraCoarse'] = 5 * round(final['Latitude']/5)\n# final['Longitude_ExtraCoarse'] = 5 * round(final['Longitude']/5)\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3', 'Latitude', 'Longitude'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : "Running",
  "history_begin_time" : 1661262840772,
  "history_end_time" : 1661263429486,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "SnwuyjLAYhbr",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\nfrom sklearn.preprocessing import MinMaxScaler\n\n# importing data\nfinal = pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\n# Initialize a normalizer\n# scaler = MinMaxScaler(feature_range=(0, 1))\n# final[final.columns] = scaler.fit_transform(final)\n\n# Make coords coarse by removing decimals\n# final['Latitude_coarse'] = round(final['Latitude'])\n# final['Longitude_coarse'] = round(final['Longitude'])\n\n# Split time of day into value ranges.\n# Hours 0 - 3 is value 1 (Midnight), 4 - 7 is value 2 (Early Morning), 8 - 11 is value 3 (Morning), 12 - 15 is value 4 (Noon), 16 - 19 is value 5 (Evening), 20 - 23 is value 6 (Night)\n# final['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\n# final['Latitude_ExtraCoarse'] = 5 * round(final['Latitude']/5)\n# final['Longitude_ExtraCoarse'] = 5 * round(final['Longitude']/5)\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3', 'Latitude', 'Longitude'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : "",
  "history_begin_time" : 1661262321863,
  "history_end_time" : 1661262795620,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "zcIQkeIoD7SC",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\nfrom sklearn.preprocessing import MinMaxScaler\n\n# importing data\nfinal = pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\n# Initialize a normalizer\n# scaler = MinMaxScaler(feature_range=(0, 1))\n# final[final.columns] = scaler.fit_transform(final)\n\n# Make coords coarse by removing decimals\n# final['Latitude_coarse'] = round(final['Latitude'])\n# final['Longitude_coarse'] = round(final['Longitude'])\n\n# Split time of day into value ranges.\n# Hours 0 - 3 is value 1 (Midnight), 4 - 7 is value 2 (Early Morning), 8 - 11 is value 3 (Morning), 12 - 15 is value 4 (Noon), 16 - 19 is value 5 (Evening), 20 - 23 is value 6 (Night)\n# final['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\n# final['Latitude_ExtraCoarse'] = 5 * round(final['Latitude']/5)\n# final['Longitude_ExtraCoarse'] = 5 * round(final['Longitude']/5)\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3', 'Latitude', 'Longitude'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : "Running",
  "history_begin_time" : 1661261796967,
  "history_end_time" : 1661262297744,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "oKoPHtJzCWVr",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\nfrom sklearn.preprocessing import MinMaxScaler\n\n# importing data\nfinal = pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\n# Initialize a normalizer\n# scaler = MinMaxScaler(feature_range=(0, 1))\n# final[final.columns] = scaler.fit_transform(final)\n\n# Make coords coarse by removing decimals\n# final['Latitude_coarse'] = round(final['Latitude'])\n# final['Longitude_coarse'] = round(final['Longitude'])\n\n# Split time of day into value ranges.\n# Hours 0 - 3 is value 1 (Midnight), 4 - 7 is value 2 (Early Morning), 8 - 11 is value 3 (Morning), 12 - 15 is value 4 (Noon), 16 - 19 is value 5 (Evening), 20 - 23 is value 6 (Night)\n# final['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\n# final['Latitude_ExtraCoarse'] = 5 * round(final['Latitude']/5)\n# final['Longitude_ExtraCoarse'] = 5 * round(final['Longitude']/5)\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3', 'Latitude', 'Longitude', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)',  'RGRND(W/m2)', 'CFRAC'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : "    Latitude   Longitude  AirNOW_O3  CMAQ12KM_O3(ppb)  ...  CFRAC  month  day  hours\n0  44.232498  -79.781403       43.0              35.0  ...    1.0      7    1     12\n1  32.205002 -110.877197       35.0              15.0  ...    0.0      7    1     12\n2  35.438557  -81.276749       21.0              19.0  ...    0.0      7    1     12\n3  41.644066  -83.546249       50.0              27.0  ...    0.0      7    1     12\n4  46.205601  -93.758904       25.0              18.0  ...    0.0      7    1     12\n\n[5 rows x 18 columns]\ninput shape: (862076, 4)\nused as inputs:  Index(['CMAQ12KM_O3(ppb)', 'month', 'day', 'hours'], dtype='object')\n",
  "history_begin_time" : 1661151441826,
  "history_end_time" : 1661261713103,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "zyyFtNBj4BV8",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\nfrom sklearn.preprocessing import MinMaxScaler\n\n# importing data\nfinal = pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\n# Initialize a normalizer\n# scaler = MinMaxScaler(feature_range=(0, 1))\n# final[final.columns] = scaler.fit_transform(final)\n\n# Make coords coarse by removing decimals\n# final['Latitude_coarse'] = round(final['Latitude'])\n# final['Longitude_coarse'] = round(final['Longitude'])\n\n# Split time of day into value ranges.\n# Hours 0 - 3 is value 1 (Midnight), 4 - 7 is value 2 (Early Morning), 8 - 11 is value 3 (Morning), 12 - 15 is value 4 (Noon), 16 - 19 is value 5 (Evening), 20 - 23 is value 6 (Night)\n# final['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\n# final['Latitude_ExtraCoarse'] = 5 * round(final['Latitude']/5)\n# final['Longitude_ExtraCoarse'] = 5 * round(final['Longitude']/5)\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3', 'Latitude', 'Longitude', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)',  'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : "    Latitude   Longitude  AirNOW_O3  CMAQ12KM_O3(ppb)  ...  CFRAC  month  day  hours\n0  44.232498  -79.781403       43.0              35.0  ...    1.0      7    1     12\n1  32.205002 -110.877197       35.0              15.0  ...    0.0      7    1     12\n2  35.438557  -81.276749       21.0              19.0  ...    0.0      7    1     12\n3  41.644066  -83.546249       50.0              27.0  ...    0.0      7    1     12\n4  46.205601  -93.758904       25.0              18.0  ...    0.0      7    1     12\n\n[5 rows x 18 columns]\ninput shape: (862076, 2)\nused as inputs:  Index(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)'], dtype='object')\n",
  "history_begin_time" : 1661148498214,
  "history_end_time" : 1661149440887,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "0qDFLGdgVp5r",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\nfrom sklearn.preprocessing import MinMaxScaler\n\n# importing data\nfinal = pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\n# Initialize a normalizer\n# scaler = MinMaxScaler(feature_range=(0, 1))\n# final[final.columns] = scaler.fit_transform(final)\n\n# Make coords coarse by removing decimals\n# final['Latitude_coarse'] = round(final['Latitude'])\n# final['Longitude_coarse'] = round(final['Longitude'])\n\n# Split time of day into value ranges.\n# Hours 0 - 3 is value 1 (Midnight), 4 - 7 is value 2 (Early Morning), 8 - 11 is value 3 (Morning), 12 - 15 is value 4 (Noon), 16 - 19 is value 5 (Evening), 20 - 23 is value 6 (Night)\n# final['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\n# final['Latitude_ExtraCoarse'] = 5 * round(final['Latitude']/5)\n# final['Longitude_ExtraCoarse'] = 5 * round(final['Longitude']/5)\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3', 'Latitude', 'Longitude', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)',  'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : "    Latitude   Longitude  AirNOW_O3  CMAQ12KM_O3(ppb)  ...  CFRAC  month  day  hours\n0  44.232498  -79.781403       43.0              35.0  ...    1.0      7    1     12\n1  32.205002 -110.877197       35.0              15.0  ...    0.0      7    1     12\n2  35.438557  -81.276749       21.0              19.0  ...    0.0      7    1     12\n3  41.644066  -83.546249       50.0              27.0  ...    0.0      7    1     12\n4  46.205601  -93.758904       25.0              18.0  ...    0.0      7    1     12\n\n[5 rows x 18 columns]\ninput shape: (862076, 1)\nused as inputs:  Index(['CMAQ12KM_O3(ppb)'], dtype='object')\n",
  "history_begin_time" : 1661144211825,
  "history_end_time" : 1661149440263,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "kTXLXijlBKT2",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\nfrom sklearn.preprocessing import MinMaxScaler\n\n# importing data\nfinal = pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\n# Initialize a normalizer\n# scaler = MinMaxScaler(feature_range=(0, 1))\n# final[final.columns] = scaler.fit_transform(final)\n\n# Make coords coarse by removing decimals\n# final['Latitude_coarse'] = round(final['Latitude'])\n# final['Longitude_coarse'] = round(final['Longitude'])\n\n# Split time of day into value ranges.\n# Hours 0 - 3 is value 1 (Midnight), 4 - 7 is value 2 (Early Morning), 8 - 11 is value 3 (Morning), 12 - 15 is value 4 (Noon), 16 - 19 is value 5 (Evening), 20 - 23 is value 6 (Night)\n# final['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\n# final['Latitude_ExtraCoarse'] = 5 * round(final['Latitude']/5)\n# final['Longitude_ExtraCoarse'] = 5 * round(final['Longitude']/5)\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3', 'Latitude', 'Longitude', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)',  'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : "    Latitude   Longitude  AirNOW_O3  CMAQ12KM_O3(ppb)  ...  CFRAC  month  day  hours\n0  44.232498  -79.781403       43.0              35.0  ...    1.0      7    1     12\n1  32.205002 -110.877197       35.0              15.0  ...    0.0      7    1     12\n2  35.438557  -81.276749       21.0              19.0  ...    0.0      7    1     12\n3  41.644066  -83.546249       50.0              27.0  ...    0.0      7    1     12\n4  46.205601  -93.758904       25.0              18.0  ...    0.0      7    1     12\n\n[5 rows x 18 columns]\ninput shape: (862076, 1)\nused as inputs:  Index(['CMAQ12KM_O3(ppb)'], dtype='object')\n/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1661143794288,
  "history_end_time" : 1661149439782,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "RV9syZrfkVZZ",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\nfrom sklearn.preprocessing import MinMaxScaler\n\n# importing data\nfinal = pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\n# Initialize a normalizer\n# scaler = MinMaxScaler(feature_range=(0, 1))\n# final[final.columns] = scaler.fit_transform(final)\n\n# Make coords coarse by removing decimals\n# final['Latitude_coarse'] = round(final['Latitude'])\n# final['Longitude_coarse'] = round(final['Longitude'])\n\n# Split time of day into value ranges.\n# Hours 0 - 3 is value 1 (Midnight), 4 - 7 is value 2 (Early Morning), 8 - 11 is value 3 (Morning), 12 - 15 is value 4 (Noon), 16 - 19 is value 5 (Evening), 20 - 23 is value 6 (Night)\n# final['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\n# final['Latitude_ExtraCoarse'] = 5 * round(final['Latitude']/5)\n# final['Longitude_ExtraCoarse'] = 5 * round(final['Longitude']/5)\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3', 'Latitude', 'Longitude', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : "    Latitude   Longitude  AirNOW_O3  CMAQ12KM_O3(ppb)  ...  CFRAC  month  day  hours\n0  44.232498  -79.781403       43.0              35.0  ...    1.0      7    1     12\n1  32.205002 -110.877197       35.0              15.0  ...    0.0      7    1     12\n2  35.438557  -81.276749       21.0              19.0  ...    0.0      7    1     12\n3  41.644066  -83.546249       50.0              27.0  ...    0.0      7    1     12\n4  46.205601  -93.758904       25.0              18.0  ...    0.0      7    1     12\n\n[5 rows x 18 columns]\ninput shape: (862076, 2)\nused as inputs:  Index(['CMAQ12KM_O3(ppb)', 'PRSFC(Pa)'], dtype='object')\n/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1661143039775,
  "history_end_time" : 1661143725540,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "VhaxUZYipYgh",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\nfrom sklearn.preprocessing import MinMaxScaler\n\n# importing data\nfinal = pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\n# Initialize a normalizer\n# scaler = MinMaxScaler(feature_range=(0, 1))\n# final[final.columns] = scaler.fit_transform(final)\n\n# Make coords coarse by removing decimals\n# final['Latitude_coarse'] = round(final['Latitude'])\n# final['Longitude_coarse'] = round(final['Longitude'])\n\n# Split time of day into value ranges.\n# Hours 0 - 3 is value 1 (Midnight), 4 - 7 is value 2 (Early Morning), 8 - 11 is value 3 (Morning), 12 - 15 is value 4 (Noon), 16 - 19 is value 5 (Evening), 20 - 23 is value 6 (Night)\n# final['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\n# final['Latitude_ExtraCoarse'] = 5 * round(final['Latitude']/5)\n# final['Longitude_ExtraCoarse'] = 5 * round(final['Longitude']/5)\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3', 'Latitude', 'Longitude', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : "    Latitude  Longitude  AirNOW_O3  CMAQ12KM_O3(ppb)  ...  CFRAC  month  day  hours\n0  30.260300 -81.453300       14.0              21.0  ...    0.0      8    5     12\n1  42.770802 -71.102798       40.0              25.0  ...    0.0      8    5     12\n2  34.528599 -86.970596        8.0              14.0  ...    0.0      8    5     12\n3  42.194401 -72.555603       23.0              25.0  ...    0.0      8    5     12\n4  34.751801 -82.256699        8.0              17.0  ...    0.0      8    5     12\n\n[5 rows x 18 columns]\ninput shape: (55900, 3)\nused as inputs:  Index(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'PRSFC(Pa)'], dtype='object')\n/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1661047918382,
  "history_end_time" : 1661143725068,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "f325qh2f336",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\nfrom sklearn.preprocessing import MinMaxScaler\n\n# importing data\nfinal = pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\n# Initialize a normalizer\n# scaler = MinMaxScaler(feature_range=(0, 1))\n# final[final.columns] = scaler.fit_transform(final)\n\n# Make coords coarse by removing decimals\n# final['Latitude_coarse'] = round(final['Latitude'])\n# final['Longitude_coarse'] = round(final['Longitude'])\n\n# Split time of day into value ranges.\n# Hours 0 - 3 is value 1 (Midnight), 4 - 7 is value 2 (Early Morning), 8 - 11 is value 3 (Morning), 12 - 15 is value 4 (Noon), 16 - 19 is value 5 (Evening), 20 - 23 is value 6 (Night)\n# final['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\n# final['Latitude_ExtraCoarse'] = 5 * round(final['Latitude']/5)\n# final['Longitude_ExtraCoarse'] = 5 * round(final['Longitude']/5)\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3', 'Latitude', 'Longitude', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PBL(m)', 'TEMP2(K)','WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : "Running",
  "history_begin_time" : 1661047435246,
  "history_end_time" : 1661143724587,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "5uYt14fSPdjN",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\nfrom sklearn.preprocessing import MinMaxScaler\n\n# importing data\nfinal = pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\n# Initialize a normalizer\n# scaler = MinMaxScaler(feature_range=(0, 1))\n# final[final.columns] = scaler.fit_transform(final)\n\n# Make coords coarse by removing decimals\nfinal['Latitude_coarse'] = round(final['Latitude'])\nfinal['Longitude_coarse'] = round(final['Longitude'])\n\n# Split time of day into value ranges.\n# Hours 0 - 3 is value 1 (Midnight), 4 - 7 is value 2 (Early Morning), 8 - 11 is value 3 (Morning), 12 - 15 is value 4 (Noon), 16 - 19 is value 5 (Evening), 20 - 23 is value 6 (Night)\nfinal['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\n# final['Latitude'] = 5 * round(final['Latitude']/5)\n# final['Longitude'] = 5 * round(final['Longitude']/5)\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3', 'Latitude', 'Longitude'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : "    Latitude  Longitude  AirNOW_O3  CMAQ12KM_O3(ppb)  ...  CFRAC  month  day  hours\n0  30.260300 -81.453300       14.0              21.0  ...    0.0      8    5     12\n1  42.770802 -71.102798       40.0              25.0  ...    0.0      8    5     12\n2  34.528599 -86.970596        8.0              14.0  ...    0.0      8    5     12\n3  42.194401 -72.555603       23.0              25.0  ...    0.0      8    5     12\n4  34.751801 -82.256699        8.0              17.0  ...    0.0      8    5     12\n\n[5 rows x 18 columns]\ninput shape: (55900, 18)\nused as inputs:  Index(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)',\n       'WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day',\n       'hours', 'Latitude_coarse', 'Longitude_coarse', 'time_of_day'],\n      dtype='object')\n/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660978048428,
  "history_end_time" : 1661143722440,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "4uvx7qa30l4",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\nfrom sklearn.preprocessing import MinMaxScaler\n\n# importing data\nfinal = pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\n# Initialize a normalizer\n# scaler = MinMaxScaler(feature_range=(0, 1))\n# final[final.columns] = scaler.fit_transform(final)\n\n# Make coords coarse by removing decimals\nfinal['Latitude_coarse'] = round(final['Latitude'])\nfinal['Longitude_coarse'] = round(final['Longitude'])\n\n# Split time of day into value ranges.\n# Hours 0 - 3 is value 1 (Midnight), 4 - 7 is value 2 (Early Morning), 8 - 11 is value 3 (Morning), 12 - 15 is value 4 (Noon), 16 - 19 is value 5 (Evening), 20 - 23 is value 6 (Night)\nfinal['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\n# final['Latitude'] = 5 * round(final['Latitude']/5)\n# final['Longitude'] = 5 * round(final['Longitude']/5)\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3', 'Latitude', 'Longitude',  'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)',\n               'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : "    Latitude  Longitude  AirNOW_O3  CMAQ12KM_O3(ppb)  ...  CFRAC  month  day  hours\n0  30.260300 -81.453300       14.0              21.0  ...    0.0      8    5     12\n1  42.770802 -71.102798       40.0              25.0  ...    0.0      8    5     12\n2  34.528599 -86.970596        8.0              14.0  ...    0.0      8    5     12\n3  42.194401 -72.555603       23.0              25.0  ...    0.0      8    5     12\n4  34.751801 -82.256699        8.0              17.0  ...    0.0      8    5     12\n\n[5 rows x 18 columns]\ninput shape: (55900, 5)\nused as inputs:  Index(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'Latitude_coarse',\n       'Longitude_coarse', 'time_of_day'],\n      dtype='object')\n/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660969359712,
  "history_end_time" : 1660973594854,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "205sL37r1NjD",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\nfrom sklearn.preprocessing import MinMaxScaler\n\n# importing data\nfinal = pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\n# Initialize a normalizer\n# scaler = MinMaxScaler(feature_range=(0, 1))\n# final[final.columns] = scaler.fit_transform(final)\n\n# Make coords coarse by removing decimals\nfinal['Latitude_coarse'] = round(final['Latitude'])\nfinal['Longitude_coarse'] = round(final['Longitude'])\n\n# Split time of day into value ranges.\n# Hours 0 - 3 is value 1 (Midnight), 4 - 7 is value 2 (Early Morning), 8 - 11 is value 3 (Morning), 12 - 15 is value 4 (Noon), 16 - 19 is value 5 (Evening), 20 - 23 is value 6 (Night)\nfinal['time_of_day'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\n# final['Latitude'] = 5 * round(final['Latitude']/5)\n# final['Longitude'] = 5 * round(final['Longitude']/5)\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3', 'Latitude', 'Longitude', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)',\n               'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : "    Latitude  Longitude  AirNOW_O3  CMAQ12KM_O3(ppb)  ...  CFRAC  month  day  hours\n0  30.260300 -81.453300       14.0              21.0  ...    0.0      8    5     12\n1  42.770802 -71.102798       40.0              25.0  ...    0.0      8    5     12\n2  34.528599 -86.970596        8.0              14.0  ...    0.0      8    5     12\n3  42.194401 -72.555603       23.0              25.0  ...    0.0      8    5     12\n4  34.751801 -82.256699        8.0              17.0  ...    0.0      8    5     12\n\n[5 rows x 18 columns]\ninput shape: (55900, 4)\nused as inputs:  Index(['CMAQ12KM_O3(ppb)', 'Latitude_coarse', 'Longitude_coarse',\n       'time_of_day'],\n      dtype='object')\n/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660965127118,
  "history_end_time" : 1661143723553,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "9U8AqQyqstuk",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\nfrom sklearn.preprocessing import MinMaxScaler\n\n# importing data\nfinal = pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\n# Initialize a normalizer\n# scaler = MinMaxScaler(feature_range=(0, 1))\n# final[final.columns] = scaler.fit_transform(final)\n\n# Make coords coarse by removing decimals\nfinal['Latitude_coarse'] = round(final['Latitude'])\nfinal['Longitude_coarse'] = round(final['Longitude'])\n\n# Split time of day into value ranges.\n# Hours 0 - 3 is value 1 (Midnight), 4 - 7 is value 2 (Early Morning), 8 - 11 is value 3 (Morning), 12 - 15 is value 4 (Noon), 16 - 19 is value 5 (Evening), 20 - 23 is value 6 (Night)\nfinal['period'] = (final['hours'] % 24 + 4) // 4\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\n# final['Latitude'] = 5 * round(final['Latitude']/5)\n# final['Longitude'] = 5 * round(final['Longitude']/5)\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3', 'Latitude', 'Longitude', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)',\n               'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : "    Latitude  Longitude  AirNOW_O3  CMAQ12KM_O3(ppb)  ...  CFRAC  month  day  hours\n0  30.260300 -81.453300       14.0              21.0  ...    0.0      8    5     12\n1  42.770802 -71.102798       40.0              25.0  ...    0.0      8    5     12\n2  34.528599 -86.970596        8.0              14.0  ...    0.0      8    5     12\n3  42.194401 -72.555603       23.0              25.0  ...    0.0      8    5     12\n4  34.751801 -82.256699        8.0              17.0  ...    0.0      8    5     12\n\n[5 rows x 18 columns]\ninput shape: (55900, 4)\nused as inputs:  Index(['CMAQ12KM_O3(ppb)', 'Latitude_coarse', 'Longitude_coarse', 'period'], dtype='object')\n/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660965040058,
  "history_end_time" : 1661143727741,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "955QZY9F24Af",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\nfrom sklearn.preprocessing import MinMaxScaler\n\n# importing data\nfinal = pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\n# Initialize a normalizer\n# scaler = MinMaxScaler(feature_range=(0, 1))\n# final[final.columns] = scaler.fit_transform(final)\n\n# Make coords coarse by removing decimals\nfinal['Latitude_coarse'] = round(final['Latitude'])\nfinal['Longitude_coarse'] = round(final['Longitude'])\n\n# Split time of day into value ranges.\n# Hours 0 - 3 is value 1 (Midnight), 4 - 7 is value 2 (Early Morning), 8 - 11 is value 3 (Morning), 12 - 15 is value 4 (Noon), 16 - 19 is value 5 (Evening), 20 - 23 is value 6 (Night)\nfinal['period'] = (final['hours'] % 24 + 4) // 4\nfinal['period'].replace({1: 'Midnight',\n                      2: 'Early Morning',\n                      3: 'Morning',\n                      4: 'Noon',\n                      5: 'Evening',\n                      6: 'Night'}, inplace=True)\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\n# final['Latitude'] = 5 * round(final['Latitude']/5)\n# final['Longitude'] = 5 * round(final['Longitude']/5)\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3', 'Latitude', 'Longitude', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)',\n               'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : "    Latitude  Longitude  AirNOW_O3  CMAQ12KM_O3(ppb)  ...  CFRAC  month  day  hours\n0  30.260300 -81.453300       14.0              21.0  ...    0.0      8    5     12\n1  42.770802 -71.102798       40.0              25.0  ...    0.0      8    5     12\n2  34.528599 -86.970596        8.0              14.0  ...    0.0      8    5     12\n3  42.194401 -72.555603       23.0              25.0  ...    0.0      8    5     12\n4  34.751801 -82.256699        8.0              17.0  ...    0.0      8    5     12\n\n[5 rows x 18 columns]\ninput shape: (55900, 4)\nused as inputs:  Index(['CMAQ12KM_O3(ppb)', 'Latitude_coarse', 'Longitude_coarse', 'period'], dtype='object')\nTraceback (most recent call last):\n  File \"Train.py\", line 58, in <module>\n    rf.fit(X, y)\n  File \"/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/ensemble/_forest.py\", line 327, in fit\n    X, y = self._validate_data(\n  File \"/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/base.py\", line 581, in _validate_data\n    X, y = check_X_y(X, y, **check_params)\n  File \"/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/utils/validation.py\", line 964, in check_X_y\n    X = check_array(\n  File \"/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/utils/validation.py\", line 746, in check_array\n    array = np.asarray(array, order=order, dtype=dtype)\n  File \"/home/aalnaim/CMAQAI/lib/python3.8/site-packages/pandas/core/generic.py\", line 2072, in __array__\n    return np.asarray(self._values, dtype=dtype)\nValueError: could not convert string to float: 'Noon'\n",
  "history_begin_time" : 1660964778703,
  "history_end_time" : 1661143727289,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "SXK798x5mBIS",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\nfrom sklearn.preprocessing import MinMaxScaler\n\n# importing data\nfinal = pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\n# Initialize a normalizer\n# scaler = MinMaxScaler(feature_range=(0, 1))\n# final[final.columns] = scaler.fit_transform(final)\n\n# Make coords coarse by removing decimals\nfinal['Latitude_coarse'] = round(final['Latitude'])\nfinal['Longitude_coarse'] = round(final['Longitude'])\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\n# final['Latitude'] = 5 * round(final['Latitude']/5)\n# final['Longitude'] = 5 * round(final['Longitude']/5)\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3', 'Latitude', 'Longitude', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)',\n               'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : "    Latitude  Longitude  AirNOW_O3  CMAQ12KM_O3(ppb)  ...  CFRAC  month  day  hours\n0  30.260300 -81.453300       14.0              21.0  ...    0.0      8    5     12\n1  42.770802 -71.102798       40.0              25.0  ...    0.0      8    5     12\n2  34.528599 -86.970596        8.0              14.0  ...    0.0      8    5     12\n3  42.194401 -72.555603       23.0              25.0  ...    0.0      8    5     12\n4  34.751801 -82.256699        8.0              17.0  ...    0.0      8    5     12\n\n[5 rows x 18 columns]\ninput shape: (55900, 3)\nused as inputs:  Index(['CMAQ12KM_O3(ppb)', 'Latitude_coarse', 'Longitude_coarse'], dtype='object')\n/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660947085643,
  "history_end_time" : 1660947179296,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "DU0rupzm18Bb",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\nfrom sklearn.preprocessing import MinMaxScaler\n\n# importing data\nfinal = pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\n# Initialize a normalizer\n# scaler = MinMaxScaler(feature_range=(0, 1))\n# final[final.columns] = scaler.fit_transform(final)\n\n# Make coords coarse by removing decimals\n# final['Latitude'] = round(final['Latitude'])\n# final['Longitude'] = round(final['Longitude'])\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\n# final['Latitude'] = 5 * round(final['Latitude']/5)\n# final['Longitude'] = 5 * round(final['Longitude']/5)\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3', 'Latitude', 'Longitude', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)',\n               'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : "    Latitude  Longitude  AirNOW_O3  CMAQ12KM_O3(ppb)  ...  CFRAC  month  day  hours\n0  30.260300 -81.453300       14.0              21.0  ...    0.0      8    5     12\n1  42.770802 -71.102798       40.0              25.0  ...    0.0      8    5     12\n2  34.528599 -86.970596        8.0              14.0  ...    0.0      8    5     12\n3  42.194401 -72.555603       23.0              25.0  ...    0.0      8    5     12\n4  34.751801 -82.256699        8.0              17.0  ...    0.0      8    5     12\n\n[5 rows x 18 columns]\ninput shape: (55900, 6)\nused as inputs:  Index(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'PRSFC(Pa)', 'month', 'day',\n       'hours'],\n      dtype='object')\n/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660905118936,
  "history_end_time" : 1660905191617,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "N7CPpZ3xx4qW",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\nfrom sklearn.preprocessing import MinMaxScaler\n\n# importing data\nfinal = pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\n# Initialize a normalizer\n# scaler = MinMaxScaler(feature_range=(0, 1))\n# final[final.columns] = scaler.fit_transform(final)\n\n# Make coords coarse by removing decimals\n# final['Latitude'] = round(final['Latitude'])\n# final['Longitude'] = round(final['Longitude'])\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\n# final['Latitude'] = 5 * round(final['Latitude']/5)\n# final['Longitude'] = 5 * round(final['Longitude']/5)\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3', 'Latitude', 'Longitude', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)',\n               'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : "    Latitude  Longitude  AirNOW_O3  CMAQ12KM_O3(ppb)  ...  CFRAC  month  day  hours\n0  30.260300 -81.453300       14.0              21.0  ...    0.0      8    5     12\n1  42.770802 -71.102798       40.0              25.0  ...    0.0      8    5     12\n2  34.528599 -86.970596        8.0              14.0  ...    0.0      8    5     12\n3  42.194401 -72.555603       23.0              25.0  ...    0.0      8    5     12\n4  34.751801 -82.256699        8.0              17.0  ...    0.0      8    5     12\n\n[5 rows x 18 columns]\ninput shape: (55900, 5)\nused as inputs:  Index(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'month', 'day', 'hours'], dtype='object')\n/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660882016356,
  "history_end_time" : 1660904537209,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "f83m5vpnyc3",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\nfrom sklearn.preprocessing import MinMaxScaler\n\n# importing data\nfinal = pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\n# Initialize a normalizer\n# scaler = MinMaxScaler(feature_range=(0, 1))\n# final[final.columns] = scaler.fit_transform(final)\n\n# Make coords coarse by removing decimals\n# final['Latitude'] = round(final['Latitude'])\n# final['Longitude'] = round(final['Longitude'])\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\n# final['Latitude'] = 5 * round(final['Latitude']/5)\n# final['Longitude'] = 5 * round(final['Longitude']/5)\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3', 'Latitude', 'Longitude', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)',\n               'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : "Running",
  "history_begin_time" : 1660878747637,
  "history_end_time" : 1660881959454,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "vR1NEeFEgkKq",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\nfrom sklearn.preprocessing import MinMaxScaler\n\n# importing data\nfinal = pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\n# Initialize a normalizer\n# scaler = MinMaxScaler(feature_range=(0, 1))\n# final[final.columns] = scaler.fit_transform(final)\n\n# Make coords coarse by removing decimals\n# final['Latitude'] = round(final['Latitude'])\n# final['Longitude'] = round(final['Longitude'])\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\n# final['Latitude'] = 5 * round(final['Latitude']/5)\n# final['Longitude'] = 5 * round(final['Longitude']/5)\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3', 'Latitude', 'Longitude', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)',\n               'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : "    Latitude  Longitude  AirNOW_O3  CMAQ12KM_O3(ppb)  ...  CFRAC  month  day  hours\n0  30.260300 -81.453300       14.0              21.0  ...    0.0      8    5     12\n1  42.770802 -71.102798       40.0              25.0  ...    0.0      8    5     12\n2  34.528599 -86.970596        8.0              14.0  ...    0.0      8    5     12\n3  42.194401 -72.555603       23.0              25.0  ...    0.0      8    5     12\n4  34.751801 -82.256699        8.0              17.0  ...    0.0      8    5     12\n\n[5 rows x 18 columns]\ninput shape: (55900, 4)\nused as inputs:  Index(['CMAQ12KM_O3(ppb)', 'month', 'day', 'hours'], dtype='object')\n/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660874868492,
  "history_end_time" : 1660874926706,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "gebla4cle8o",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\nfrom sklearn.preprocessing import MinMaxScaler\n\n# importing data\nfinal = pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\n# Initialize a normalizer\n# scaler = MinMaxScaler(feature_range=(0, 1))\n# final[final.columns] = scaler.fit_transform(final)\n\n# Make coords coarse by removing decimals\n# final['Latitude'] = round(final['Latitude'])\n# final['Longitude'] = round(final['Longitude'])\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\n# final['Latitude'] = 5 * round(final['Latitude']/5)\n# final['Longitude'] = 5 * round(final['Longitude']/5)\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3', 'Latitude', 'Longitude', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)',\n               'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : "Running",
  "history_begin_time" : 1660874572773,
  "history_end_time" : 1660874838800,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "qyqjjayy34c",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\nfrom sklearn.preprocessing import MinMaxScaler\n\n# importing data\nfinal = pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\n# Initialize a normalizer\n# scaler = MinMaxScaler(feature_range=(0, 1))\n# final[final.columns] = scaler.fit_transform(final)\n\n# Make coords coarse by removing decimals\nfinal['Latitude'] = round(final['Latitude'])\nfinal['Longitude'] = round(final['Longitude'])\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\n# final['Latitude'] = 5 * round(final['Latitude']/5)\n# final['Longitude'] = 5 * round(final['Longitude']/5)\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)',\n               'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : "    Latitude  Longitude  AirNOW_O3  CMAQ12KM_O3(ppb)  ...  CFRAC  month  day  hours\n0  30.260300 -81.453300       14.0              21.0  ...    0.0      8    5     12\n1  42.770802 -71.102798       40.0              25.0  ...    0.0      8    5     12\n2  34.528599 -86.970596        8.0              14.0  ...    0.0      8    5     12\n3  42.194401 -72.555603       23.0              25.0  ...    0.0      8    5     12\n4  34.751801 -82.256699        8.0              17.0  ...    0.0      8    5     12\n\n[5 rows x 18 columns]\ninput shape: (55900, 3)\nused as inputs:  Index(['Latitude', 'Longitude', 'CMAQ12KM_O3(ppb)'], dtype='object')\n/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660874220609,
  "history_end_time" : 1660874422092,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "y93ak7krsw1",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\nfrom sklearn.preprocessing import MinMaxScaler\n\n# importing data\nfinal = pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\n# Initialize a normalizer\n# scaler = MinMaxScaler(feature_range=(0, 1))\n# final[final.columns] = scaler.fit_transform(final)\n\n# Make coords coarse by removing decimals\nfinal['Latitude'] = round(final['Latitude'])\nfinal['Longitude'] = round(final['Longitude'])\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\n# final['Latitude'] = 5 * round(final['Latitude']/5)\n# final['Longitude'] = 5 * round(final['Longitude']/5)\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)',\n               'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : "Running",
  "history_begin_time" : 1660873962629,
  "history_end_time" : 1660874120827,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "u4p01w2answ",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\nfrom sklearn.preprocessing import MinMaxScaler\n\n# importing data\nfinal = pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\n# Initialize a normalizer\n# scaler = MinMaxScaler(feature_range=(0, 1))\n# final[final.columns] = scaler.fit_transform(final)\n\n# Make coords coarse by removing decimals\nfinal['Latitude'] = round(final['Latitude'])\nfinal['Longitude'] = round(final['Longitude'])\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\n# final['Latitude'] = 5 * round(final['Latitude']/5)\n# final['Longitude'] = 5 * round(final['Longitude']/5)\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : "    Latitude  Longitude  AirNOW_O3  CMAQ12KM_O3(ppb)  ...  CFRAC  month  day  hours\n0  30.260300 -81.453300       14.0              21.0  ...    0.0      8    5     12\n1  42.770802 -71.102798       40.0              25.0  ...    0.0      8    5     12\n2  34.528599 -86.970596        8.0              14.0  ...    0.0      8    5     12\n3  42.194401 -72.555603       23.0              25.0  ...    0.0      8    5     12\n4  34.751801 -82.256699        8.0              17.0  ...    0.0      8    5     12\n\n[5 rows x 18 columns]\ninput shape: (55900, 17)\nused as inputs:  Index(['Latitude', 'Longitude', 'CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)',\n       'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)',\n       'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)',\n       'CFRAC', 'month', 'day', 'hours'],\n      dtype='object')\n/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660873645095,
  "history_end_time" : 1660873854540,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "gySNQoBcxN9C",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\nfrom sklearn.preprocessing import MinMaxScaler\n\n# importing data\nfinal = pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\n# Initialize a normalizer\nscaler = MinMaxScaler(feature_range=(0, 1))\nfinal[final.columns] = scaler.fit_transform(final)\n\n# Make coords coarse by removing decimals\n# final['Latitude'] = round(final['Latitude'])\n# final['Longitude'] = round(final['Longitude'])\n\n# Make coords even more coarse by rounding to closest multiple of 5 \n# (e.g., 40, 45, 85, 55)\n# final['Latitude'] = 5 * round(final['Latitude']/5)\n# final['Longitude'] = 5 * round(final['Longitude']/5)\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : "    Latitude  Longitude  AirNOW_O3  CMAQ12KM_O3(ppb)  ...  CFRAC  month  day  hours\n0  30.260300 -81.453300       14.0              21.0  ...    0.0      8    5     12\n1  42.770802 -71.102798       40.0              25.0  ...    0.0      8    5     12\n2  34.528599 -86.970596        8.0              14.0  ...    0.0      8    5     12\n3  42.194401 -72.555603       23.0              25.0  ...    0.0      8    5     12\n4  34.751801 -82.256699        8.0              17.0  ...    0.0      8    5     12\n\n[5 rows x 18 columns]\ninput shape: (55900, 17)\nused as inputs:  Index(['Latitude', 'Longitude', 'CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)',\n       'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)',\n       'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)',\n       'CFRAC', 'month', 'day', 'hours'],\n      dtype='object')\n/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660872612529,
  "history_end_time" : 1660874843851,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "HldW109GIEJv",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n\n# importing data\nfinal = pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\nfinal['Latitude'] = round(final['Latitude'])\nfinal['Longitude'] = round(final['Longitude'])\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : "    Latitude  Longitude  AirNOW_O3  CMAQ12KM_O3(ppb)  ...  CFRAC  month  day  hours\n0  30.260300 -81.453300       14.0              21.0  ...    0.0      8    5     12\n1  42.770802 -71.102798       40.0              25.0  ...    0.0      8    5     12\n2  34.528599 -86.970596        8.0              14.0  ...    0.0      8    5     12\n3  42.194401 -72.555603       23.0              25.0  ...    0.0      8    5     12\n4  34.751801 -82.256699        8.0              17.0  ...    0.0      8    5     12\n\n[5 rows x 18 columns]\ninput shape: (55900, 17)\nused as inputs:  Index(['Latitude', 'Longitude', 'CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)',\n       'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)',\n       'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)',\n       'CFRAC', 'month', 'day', 'hours'],\n      dtype='object')\n/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660871288771,
  "history_end_time" : 1660874844409,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "L9bHxZeIxXfE",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n\n# importing data\nfinal = pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\nfinal['Latitude_x'] = round(final['Latitude_x'])\nfinal['Longitude_x'] = round(final['Longitude_x'])\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : "   Latitude_x  Longitude_x  AirNOW_O3  ...  month  day  hours\n0   30.260300   -81.453300       14.0  ...      8    5     12\n1   42.770802   -71.102798       40.0  ...      8    5     12\n2   34.528599   -86.970596        8.0  ...      8    5     12\n3   42.194401   -72.555603       23.0  ...      8    5     12\n4   34.751801   -82.256699        8.0  ...      8    5     12\n\n[5 rows x 18 columns]\ninput shape: (55900, 17)\nused as inputs:  Index(['Latitude_x', 'Longitude_x', 'CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)',\n       'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)', 'PRSFC(Pa)',\n       'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)',\n       'CFRAC', 'month', 'day', 'hours'],\n      dtype='object')\n/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660870319284,
  "history_end_time" : 1660874844829,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "AgrHpFcL6cbe",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n\n# importing data\nfinal = pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3', 'Latitude_x', 'Longitude_x', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)',\n               'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : "   Latitude_x  Longitude_x  AirNOW_O3  ...  month  day  hours\n0   30.260300   -81.453300       14.0  ...      8    5     12\n1   42.770802   -71.102798       40.0  ...      8    5     12\n2   34.528599   -86.970596        8.0  ...      8    5     12\n3   42.194401   -72.555603       23.0  ...      8    5     12\n4   34.751801   -82.256699        8.0  ...      8    5     12\n\n[5 rows x 18 columns]\ninput shape: (55900, 1)\nused as inputs:  Index(['CMAQ12KM_O3(ppb)'], dtype='object')\n/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660869684693,
  "history_end_time" : 1660874845379,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "E2I2AOceFZk1",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n\n# importing data\nfinal = pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3', 'Latitude_x', 'Longitude_x', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)',\n                'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : "   Latitude_x  Longitude_x  AirNOW_O3  ...  month  day  hours\n0   30.260300   -81.453300       14.0  ...      8    5     12\n1   42.770802   -71.102798       40.0  ...      8    5     12\n2   34.528599   -86.970596        8.0  ...      8    5     12\n3   42.194401   -72.555603       23.0  ...      8    5     12\n4   34.751801   -82.256699        8.0  ...      8    5     12\n\n[5 rows x 18 columns]\ninput shape: (55900, 2)\nused as inputs:  Index(['CMAQ12KM_O3(ppb)', 'PRSFC(Pa)'], dtype='object')\n/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660869439296,
  "history_end_time" : 1660869665401,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "dkhq5f9q1od",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n\n# importing data\nfinal = pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3', 'Latitude_x', 'Longitude_x', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)',\n               'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : "   Latitude_x  Longitude_x  AirNOW_O3  ...  month  day  hours\n0   30.260300   -81.453300       14.0  ...      8    5     12\n1   42.770802   -71.102798       40.0  ...      8    5     12\n2   34.528599   -86.970596        8.0  ...      8    5     12\n3   42.194401   -72.555603       23.0  ...      8    5     12\n4   34.751801   -82.256699        8.0  ...      8    5     12\n\n[5 rows x 18 columns]\ninput shape: (55900, 1)\nused as inputs:  Index(['CMAQ12KM_O3(ppb)'], dtype='object')\n/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660869012338,
  "history_end_time" : 1660869054997,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : "p6wvf2",
  "indicator" : "Done"
},{
  "history_id" : "wbc4a21gjvb",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n\n# importing data\nfinal = pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3', 'Latitude_x', 'Longitude_x', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)',\n               'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : "   Latitude_x  Longitude_x  AirNOW_O3  ...  month  day  hours\n0   30.260300   -81.453300       14.0  ...      8    5     12\n1   42.770802   -71.102798       40.0  ...      8    5     12\n2   34.528599   -86.970596        8.0  ...      8    5     12\n3   42.194401   -72.555603       23.0  ...      8    5     12\n4   34.751801   -82.256699        8.0  ...      8    5     12\n\n[5 rows x 18 columns]\ninput shape: (55900, 2)\nused as inputs:  Index(['CMAQ12KM_O3(ppb)', 'PRSFC(Pa)'], dtype='object')\n/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660868693789,
  "history_end_time" : 1660868966589,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "a4vh7547xg8",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n\n# importing data\nfinal = pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3', 'Latitude_x', 'Longitude_x', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)',\n               'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : "   Latitude_x  Longitude_x  AirNOW_O3  ...  month  day  hours\n0   30.260300   -81.453300       14.0  ...      8    5     12\n1   42.770802   -71.102798       40.0  ...      8    5     12\n2   34.528599   -86.970596        8.0  ...      8    5     12\n3   42.194401   -72.555603       23.0  ...      8    5     12\n4   34.751801   -82.256699        8.0  ...      8    5     12\n\n[5 rows x 18 columns]\ninput shape: (55900, 2)\nused as inputs:  Index(['CMAQ12KM_O3(ppb)', 'PRSFC(Pa)'], dtype='object')\n/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660868028917,
  "history_end_time" : 1660868070922,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : "p6wvf2",
  "indicator" : "Done"
},{
  "history_id" : "2qvuvber24n",
  "history_input" : "# Write first python in Geoweaver# NASA GEOWEAVER\n# CMAQ-AI Model: Training Voting-XGBoost model\n\n# Importing necessary libraries\nimport pandas as pd\nimport sklearn\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost.sklearn import XGBRegressor\nimport pickle\nfrom cmaq_ai_utils import *\n\n\n# importing data\nfinal = pd.read_csv(f'{cmaq_folder}/training.csv')\nprint(final.head())\nfinal = final.dropna()\n\ncreate_and_clean_folder(f\"{cmaq_folder}/models/\")\n\n# Processing training  data\nX = final.drop(['AirNOW_O3', 'Latitude_x', 'Longitude_x', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)', 'CMAQ_OC(ug/m3)', 'CO(moles/s)',\n               'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)', 'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours'], axis=1)\nprint(\"input shape:\", X.shape)\ny = final['AirNOW_O3']\nprint(\"used as inputs: \", X.columns)\nrf = RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n                           max_depth=None, max_features='auto', max_leaf_nodes=None,\n                           max_samples=None, min_impurity_decrease=0.0,\n                           min_samples_leaf=1,\n                           min_samples_split=2, min_weight_fraction_leaf=0.0,\n                           n_estimators=100, n_jobs=-1, oob_score=False,\n                           random_state=3086, verbose=0, warm_start=False)\n\nrf.fit(X, y)\n\n# save the model to disk\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_only.sav'\n#filename = 'D:/Research/CMAQ/local_test/xgboost.sav'\npickle.dump(rf, open(filename, 'wb'))\n",
  "history_output" : "   Latitude_x  Longitude_x  AirNOW_O3  ...  month  day  hours\n0   30.260300   -81.453300       14.0  ...      8    5     12\n1   42.770802   -71.102798       40.0  ...      8    5     12\n2   34.528599   -86.970596        8.0  ...      8    5     12\n3   42.194401   -72.555603       23.0  ...      8    5     12\n4   34.751801   -82.256699        8.0  ...      8    5     12\n\n[5 rows x 18 columns]\ninput shape: (55900, 2)\nused as inputs:  Index(['CMAQ12KM_O3(ppb)', 'PRSFC(Pa)'], dtype='object')\n/home/aalnaim/CMAQAI/lib/python3.8/site-packages/sklearn/ensemble/_forest.py:396: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.\n  warn(\n",
  "history_begin_time" : 1660866056884,
  "history_end_time" : 1660867734930,
  "history_notes" : null,
  "history_process" : "1mq84p",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},]
