[{
  "history_id" : "3jl75rklkgr",
  "history_input" : "# Write first python in Geoweaver\nimport sys\nimport subprocess\nimport pkg_resources\n\n# Required packages to run this process.\nrequired = {'xarray', 'netCDF4', 'dask', 'pandas'}\ninstalled = {pkg.key for pkg in pkg_resources.working_set}\nmissing = required - installed\n\nif missing:\n    print(\"Packages missing and will be installed: \", missing)\n    python = sys.executable\n    subprocess.check_call(\n        [python, '-m', 'pip', 'install', *missing], stdout=subprocess.DEVNULL)\n\n################################\n#  END OF PACKAGES VALIDATION  #\n################################\nimport pandas as pd\nimport datetime\n\n# defining function\nmonth_i=[1,2,3,4,5,6,7,8,9,10,11,12]\ndef shift(file):\n    station=file['Station.ID'].unique()\n    file['date']=pd.to_datetime(file[[\"year\", \"month\", \"day\",\"hours\"]]) # creating date\n    file['dayofyear'] = pd.to_datetime(file['date']).dt.dayofyear # converting monthly days to yearly dasy\n    dfs = dict(tuple(file.groupby('Station.ID'))) # grouping the data by station\n#    print(dfs)\n    list_final=[]\n    for site in station:\n        list1=dfs[site]  # selecting dataset for each station\n        o3_max=list1.loc[list1.groupby(\"dayofyear\")[\"AirNOW_O3\"].idxmax()] # daily max values\n        o3_month=pd.DataFrame(o3_max.groupby('month',as_index=False)['hours'].mean()) # monthly average hour\n        no2_max=list1.loc[list1.groupby(\"dayofyear\")[\"CMAQ12KM_NO2\"].idxmax()] # daily amx values\n        no2_month=pd.DataFrame(no2_max.groupby('month',as_index=False)['hours'].mean()) # montly average hour\n        merge_hour=pd.concat([o3_month,no2_month],axis = 1) # merging two table\n        merge_hour.columns = ['month1','hours1', 'month2','hours2'] # renaming column name\n        merge_hour['hours_diff']=merge_hour['hours1']-merge_hour['hours2']\n        merge_hour.hours_diff = merge_hour.hours_diff.astype(int) # converting hours_diff to int\n        months = dict(tuple(list1.groupby('month')))   # grouping the data by month\n        diff=merge_hour['hours_diff'] # extracting hours difference field\n        mon=merge_hour['month1'] # extracting month field\n\n        for (m,n) in zip(mon,diff):\n            list2= months[m] # selecting dataset for each month and for each station\n            list3=list2.loc[list2['month'] == m] # subsetting dataset for each month\n            list3['CMAQ12KM_NO2_new'] = list3['CMAQ12KM_NO2'].shift(n) # shifting rows for each month\n            list_final.append(list3)\n    return list_final\n\n\n# merging 2020 and 2021 dataset\ndf1 = pd.read_csv('D:/Research/CMAQ/2020/full_20_lstm.csv')\ndf2 = pd.read_csv('D:/Research/CMAQ/2021/full_21_lstm.csv')\n#merging two dataframe vertically\nmrg=df1.append(df2, ignore_index=True)\ndf3_rs=pd.read_csv('D:/Research/CMAQ/Geoweaver/merged_rs.csv')\n# merging\nfinal=pd.merge(mrg,df3_rs, on=['year', 'month','day','hours','Station.ID'])\n\n#shifting CMAQ NO2\nshift_df=shift(final)\ndata_frame = pd.concat(shift_df) # concatening the list\n\n# droping no data from all column and AirNOW_O3\ndata_new1 = data_frame.drop(['Unnamed: 0'],axis=1)\ndata_new=data_new1.dropna() \nfinal_df = data_new[data_new.AirNOW_O3!= -999]\nfinal_df.to_csv('D:/Research/CMAQ/Geoweaver/merged_2020_2021.csv')",
  "history_output" : "WARNING: You are using pip version 21.2.4; however, version 21.3.1 is available.\nYou should consider upgrading via the 'C:\\Users\\didar\\AppData\\Local\\Programs\\Python\\Python39\\python.exe -m pip install --upgrade pip' command.\nC:\\Users\\didar\\gw-workspace\\V0WX3S2NwLIDXZNVXCMDzf7LMs\\function_data_shifting.py:58: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n  mrg=df1.append(df2, ignore_index=True)\nPackages missing and will be installed:  {'netCDF4'}\n",
  "history_begin_time" : 1643306560061,
  "history_end_time" : 1643306569868,
  "history_notes" : null,
  "history_process" : "1q33ie",
  "host_id" : "100001",
  "indicator" : "Done"
},{
  "history_id" : "eqfqd069ty9",
  "history_input" : "# Write first python in Geoweaver\nimport pandas as pd\nfinal=pd.read_csv('D:/Research/CMAQ/Geoweaver/merged_2020_2021.csv')\n\n# defining training and testing variables\ntrain=final.loc[final['year']==2020]\ntest=final.loc[final['year']==2021]\n# processing training  data\nX = train.drop(['AirNOW_O3','Station.ID','YYYYMMDDHH','year','date','dayofyear','datetime'],axis=1)\ny = train['AirNOW_O3']\n\n# processing est data\ntest_X = test.drop(['AirNOW_O3','Station.ID','YYYYMMDDHH','year','date','dayofyear','datetime'],axis=1)\ntest_y = test['AirNOW_O3']\n\n",
  "history_output" : "",
  "history_begin_time" : 1643306569924,
  "history_end_time" : 1643306571361,
  "history_notes" : null,
  "history_process" : "106i1i",
  "host_id" : "100001",
  "indicator" : "Done"
}]
