[{
  "history_id" : "5gzsx6olyon",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665023826532,
  "history_end_time" : 1665032721219,
  "history_notes" : null,
  "history_process" : "6up921",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "6mt6dnsxycl",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665023826536,
  "history_end_time" : 1665032721235,
  "history_notes" : null,
  "history_process" : "xpdg66",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "mslof9dpjii",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665023826539,
  "history_end_time" : 1665032721237,
  "history_notes" : null,
  "history_process" : "xlayd5",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "n0rrzkxuq5r",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665023826541,
  "history_end_time" : 1665032721238,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "pocqqo1pl8e",
  "history_input" : "# use the trained model to predict on the testing data and save the results to prediction_rf.csv\n\nimport pandas as pd\nimport pickle\nfrom pathlib import Path\nfrom time import sleep\nimport glob, os\nfrom sklearn.metrics import r2_score, mean_squared_error\nfrom cmaq_ai_utils import *\n\ncreate_and_clean_folder(f\"{cmaq_folder}/prediction_files/\")\n\n# importing data\n# final=pd.read_csv(f\"{cmaq_folder}/testing_input_hourly/testing.csv\")\ntesting_path = f'{cmaq_folder}/testing_input_hourly'\nall_hourly_files = glob.glob(os.path.join(testing_path, \"test_data_*.csv\"))\ndf_from_each_hourly_file = (pd.read_csv(f) for f in all_hourly_files)\n\n# load the model from disk\n# filename = f'{cmaq_folder}/models/rf_pycaret.sav'\n\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_one_year.sav'\nloaded_model = pickle.load(open(filename, 'rb'))\n\nfor testing_df in df_from_each_hourly_file:\n  print(testing_df['YYYYMMDDHH'].values[0])\n  file_dateTime = testing_df['YYYYMMDDHH'].values[0]\n  #X = testing_df.drop(['YYYYMMDDHH','Latitude','Longitude'],axis=1)\n  testing_df['time_of_day'] = (testing_df['hours'] % 24 + 4) // 4\n\n  # Make coords even more coarse by rounding to closest multiple of 5 \n  # (e.g., 40, 45, 85, 55)\n  #testing_df['Latitude_ExtraCoarse'] = 0.1 * round(testing_df['Latitude']/0.1)\n  #testing_df['Longitude_ExtraCoarse'] = 0.1 * round(testing_df['Longitude']/0.1)\n  X = testing_df.drop(['YYYYMMDDHH','Latitude','Longitude', 'CO(moles/s)'],axis=1)\n  \n  print(X.columns)\n\n# # making prediction\n  pred = loaded_model.predict(X)\n\n# adding prediction values to test dataset\n  #testing_df['prediction'] = testing_df['CMAQ12KM_O3(ppb)'].tolist()\n  testing_df['prediction'] = pred\n\n  testing_df = testing_df[['Latitude', 'Longitude','YYYYMMDDHH','prediction']]\n# saving the dataset into local drive\n  print(f'Saving: {cmaq_folder}/prediction_files/prediction_rf_{file_dateTime}.csv')\n  testing_df.to_csv(f'{cmaq_folder}/prediction_files/prediction_rf_{file_dateTime}.csv',index=False)",
  "history_output" : "2022100405\nIndex(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)',\n       'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours',\n       'time_of_day'],\n      dtype='object')\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100405.csv\n2022100402\nIndex(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)',\n       'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours',\n       'time_of_day'],\n      dtype='object')\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100402.csv\n2022100309\nIndex(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)',\n       'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours',\n       'time_of_day'],\n      dtype='object')\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100309.csv\n2022100307\nIndex(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)',\n       'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours',\n       'time_of_day'],\n      dtype='object')\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100307.csv\n2022100215\nIndex(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)',\n       'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours',\n       'time_of_day'],\n      dtype='object')\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100215.csv\n2022100212\nIndex(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)',\n       'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours',\n       'time_of_day'],\n      dtype='object')\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100212.csv\n2022100300\nIndex(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)',\n       'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours',\n       'time_of_day'],\n      dtype='object')\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100300.csv\n2022100220\nIndex(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)',\n       'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours',\n       'time_of_day'],\n      dtype='object')\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100220.csv\n2022100323\nIndex(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)',\n       'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours',\n       'time_of_day'],\n      dtype='object')\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100323.csv\n2022100311\nIndex(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)',\n       'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours',\n       'time_of_day'],\n      dtype='object')\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100311.csv\n2022100316\nIndex(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)',\n       'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours',\n       'time_of_day'],\n      dtype='object')\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100316.csv\n2022100318\nIndex(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)',\n       'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours',\n       'time_of_day'],\n      dtype='object')\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100318.csv\n2022100221\nIndex(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)',\n       'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours',\n       'time_of_day'],\n      dtype='object')\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100221.csv\n2022100213\nIndex(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)',\n       'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours',\n       'time_of_day'],\n      dtype='object')\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100213.csv\n2022100301\nIndex(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)',\n       'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours',\n       'time_of_day'],\n      dtype='object')\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100301.csv\n2022100306\nIndex(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)',\n       'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours',\n       'time_of_day'],\n      dtype='object')\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100306.csv\n2022100214\nIndex(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)',\n       'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours',\n       'time_of_day'],\n      dtype='object')\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100214.csv\n2022100308\nIndex(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)',\n       'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours',\n       'time_of_day'],\n      dtype='object')\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100308.csv\n2022100403\nIndex(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)',\n       'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours',\n       'time_of_day'],\n      dtype='object')\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100403.csv\n2022100404\nIndex(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)',\n       'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours',\n       'time_of_day'],\n      dtype='object')\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100404.csv\n2022100319\nIndex(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)',\n       'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours',\n       'time_of_day'],\n      dtype='object')\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100319.csv\n2022100317\nIndex(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)',\n       'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours',\n       'time_of_day'],\n      dtype='object')\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100317.csv\n2022100310\nIndex(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)',\n       'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours',\n       'time_of_day'],\n      dtype='object')\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100310.csv\n2022100322\nIndex(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)',\n       'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours',\n       'time_of_day'],\n      dtype='object')\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100322.csv\n2022100411\nIndex(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)',\n       'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours',\n       'time_of_day'],\n      dtype='object')\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100411.csv\n2022100313\nIndex(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)',\n       'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours',\n       'time_of_day'],\n      dtype='object')\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100313.csv\n2022100314\nIndex(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)',\n       'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours',\n       'time_of_day'],\n      dtype='object')\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100314.csv\n2022100321\nIndex(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)',\n       'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours',\n       'time_of_day'],\n      dtype='object')\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100321.csv\n2022100222\nIndex(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)',\n       'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours',\n       'time_of_day'],\n      dtype='object')\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100222.csv\n2022100305\nIndex(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)',\n       'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours',\n       'time_of_day'],\n      dtype='object')\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100305.csv\n2022100217\nIndex(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)',\n       'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours',\n       'time_of_day'],\n      dtype='object')\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100217.csv\n2022100302\nIndex(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)',\n       'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours',\n       'time_of_day'],\n      dtype='object')\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100302.csv\n2022100409\nIndex(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)',\n       'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours',\n       'time_of_day'],\n      dtype='object')\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100409.csv\n2022100407\nIndex(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)',\n       'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours',\n       'time_of_day'],\n      dtype='object')\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100407.csv\n2022100400\nIndex(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)',\n       'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours',\n       'time_of_day'],\n      dtype='object')\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100400.csv\n2022100219\nIndex(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)',\n       'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours',\n       'time_of_day'],\n      dtype='object')\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100219.csv\n2022100320\nIndex(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)',\n       'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours',\n       'time_of_day'],\n      dtype='object')\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100320.csv\n2022100315\nIndex(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)',\n       'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours',\n       'time_of_day'],\n      dtype='object')\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100315.csv\n2022100312\nIndex(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)',\n       'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours',\n       'time_of_day'],\n      dtype='object')\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100312.csv\n2022100410\nIndex(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)',\n       'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours',\n       'time_of_day'],\n      dtype='object')\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100410.csv\n2022100401\nIndex(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)',\n       'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours',\n       'time_of_day'],\n      dtype='object')\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100401.csv\n2022100218\nIndex(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)',\n       'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours',\n       'time_of_day'],\n      dtype='object')\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100218.csv\n2022100406\nIndex(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)',\n       'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours',\n       'time_of_day'],\n      dtype='object')\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100406.csv\n2022100408\nIndex(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)',\n       'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours',\n       'time_of_day'],\n      dtype='object')\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100408.csv\n2022100303\nIndex(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)',\n       'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours',\n       'time_of_day'],\n      dtype='object')\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100303.csv\n2022100304\nIndex(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)',\n       'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours',\n       'time_of_day'],\n      dtype='object')\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100304.csv\n2022100216\nIndex(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)',\n       'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours',\n       'time_of_day'],\n      dtype='object')\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100216.csv\n2022100223\nIndex(['CMAQ12KM_O3(ppb)', 'CMAQ12KM_NO2(ppb)', 'CMAQ12KM_CO(ppm)',\n       'CMAQ_OC(ug/m3)', 'PRSFC(Pa)', 'PBL(m)', 'TEMP2(K)', 'WSPD10(m/s)',\n       'WDIR10(degree)', 'RGRND(W/m2)', 'CFRAC', 'month', 'day', 'hours',\n       'time_of_day'],\n      dtype='object')\nSaving: /groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100223.csv\n",
  "history_begin_time" : 1665024178925,
  "history_end_time" : 1665032721240,
  "history_notes" : null,
  "history_process" : "l8vlic",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "4ra82zl1b9b",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665023826628,
  "history_end_time" : 1665032721246,
  "history_notes" : null,
  "history_process" : "wny2dz",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "sikfz3ufrsc",
  "history_input" : "# load the prediction_rf.csv into a NetCDF file for visualization\nfrom cmaq_ai_utils import *\n\n# Auto date method\nsdate, edate = get_date_range_auto(days_ago=3)\n\n# Manual date method\n# sdate = date(2022, 8, 6)   # start date\n# edate = date(2022, 8, 7)   # end date\n\ndays = get_days_list(sdate, edate)\n\nprediction_path = f\"{cmaq_folder}/prediction_files/\"\n\nall_hourly_files = sorted(glob.glob(os.path.join(prediction_path, \"*.csv\")))\n# print(\"overall hourly files: \", all_hourly_files)\n\nfor i in range(len(days)-1):\n  print(days[i])\n  \n  df_cdf = xr.open_dataset(\"/groups/ESS/share/projects/SWUS3km/data/cmaqdata/CCTMout/12km/POST/COMBINE3D_ACONC_v531_gcc_AQF5X_\"+days[i+1]+\"_extracted.nc\")\n  \n  print(\"single day hourly files: \", all_hourly_files[i*24:(i+1)*24])\n  df_from_each_hourly_file = (pd.read_csv(f) for f in all_hourly_files[i*24:(i+1)*24])\n  \n  df_csv = pd.concat(df_from_each_hourly_file, ignore_index=True)\n\n  reshaped_prediction = df_csv['prediction'].to_numpy().reshape(24, 265, 442)\n  print(reshaped_prediction.shape)\n  \n  # Remove \"LAY\" Dimension in O3 variable already in nc file.\n  reduced_dim = df_cdf['O3'].sel(LAY=1, drop=True)\n\n  # Swap values from original nc file with new prediction data\n  reduced_dim.values = reshaped_prediction\n\n  # Apply changes to data variable in nc file\n  df_cdf['O3'] = (['TSTEP', 'ROW', 'COL'], reshaped_prediction)\n\n#   create_and_clean_folder(f\"{cmaq_folder}/prediction_nc_files\")\n  df_cdf.to_netcdf(f'{cmaq_folder}/prediction_nc_files/COMBINE3D_ACONC_v531_gcc_AQF5X_'+days[i]+'_ML_extracted.nc')\n\n  print(f'Saved updated netCDF file: {cmaq_folder}/prediction_nc_files/COMBINE3D_ACONC_v531_gcc_AQF5X_'+days[i]+'_ML_extracted.nc')",
  "history_output" : "20221002\nsingle day hourly files:  ['/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100212.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100213.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100214.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100215.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100216.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100217.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100218.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100219.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100220.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100221.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100222.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100223.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100300.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100301.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100302.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100303.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100304.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100305.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100306.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100307.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100308.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100309.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100310.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100311.csv']\n(24, 265, 442)\nSaved updated netCDF file: /groups/ESS3/aalnaim/cmaq//prediction_nc_files/COMBINE3D_ACONC_v531_gcc_AQF5X_20221002_ML_extracted.nc\n20221003\nsingle day hourly files:  ['/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100312.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100313.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100314.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100315.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100316.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100317.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100318.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100319.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100320.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100321.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100322.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100323.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100400.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100401.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100402.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100403.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100404.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100405.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100406.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100407.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100408.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100409.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100410.csv', '/groups/ESS3/aalnaim/cmaq//prediction_files/prediction_rf_2022100411.csv']\n(24, 265, 442)\nSaved updated netCDF file: /groups/ESS3/aalnaim/cmaq//prediction_nc_files/COMBINE3D_ACONC_v531_gcc_AQF5X_20221003_ML_extracted.nc\n",
  "history_begin_time" : 1665024370544,
  "history_end_time" : 1665032721250,
  "history_notes" : null,
  "history_process" : "3asyzj",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "9dqetbb1y58",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665023826686,
  "history_end_time" : 1665032721252,
  "history_notes" : null,
  "history_process" : "9xdvh6",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "n69oujp4w3u",
  "history_input" : "# get hourly CMAQ data into csv for prediction\n\nfrom cmaq_ai_utils import *\n\n\n# Auto date method\nsdate, edate = get_date_range_auto(days_ago=3)\n\n# Manual date method\n# sdate = date(2022, 8, 6)   # start date\n# edate = date(2022, 8, 7)   # end date\n\ndays = get_days_list(sdate, edate)\n\nreal_hour_list = [12,13,14,15,16,17,18,19,20,21,22,23,0,1,2,3,4,5,6,7,8,9,10,11]\ntime_step_in_netcdf_list = range(0,24)\n\ntest_folder = f\"{cmaq_folder}/testing_input_hourly/\"\ncreate_and_clean_folder(test_folder)\n\nfor x in range(len(days)-1):\n  current_day = days[x]\n  next_day = days[x+1]\n  print(\"Getting data for: \"+current_day)\n  \n  # read cmaq results\n  df_cmaq = xr.open_dataset(\"/groups/ESS/share/projects/SWUS3km/data/cmaqdata/CCTMout/12km/POST/COMBINE3D_ACONC_v531_gcc_AQF5X_\"+current_day+\"_extracted.nc\")\n  \n  # read mcip results \n  df_mcip = xr.open_dataset(\"/groups/ESS/share/projects/SWUS3km/data/cmaqdata/mcip/12km/METCRO2D_\"+current_day+\".nc\")\n  \n  # read emissions results \n  df_emis = xr.open_dataset(\"/groups/ESS/share/projects/SWUS3km/data/cmaqdata/emis2021/12km/all/emis_mole_all_\"+current_day+\"_AQF5X_cmaq_cb6ae7_2017gb_17j.ncf\")\n  \n  for k in time_step_in_netcdf_list:\n    real_hour_value = real_hour_list[k]\n    \n    if real_hour_value<12:\n      day = next_day\n    else:\n      day = current_day\n    \n    df_hourly = pd.DataFrame()\n    \n    print(\"df_cmaq.variables['O3'] shape: \", df_cmaq.variables['O3'].shape)\n    print(\"df_cmaq.variables['O3'][:] shape: \", df_cmaq.variables['O3'][:].shape)\n    print(\"df_cmaq.variables['O3'][:].values[k, 0].shape\", df_cmaq.variables['O3'][:].values[k, 0].shape)\n    # CMAQ data\n    # O3 variable\n    o3=df_cmaq.variables['O3'][:].values[k, 0]\n    cmaq_O3=list(np.ravel(o3).transpose())\n    print(\"o3 shape: \", o3.shape)\n    print(\"cmaq_O3 shape: \", np.ravel(o3).transpose().shape)\n    \n    # NO2\n    no2=df_cmaq.variables['NO2'][:].values[k, 0]\n    cmaq_NO2=list(np.ravel(no2).transpose())\n    \n    # CO\n    co=df_cmaq.variables['CO'][:].values[k, 0]\n    cmaq_CO=list(np.ravel(co).transpose())\n    \n    # PM25_CO\n    pm25=df_cmaq.variables['PM25_OC'][:].values[k, 0]\n    cmaq_PM25_CO=list(np.ravel(pm25).transpose())\n    \n    # EMIS data\n    co_emis=df_emis.variables['CO'][:].values[k, 0]\n    CO_emi=list(np.ravel(co_emis).transpose())    \n    \n    # MCIP data\n    # CO variable\n    prsfc=df_mcip.variables['PRSFC'][:].values[k, 0]\n    PRSFC=list(np.ravel(prsfc).transpose())\n    \n    # NO2\n    pbl=df_mcip.variables['PBL'][:].values[k, 0]\n    PBL=list(np.ravel(pbl).transpose())\n    \n    # TEMP2\n    temp2=df_mcip.variables['TEMP2'][:].values[k, 0]\n    TEMP2=list(np.ravel(temp2).transpose())\n    \n    # WSPD10\n    wspd10=df_mcip.variables['WSPD10'][:].values[k, 0]\n    WSPD10=list(np.ravel(wspd10).transpose())\n    \n    # WDIR10\n    wdir10=df_mcip.variables['WDIR10'][:].values[k, 0]\n    WDIR10=list(np.ravel(wdir10).transpose())\n    \n    # RGRND\n    rgrnd=df_mcip.variables['RGRND'][:].values[k, 0]\n    RGRND=list(np.ravel(rgrnd).transpose())\n    \n    # CFRAC\n    cfrac=df_mcip.variables['CFRAC'][:].values[k, 0]\n    CFRAC=list(np.ravel(cfrac).transpose())\n    \n    ## LAT/LON data\n    df_coords = xr.open_dataset('/home/yli74/scripts/plots/2020fire/GRIDCRO2D')\n    \n    lat = df_coords.variables['LAT'][:].values[0,0]\n    print(\"lat shape\", lat.shape)\n    lat_flt=np.ravel(lat)\n    LAT=lat_flt #np.tile(lat_flt,1)\n    \n    lon = df_coords.variables['LON'][:].values[0,0]\n    lon_flt=np.ravel(lon)\n    LON=lon_flt #np.tile(lon_flt,1)\n    \n    df_hourly['Latitude'] = LAT\n    df_hourly['Longitude'] = LON\n    df_hourly['YYYYMMDDHH'] = day+turn_2_digits(real_hour_value)\n    df_hourly['CMAQ12KM_O3(ppb)'] = cmaq_O3\n    df_hourly['CMAQ12KM_NO2(ppb)'] = cmaq_NO2\n    df_hourly['CMAQ12KM_CO(ppm)'] = cmaq_CO\n    df_hourly['CMAQ_OC(ug/m3)'] = cmaq_PM25_CO\n    df_hourly['CO(moles/s)'] = CO_emi\n    df_hourly['PRSFC(Pa)'] = PRSFC\n    df_hourly['PBL(m)'] = PBL\n    df_hourly['TEMP2(K)'] = TEMP2\n    df_hourly['WSPD10(m/s)'] = WSPD10\n    df_hourly['WDIR10(degree)'] = WDIR10\n    df_hourly['RGRND(W/m2)'] = RGRND\n    df_hourly['CFRAC'] = CFRAC\n    df_hourly['month'] = df_hourly['YYYYMMDDHH'].str[4:6]\n    df_hourly['day'] = df_hourly['YYYYMMDDHH'].str[6:8]\n    df_hourly['hours'] = df_hourly['YYYYMMDDHH'].str[8:10]\n    print(f'Saving file: test_data_{day}_{turn_2_digits(real_hour_value)}.csv')\n    df_hourly.to_csv(f'{test_folder}/test_data_{day}_{turn_2_digits(real_hour_value)}.csv',index=False)\n\nprint('Done with preparing testing data!')",
  "history_output" : "Getting data for: 20221002\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221002_12.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221002_13.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221002_14.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221002_15.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221002_16.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221002_17.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221002_18.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221002_19.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221002_20.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221002_21.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221002_22.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221002_23.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221003_00.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221003_01.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221003_02.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221003_03.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221003_04.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221003_05.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221003_06.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221003_07.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221003_08.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221003_09.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221003_10.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221003_11.csv\nGetting data for: 20221003\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221003_12.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221003_13.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221003_14.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221003_15.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221003_16.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221003_17.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221003_18.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221003_19.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221003_20.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221003_21.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221003_22.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221003_23.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221004_00.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221004_01.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221004_02.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221004_03.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221004_04.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221004_05.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221004_06.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221004_07.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221004_08.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221004_09.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221004_10.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221004_11.csv\nDone with preparing testing data!\n",
  "history_begin_time" : 1665023827618,
  "history_end_time" : 1665032721255,
  "history_notes" : null,
  "history_process" : "ex3vh9",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "df4d8f990qs",
  "history_input" : "# merge all hourly testing data into daily files\n\nimport pandas as pd\nimport glob\nimport os\nfrom pathlib import Path\nfrom cmaq_ai_utils import *\n\ntesting_path = f'{cmaq_folder}/testing_input_hourly'\nall_hourly_files = glob.glob(os.path.join(testing_path, \"test_data_*.csv\"))   \n# advisable to use os.path.join as this makes concatenation OS independent\n\ndf_from_each_hourly_file = (pd.read_csv(f) for f in all_hourly_files)\ncmaq = pd.concat(df_from_each_hourly_file, ignore_index=True)\n\n# dropping unnecessary variables\ncmaq['YYYYMMDDHH'] = cmaq['YYYYMMDDHH'].map(str)\ncmaq['month'] = cmaq['YYYYMMDDHH'].str[4:6]\ncmaq['day'] = cmaq['YYYYMMDDHH'].str[6:8]\ncmaq['hours'] = cmaq['YYYYMMDDHH'].str[8:10]\n\nremove_file(f\"{testing_path}/testing.csv\")\ncmaq.to_csv(f\"{testing_path}/testing.csv\",index=False)\n\nprint('Done with generating testing.csv!')",
  "history_output" : "remove old files/groups/ESS3/aalnaim/cmaq//testing_input_hourly/testing.csv\nDone with generating testing.csv!\n",
  "history_begin_time" : 1665024076767,
  "history_end_time" : 1665032721260,
  "history_notes" : null,
  "history_process" : "b8uv5z",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "pgmwow2d0ea",
  "history_input" : "#!/bin/bash\n# generate images and gif from the NetCDF files\n\nexport cmaq_folder=\"/groups/ESS3/aalnaim/cmaq\"\nmkdir $cmaq_folder\"/plots\"\nrm $cmaq_folder/plots/* # clean everything first\n\necho $(date -d '3 day ago' '+%Y%m%d')\n# Setting env variables\nexport YYYYMMDD_POST=$(date -d '3 day ago' '+%Y%m%d')\n\nexport stdate_post=$(date -d '3 day ago' '+%Y-%m-%d')\nexport eddate_post=$(date -d '2 day ago' '+%Y-%m-%d')\n\nexport stdate_file=$(date -d '3 day ago' '+%Y%m%d')\nexport eddate_file=$(date -d '2 day ago' '+%Y%m%d')\n\n# export YYYYMMDD_POST='20221002'\n# export stdate_post='2022-10-02'\n# export eddate_post='2022-10-03'\n# export stdate_file='20221002'\n# export eddate_file='20221003'\n\nexport postdata_dir=$cmaq_folder\"/prediction_nc_files\"\nexport mcip_dir=\"/groups/ESS/share/projects/SWUS3km/data/cmaqdata/mcip/12km\"\nexport dir_graph=$cmaq_folder\"/plots\"\n\nmodule load ncl\n\nrm $cmaq_folder/geoweaver_plot_daily_O3.ncl\ncat <<EOF >> $cmaq_folder/geoweaver_plot_daily_O3.ncl\nload \"/opt/sw/spack/apps/linux-centos8-cascadelake/gcc-9.3.0-openmpi-4.0.4/ncl-6.6.2-fr/lib/ncarg/nclscripts/csm/gsn_code.ncl\"\nload \"/opt/sw/spack/apps/linux-centos8-cascadelake/gcc-9.3.0-openmpi-4.0.4/ncl-6.6.2-fr/lib/ncarg/nclscripts/csm/gsn_csm.ncl\"\nload \"/opt/sw/spack/apps/linux-centos8-cascadelake/gcc-9.3.0-openmpi-4.0.4/ncl-6.6.2-fr/lib/ncarg/nclscripts/csm/contributed.ncl\"\n\nsetvalues NhlGetWorkspaceObjectId()\n\"wsMaximumSize\": 600000000\nend setvalues\n\nbegin\n\ndate = getenv(\"YYYYMMDD_POST\")\nd1 = getenv(\"stdate_post\")\nd2 = getenv(\"eddate_post\")\n\ndFile1 = getenv(\"stdate_file\")\ndFile2 = getenv(\"eddate_file\")\n\ncmaq_dir = getenv(\"cmaq_folder\")\n\n;print(\"Passed Date: \"+date)\n\n;aconc_dir = getenv(\"postdata_dir\")\ngrid_dir = getenv(\"mcip_dir\")\nplot_dir = getenv(\"dir_graph\")\n\nprint(cmaq_dir+\"/prediction_nc_files/COMBINE3D_ACONC_v531_gcc_AQF5X_\"+dFile1+\"_ML_extracted.nc\")\ncdf_file1 = addfile(cmaq_dir+\"/prediction_nc_files/COMBINE3D_ACONC_v531_gcc_AQF5X_\"+dFile1+\"_ML_extracted.nc\",\"r\")\ncdf_file= addfile(grid_dir+\"/GRIDCRO2D_\"+date+\".nc\",\"r\")\n\nptime = (/\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"00\",\"01\",\"02\",\"03\",\"04\",\"05\",\"06\",\"07\",\"08\",\"09\",\"10\",\"11\"/)\n\ntime = cdf_file1->TFLAG(:,0,:)\no3 = cdf_file1->O3(:,:,:) ;ppb\n;pm25 = cdf_file1->PM25_TOT(:,0,:,:)\n\n\nnt = dimsizes(o3(:,0,0))\nny = dimsizes(o3(0,:,0))\nnx = dimsizes(o3(0,0,:))\n\nprint(nt+\" \"+ny+\" \"+nx)\nprint(max(o3))\nprint(min(o3))\nprint(avg(o3))\n\n;print(max(pm25))\n;print(min(pm25))\n;print(avg(pm25))\n\n;print(time)\n\nlat = cdf_file->LAT(0,0,:,:)\nlon = cdf_file->LON(0,0,:,:)\n\no3@lat2d = lat\no3@lon2d = lon\n\nres = True\nres@gsnMaximize = True                ; maximize pot in frame\nres@gsnFrame = False               ; don't advance frame\nres@gsnDraw = False\n;res@gsnSpreadColors = True\nres@lbLabelAutoStride = True\n;res@lbBoxLinesOn = False\nres@pmLabelBarHeightF = 0.1\nres@pmLabelBarWidthF = 0.5\nres@cnFillOn=True\n;res@cnMonoFillPattern=True\n;res@cnMonoLineColor=True\nres@cnLinesOn=False\n;res@pmLabelBarDisplayMode=\"never\"\nres@gsnLeftString  = \"\";\nres@gsnRightString = \"\"\n\nres@mpLimitMode = \"LatLon\"\nres@mpMinLonF = -120 ;min(lon)+0.2\nres@mpMaxLonF = -70 ;max(lon)-0.2\nres@mpMinLatF = 25 ;min(lat)+0.05\nres@mpMaxLatF = 50 ;max(lat)-0.05\nres@mpDataBaseVersion = \"MediumRes\"\n;res@tiMainString = times(it)\nres@mpDataBaseVersion       = \"MediumRes\"\nres@mpDataSetName           = \"Earth..4\"\nres@mpAreaMaskingOn         = True\nres@mpOutlineBoundarySets = \"GeophysicalAndUSStates\"\nres@mpOutlineSpecifiers=\"United States : States\"\nres@mpLandFillColor         = \"white\"\nres@mpInlandWaterFillColor  = \"white\"\nres@mpOceanFillColor        = \"white\"\nres@mpGeophysicalLineColor    = \"Black\"\nres@mpGeophysicalLineThicknessF = 1.5\n\n;res@gsnSpreadColors         = True\nres@lbLabelAutoStride       = True\nres@lbLabelFont             = 25\nres@tiXAxisFont             = 25\nres@pmTickMarkDisplayMode   = \"Always\"\nres@tmXBLabelFont           = 25\nres@tmXBLabelFontHeightF    = 0.013\nres@tmXBLabelDeltaF         = -0.5\nres@tmYLLabelFont           = 25\nres@tmYLLabelFontHeightF    = 0.013\nres@tmXBLabelDeltaF         = -0.5\nres@tmXTLabelsOn            = False\nres@tmXTLabelFont           = 25\nres@tmXTLabelFontHeightF    = 0.013\nres@tmYRLabelsOn            = False\nres@tmYRLabelFont           = 25\nres@tmYRLabelFontHeightF    = 0.013\n\n\nres@mpProjection           = \"LambertConformal\" ;\"CylindricalEquidistant\"\nres@mpLambertParallel1F    = 33.\nres@mpLambertParallel2F    = 45.\nres@mpLambertMeridianF     = -98.\n\nres@cnLevelSelectionMode = \"ManualLevels\"\nres@cnMinLevelValF          = 0.\nres@cnMaxLevelValF          = 80\nres@cnLevelSpacingF         = 4\n\nres@txFont   = \"times-roman\"\nres@tiMainFont   = \"times-roman\"\n\ndo it = 0, nt-1\n  if (it .lt. 12) then\n    pdate=d1\n  else\n    pdate=d2\n  end if\n\n  pname=plot_dir+\"/testPlot_\"+pdate+\"_\"+ptime(it)\n  wks = gsn_open_wks(\"png\",pname)\n  gsn_define_colormap(wks, \"WhiteBlueGreenYellowRed\")\n\n  res@tiMainString = pdate+\" \"+ptime(it)+\" UTC O~B~3~N~ Forecast (ppbV)\"\n  plot = gsn_csm_contour_map(wks,o3(it,:,:),res)\n  draw(plot)\n  frame(wks)\n  delete(wks)\n  system(\"composite -geometry 100x70+900+900 /groups/ESS/zsun/cmaq/mason-logo-green.png \"+pname+\".png \"+pname+\".png\")\nend do\ndelete(res)\n\nend\nEOF\n\n\nncl $cmaq_folder/geoweaver_plot_daily_O3.ncl\n\n# convert -delay 100 *.png 20220613_20220614.gif\nconvert -delay 100 $cmaq_folder/plots/testPlot*.png $cmaq_folder/plots/\"Map_\"$YYYYMMDD_POST.gif\n\nif [ $? -eq 0 ]; then\n    echo \"Generating images/gif Completed Successfully\"\nelse\n    echo \"Generating images/gif Failed!\"\nfi\n",
  "history_output" : "mkdir: cannot create directory ‘/groups/ESS3/aalnaim/cmaq/plots’: File exists\n20221002\n Copyright (C) 1995-2019 - All Rights Reserved\n University Corporation for Atmospheric Research\n NCAR Command Language Version 6.6.2\n The use of this software is governed by a License Agreement.\n See http://www.ncl.ucar.edu/ for more details.\n(0)\t/groups/ESS3/aalnaim/cmaq/prediction_nc_files/COMBINE3D_ACONC_v531_gcc_AQF5X_20221002_ML_extracted.nc\n(0)\t24 265 442\n(0)\t77.05\n(0)\t1.61\n(0)\t27.69010155563478\n",
  "history_begin_time" : 1665024624109,
  "history_end_time" : 1665032721262,
  "history_notes" : null,
  "history_process" : "iicy7w",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "phq9t6oau5l",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1665032721280,
  "history_notes" : null,
  "history_process" : "fsk7f2",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "rivs1wrdcb3",
  "history_input" : "#!/bin/bash\n# generate images and gif from the prediction NetCDF files and overlay the AirNow station observation on the top\n\ncmaq_folder=\"/groups/ESS3/aalnaim/cmaq\"\nmkdir $cmaq_folder\"/plots\"\n# Setting env variables\nexport YYYYMMDD_POST=$(date -d '3 day ago' '+%Y%m%d')\n\nexport stdate_post=$(date -d '3 day ago' '+%Y-%m-%d')\nexport eddate_post=$(date -d '2 day ago' '+%Y-%m-%d')\n\nexport stdate_file=$(date -d '3 day ago' '+%Y%m%d')\nexport eddate_file=$(date -d '2 day ago' '+%Y%m%d')\n\n# export YYYYMMDD_POST='20221002'\n# export stdate_post='2022-10-02'\n# export eddate_post='2022-10-03'\n# export stdate_file='20221002'\n# export eddate_file='20221003'\n\n\nexport postdata_dir=$cmaq_folder\"/prediction_nc_files\"\nexport mcip_dir=\"/groups/ESS/share/projects/SWUS3km/data/cmaqdata/mcip/12km\"\nexport graph_dir=$cmaq_folder\"/plots\"\n\nexport obs_dir_NCL=\"/groups/ESS/share/projects/SWUS3km/data/OBS/AirNow/AQF5X\"\n\nmodule load ncl\n\nrm $cmaq_folder/geoweaver_plot_daily_O3_Airnow.ncl\ncat <<EOF >>$cmaq_folder/geoweaver_plot_daily_O3_Airnow.ncl\nload \"/opt/sw/spack/apps/linux-centos8-cascadelake/gcc-9.3.0-openmpi-4.0.4/ncl-6.6.2-fr/lib/ncarg/nclscripts/csm/gsn_code.ncl\"\nload \"/opt/sw/spack/apps/linux-centos8-cascadelake/gcc-9.3.0-openmpi-4.0.4/ncl-6.6.2-fr/lib/ncarg/nclscripts/csm/gsn_csm.ncl\"\nload \"/opt/sw/spack/apps/linux-centos8-cascadelake/gcc-9.3.0-openmpi-4.0.4/ncl-6.6.2-fr/lib/ncarg/nclscripts/csm/contributed.ncl\"\n\nsetvalues NhlGetWorkspaceObjectId()\n\"wsMaximumSize\": 600000000\nend setvalues\n\nbegin\n\ndate = getenv(\"YYYYMMDD_POST\") \nd1 = getenv(\"stdate_post\") \nd2 = getenv(\"eddate_post\") \n\ndFile1 = getenv(\"stdate_file\")\ndFile2 = getenv(\"eddate_file\")\n\nobs_dir = getenv(\"obs_dir_NCL\")\nplot_dir = getenv(\"graph_dir\") \n\nhr=new(24,\"string\")\nhr=(/\"00\",\"01\",\"02\",\"03\",\"04\",\"05\",\"06\",\"07\",\"08\",\"09\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\"/)\n\nprint(plot_dir)\naconc_dir = getenv(\"postdata_dir\") \ngrid_dir = getenv(\"mcip_dir\")\n\nprint(aconc_dir+\"/COMBINE3D_ACONC_v531_gcc_AQF5X_\"+dFile1+\"_ML_extracted.nc\")\n\ncdf_file1 = addfile(aconc_dir+\"/COMBINE3D_ACONC_v531_gcc_AQF5X_\"+dFile1+\"_ML_extracted.nc\",\"r\")\ncdf_file= addfile(grid_dir+\"/GRIDCRO2D_\"+date+\".nc\",\"r\")\ncdf_file2= addfile(grid_dir+\"/METCRO2D_\"+date+\".nc\",\"r\")\n\ntime = cdf_file1->TFLAG(:,0,:)\no3 = cdf_file1->O3(:,:,:) ;ppb\nwspd10=cdf_file2->WSPD10(:,0,:,:)\nwdir10=cdf_file2->WDIR10(:,0,:,:)\n\ntemp = cdf_file2->TEMP2\n\nnt = dimsizes(o3(:,0,0))\nny = dimsizes(o3(0,:,0))\nnx = dimsizes(o3(0,0,:))\n\nprint(max(temp))\nprint(min(temp))\nprint(avg(temp))\n\n\n\nprint(nt+\" \"+ny+\" \"+nx)\nprint(max(o3))\nprint(min(o3))\nprint(avg(o3))\n\nlat = cdf_file->LAT(0,0,:,:)\nlon = cdf_file->LON(0,0,:,:)\n\no3@lat2d = lat\no3@lon2d = lon\no3@unit = \"ppbv\"\n\nUV10=wind_component(wspd10,wdir10,0)\nUV10@lat2d = lat\nUV10@lon2d = lon\n\n\nres = True\nres@gsnMaximize = True                ; maximize pot in frame\nres@gsnFrame = False               ; dont advance frame\nres@gsnDraw = False\nres@gsnLeftString  = \"\"\nres@gsnRightString = \"\"\nres@txFont   = \"times-roman\"\nres@tiMainFont   = \"times-roman\"\n;res@tiMainFontHeightF = 0.02\n;res@vpWidthF        = 0.7\n;res@vpHeightF       = 0.7\n\n;;set map;;\nmpres                             = res\nmpres@mpLimitMode = \"LatLon\"\nmpres@mpDataSetName               = \"Earth..4\"\nmpres@mpDataBaseVersion           = \"MediumRes\"\nmpres@mpOutlineOn                 = True\nmpres@mpGeophysicalLineThicknessF = 1.5\nmpres@mpFillDrawOrder             = \"PostDraw\"\nmpres@mpFillOn                    = False\nmpres@mpAreaMaskingOn         = True\nmpres@mpOutlineBoundarySets = \"GeophysicalAndUSStates\"\nmpres@mpOutlineSpecifiers         = \"United States:States\"\nmpres@mpProjection           = \"LambertConformal\"\nmpres@mpLambertParallel1F    = 33.\nmpres@mpLambertParallel2F    = 45.\nmpres@mpLambertMeridianF     = -98.\nmpres@mpMinLonF = -120 ;min(lon)+0.2\nmpres@mpMaxLonF = -70 ;max(lon)-0.2\nmpres@mpMinLatF = 25 ;min(lat)+0.05\nmpres@mpMaxLatF = 50 ;max(lat)-0.05\nmpres@pmTickMarkDisplayMode   = \"Always\"\nmpres@mpLandFillColor         = \"white\"\nmpres@mpInlandWaterFillColor  = \"white\"\nmpres@mpOceanFillColor        = \"white\"\nmpres@mpGeophysicalLineColor    = \"Black\"\n\n;mpres@lbLabelAutoStride       = True\nmpres@tiXAxisFont             = 25\nmpres@pmTickMarkDisplayMode   = \"Always\"\nmpres@tmXBLabelFont           = 25\nmpres@tmXBLabelFontHeightF    = 0.013\nmpres@tmXBLabelDeltaF         = -0.5\nmpres@tmYLLabelFont           = 25\nmpres@tmYLLabelFontHeightF    = 0.013\nmpres@tmXBLabelDeltaF         = -0.5\nmpres@tmXTLabelsOn            = False\nmpres@tmXTLabelFont           = 25\nmpres@tmXTLabelFontHeightF    = 0.013\nmpres@tmYRLabelsOn            = False\nmpres@tmYRLabelFont           = 25\nmpres@tmYRLabelFontHeightF    = 0.013\n\n;;set contour;;\ncnres                         = res\ncnres@cnFillDrawOrder         = \"PreDraw\"\ncnres@cnFillOn                = True\ncnres@cnLinesOn               = False\ncnres@cnLineLabelsOn          = False\ncnres@lbLabelFont             = 25\ncnres@lbLabelFontHeightF      = 0.013\ncnres@tiXAxisFont             = 25\ncnres@pmLabelBarWidthF        = 0.5\ncnres@pmLabelBarHeightF       = 0.1\n;cnres@pmLabelBarOrthogonalPosF = -0.02\ncnres@lbLabelAutoStride       = True\n\n;set vector;;\nres_vc                        = res\nres_vc@vcGlyphStyle           = \"LineArrow\"\nres_vc@vcLineArrowThicknessF  = 3\nres_vc@vcMinDistanceF         = 0.03\nres_vc@vcRefLengthF           = 0.03\nres_vc@vcRefAnnoOn            = True\nres_vc@vcRefMagnitudeF           = 16\nres_vc@vcRefAnnoString1          = \"16m/s\"\nres_vc@vcRefAnnoSide             = \"Top\"\nres_vc@vcRefAnnoString2On        = False\nres_vc@vcRefAnnoPerimOn          = False\nres_vc@vcRefAnnoOrthogonalPosF   = -0.02\nres_vc@vcRefAnnoParallelPosF     = 0.999\n;res_vc@vcRefAnnoBackgroundColor = \"White\"\nres_vc@vcVectorDrawOrder         = \"PostDraw\"\n\ndo it = 0, nt-1\n  if (it .lt. 12) then\n    pdate=d1\n  else\n    pdate=d2\n  end if\n\n  ;print(time(it,0)+\" \"+time(it,1))\n  rundate = yyyyddd_to_yyyymmdd( time(it,0) )\n  runtime = hr( tointeger(time(it,1)/10000) )\n\n  site = readAsciiTable(obs_dir+\"/AQF5X_Hourly_\"+rundate+runtime+\".dat\",1,\"string\",1)\n  nrows = dimsizes(site)\n  sitename = str_get_field(site,1,\",\")\n  sitelat = stringtofloat(str_get_field(site,2,\",\"))\n  sitelon = stringtofloat(str_get_field(site,3,\",\"))\n  O3_obs = stringtofloat(str_get_field(site,4,\",\"))\n\n  obslon = sitelon(:,0)\n  obslat = sitelat(:,0)\n  obsO3 = O3_obs(:,0)\n\n  npts = nrows(0)\n\n  obsO3@_FillValue = -999.\n\n;--- levels for dividing\n  levels_O3  = ispan(0,80,4)\n\n  nlevels = dimsizes(levels_O3)\n\n  colors  = span_color_rgba(\"WhiteBlueGreenYellowRed\",nlevels+1)\n\n  num_distinct_markers = nlevels+1        ; number of distinct markers\n  lat_O3 = new((/num_distinct_markers,npts/),float)\n  lon_O3 = new((/num_distinct_markers,npts/),float)\n  lat_O3 = -999\n  lon_O3 = -999\n\n\n;\n; Group the points according to which range they fall in. At the\n; same time, create the label that we will use later in the labelbar\n;\n  do i = 0, num_distinct_markers-1\n    if (i.eq.0) then\n      indexes_O3 = ind(obsO3(:).lt.levels_O3(0))\n    end if\n    if (i.eq.num_distinct_markers-1) then\n      indexes_O3 = ind(obsO3(:).ge.max(levels_O3))\n    end if\n    if (i.gt.0.and.i.lt.num_distinct_markers-1) then\n      indexes_O3 = ind(obsO3(:).ge.levels_O3(i-1).and.obsO3(:).lt.levels_O3(i))\n    end if\n\n;\n; Now that we have the set of indexes whose values fall within\n; the given range, take the corresponding lat/lon values and store\n; them, so later we can color this set of markers with the appropriate\n; color.\n;\n    if (.not.any(ismissing(indexes_O3))) then\n      npts_range_O3 = dimsizes(indexes_O3)   ; # of points in this range.\n\n      lat_O3(i,0:npts_range_O3-1) = obslat(indexes_O3)\n      lon_O3(i,0:npts_range_O3-1) = obslon(indexes_O3)\n  ;print(\"O3: \"+npts_range_O3)\n    end if\n\n\n    delete(indexes_O3)            ; Necessary b/c \"indexes\" may be a different\n  end do\n\n  lat_O3@_FillValue = -999\n  lon_O3@_FillValue = -999\n\n  gsres               = True\n  gsres@gsMarkerIndex = 16          ; Use filled dots for markers.\n\n  hollowres           = True\n  hollowres@gsMarkerIndex    = 4\n  hollowres@gsMarkerColor    = \"black\"\n  hollowres@gsMarkerSizeF    = 0.008\n\n;;;;;;;;;   Plot Ozone\n  pname=plot_dir+\"/OBS-FORECAST_O3_\"+rundate+runtime\n  wks = gsn_open_wks(\"png\",pname)\n  gsn_define_colormap(wks, \"WhiteBlueGreenYellowRed\")\n\n  pmid_O3 = new(num_distinct_markers,graphic)\n  hollow_O3 = new(num_distinct_markers,graphic)\n\n  cnres@tiMainString =  pdate+\" \"+runtime+\" UTC O~B~3~N~ (ppbV)\"\n  cnres@cnLevelSelectionMode = \"ManualLevels\"\n  cnres@cnMinLevelValF          = 0.\n  cnres@cnMaxLevelValF          = 80\n  cnres@cnLevelSpacingF         = 4\n\n  ;plot = gsn_csm_contour_map(wks,o3(it,:,:),res)\n  map = gsn_csm_map(wks,mpres)\n  contour = gsn_csm_contour(wks,o3(it,:,:),cnres)\n  vector  = gsn_csm_vector(wks,UV10(0,it,:,:),UV10(1,it,:,:),res_vc)\n  overlay(map,contour)\n  overlay(map,vector)\n\n  pmid = new(num_distinct_markers,graphic)\n  hollow = new(num_distinct_markers,graphic)\n  do i = 0, num_distinct_markers-1\n    if (.not.ismissing(lat_O3(i,0)))\n      gsres@gsMarkerColor      = colors(i,:)\n      gsres@gsMarkerSizeF      = 0.008\n      gsres@gsMarkerThicknessF = 1\n       pmid(i) = gsn_add_polymarker(wks,vector,lon_O3(i,:),lat_O3(i,:),gsres)\n       hollow(i) = gsn_add_polymarker(wks,vector,lon_O3(i,:),lat_O3(i,:),hollowres)\n    end if\n  end do\n\n  draw(map)\n  frame(wks)\n  delete(wks)\n  delete(pmid_O3)\n  delete(hollow_O3)\n  system(\"composite -geometry 100x70+900+900 /groups/ESS/zsun/cmaq/mason-logo-green.png \"+pname+\".png \"+pname+\".png\")\n\n\n  delete(pmid)\n  delete(hollow)\n  delete(site)\n  delete(sitename)\n  delete(sitelat)\n  delete(sitelon)\n  delete(O3_obs)\n  delete(obslon)\n  delete(obslat)\n  delete(obsO3)\n  delete([/lon_O3,lat_O3/])\n\nend do\ndelete(res)\n\n;/\n\nend\nEOF\n\n\nncl $cmaq_folder/geoweaver_plot_daily_O3_Airnow.ncl\n\nconvert -delay 100 $cmaq_folder/plots/OBS*.png $cmaq_folder/plots/\"Airnow_\"$YYYYMMDD_POST.gif\n\nif [ $? -eq 0 ]; then\n    echo \"Generating AirNow images/gif Completed Successfully\"\n\techo \"Removing ncl file: geoweaver_plot_daily_O3_Airnow.ncl...\"\n\t#rm $cmaq_folder/geoweaver_plot_daily_O3_Airnow.ncl\nelse\n    echo \"Generating AirNow images/gif Failed!\"\n    echo \"Removing ncl file: geoweaver_plot_daily_O3_Airnow.ncl...\"\n\t#rm $cmaq_folder/geoweaver_plot_daily_O3_Airnow.ncl\nfi\n",
  "history_output" : "mkdir: cannot create directory ‘/groups/ESS3/aalnaim/cmaq/plots’: File exists\n Copyright (C) 1995-2019 - All Rights Reserved\n University Corporation for Atmospheric Research\n NCAR Command Language Version 6.6.2\n The use of this software is governed by a License Agreement.\n See http://www.ncl.ucar.edu/ for more details.\n\n\nVariable: plot_dir\nType: string\nTotal Size: 8 bytes\n            1 values\nNumber of Dimensions: 1\nDimensions and sizes:\t[1]\nCoordinates: \n(0)\t/groups/ESS3/aalnaim/cmaq/plots\n(0)\t/groups/ESS3/aalnaim/cmaq/prediction_nc_files/COMBINE3D_ACONC_v531_gcc_AQF5X_20221002_ML_extracted.nc\n(0)\t310.2975\n(0)\t268.8609\n(0)\t289.9856\n(0)\t24 265 442\n(0)\t77.05\n(0)\t1.61\n(0)\t27.69010155563478\n",
  "history_begin_time" : 1665024624705,
  "history_end_time" : 1665032721299,
  "history_notes" : null,
  "history_process" : "is1w3m",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "vcu6ifrtg3r",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665023826740,
  "history_end_time" : 1665032721312,
  "history_notes" : null,
  "history_process" : "h76ld0",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "wgi2pyls8qw",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665023826744,
  "history_end_time" : 1665032721312,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "ytgbr8sua9h",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665023826747,
  "history_end_time" : 1665032721313,
  "history_notes" : null,
  "history_process" : "pvzabv",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "z8hz5crft5v",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665023826787,
  "history_end_time" : 1665032721314,
  "history_notes" : null,
  "history_process" : "8i9ptn",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
}]
