[{
  "history_id" : "0etxwxxvq2o",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665021841846,
  "history_end_time" : 1665023784685,
  "history_notes" : null,
  "history_process" : "6up921",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "xk8sskfumsa",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665021841869,
  "history_end_time" : 1665023784696,
  "history_notes" : null,
  "history_process" : "xpdg66",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "xckraoz0r9e",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665021841874,
  "history_end_time" : 1665023784699,
  "history_notes" : null,
  "history_process" : "xlayd5",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "6rhf30s4pw6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665021841877,
  "history_end_time" : 1665023784708,
  "history_notes" : null,
  "history_process" : "argv3i",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "pbrj8jn1ryb",
  "history_input" : "# use the trained model to predict on the testing data and save the results to prediction_rf.csv\n\nimport pandas as pd\nimport pickle\nfrom pathlib import Path\nfrom time import sleep\nimport glob, os\nfrom sklearn.metrics import r2_score, mean_squared_error\nfrom cmaq_ai_utils import *\n\ncreate_and_clean_folder(f\"{cmaq_folder}/prediction_files/\")\n\n# importing data\n# final=pd.read_csv(f\"{cmaq_folder}/testing_input_hourly/testing.csv\")\ntesting_path = f'{cmaq_folder}/testing_input_hourly'\nall_hourly_files = glob.glob(os.path.join(testing_path, \"test_data_*.csv\"))\ndf_from_each_hourly_file = (pd.read_csv(f) for f in all_hourly_files)\n\n# load the model from disk\n# filename = f'{cmaq_folder}/models/rf_pycaret.sav'\n\nfilename = f'{cmaq_folder}/models/rf_pycaret_o3_one_year.sav'\nloaded_model = pickle.load(open(filename, 'rb'))\n\nfor testing_df in df_from_each_hourly_file:\n  print(testing_df['YYYYMMDDHH'].values[0])\n  file_dateTime = testing_df['YYYYMMDDHH'].values[0]\n  #X = testing_df.drop(['YYYYMMDDHH','Latitude','Longitude'],axis=1)\n  testing_df['time_of_day'] = (testing_df['hours'] % 24 + 4) // 4\n\n  # Make coords even more coarse by rounding to closest multiple of 5 \n  # (e.g., 40, 45, 85, 55)\n  #testing_df['Latitude_ExtraCoarse'] = 0.1 * round(testing_df['Latitude']/0.1)\n  #testing_df['Longitude_ExtraCoarse'] = 0.1 * round(testing_df['Longitude']/0.1)\n  X = testing_df.drop(['YYYYMMDDHH','Latitude','Longitude', 'CO(moles/s)'],axis=1)\n  \n  print(X.columns)\n\n# # making prediction\n  pred = loaded_model.predict(X)\n\n# adding prediction values to test dataset\n  #testing_df['prediction'] = testing_df['CMAQ12KM_O3(ppb)'].tolist()\n  testing_df['prediction'] = pred\n\n  testing_df = testing_df[['Latitude', 'Longitude','YYYYMMDDHH','prediction']]\n# saving the dataset into local drive\n  print(f'Saving: {cmaq_folder}/prediction_files/prediction_rf_{file_dateTime}.csv')\n  testing_df.to_csv(f'{cmaq_folder}/prediction_files/prediction_rf_{file_dateTime}.csv',index=False)",
  "history_output" : "Running",
  "history_begin_time" : 1665022243996,
  "history_end_time" : 1665023784712,
  "history_notes" : null,
  "history_process" : "l8vlic",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "2tvw1u8cosv",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665021841926,
  "history_end_time" : 1665023785724,
  "history_notes" : null,
  "history_process" : "wny2dz",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "5w3pj03kqb1",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1665023785725,
  "history_notes" : null,
  "history_process" : "3asyzj",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "lmnt1d5eg53",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665021841975,
  "history_end_time" : 1665023785743,
  "history_notes" : null,
  "history_process" : "9xdvh6",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "jknvleuzfnm",
  "history_input" : "# get hourly CMAQ data into csv for prediction\n\nfrom cmaq_ai_utils import *\n\n\n# Auto date method\nsdate, edate = get_date_range_auto(days_ago=3)\n\n# Manual date method\n# sdate = date(2022, 8, 6)   # start date\n# edate = date(2022, 8, 7)   # end date\n\ndays = get_days_list(sdate, edate)\n\nreal_hour_list = [12,13,14,15,16,17,18,19,20,21,22,23,0,1,2,3,4,5,6,7,8,9,10,11]\ntime_step_in_netcdf_list = range(0,24)\n\ntest_folder = f\"{cmaq_folder}/testing_input_hourly/\"\ncreate_and_clean_folder(test_folder)\n\nfor x in range(len(days)-1):\n  current_day = days[x]\n  next_day = days[x+1]\n  print(\"Getting data for: \"+current_day)\n  \n  # read cmaq results\n  df_cmaq = xr.open_dataset(\"/groups/ESS/share/projects/SWUS3km/data/cmaqdata/CCTMout/12km/POST/COMBINE3D_ACONC_v531_gcc_AQF5X_\"+current_day+\"_extracted.nc\")\n  \n  # read mcip results \n  df_mcip = xr.open_dataset(\"/groups/ESS/share/projects/SWUS3km/data/cmaqdata/mcip/12km/METCRO2D_\"+current_day+\".nc\")\n  \n  # read emissions results \n  df_emis = xr.open_dataset(\"/groups/ESS/share/projects/SWUS3km/data/cmaqdata/emis2021/12km/all/emis_mole_all_\"+current_day+\"_AQF5X_cmaq_cb6ae7_2017gb_17j.ncf\")\n  \n  for k in time_step_in_netcdf_list:\n    real_hour_value = real_hour_list[k]\n    \n    if real_hour_value<12:\n      day = next_day\n    else:\n      day = current_day\n    \n    df_hourly = pd.DataFrame()\n    \n    print(\"df_cmaq.variables['O3'] shape: \", df_cmaq.variables['O3'].shape)\n    print(\"df_cmaq.variables['O3'][:] shape: \", df_cmaq.variables['O3'][:].shape)\n    print(\"df_cmaq.variables['O3'][:].values[k, 0].shape\", df_cmaq.variables['O3'][:].values[k, 0].shape)\n    # CMAQ data\n    # O3 variable\n    o3=df_cmaq.variables['O3'][:].values[k, 0]\n    cmaq_O3=list(np.ravel(o3).transpose())\n    print(\"o3 shape: \", o3.shape)\n    print(\"cmaq_O3 shape: \", np.ravel(o3).transpose().shape)\n    \n    # NO2\n    no2=df_cmaq.variables['NO2'][:].values[k, 0]\n    cmaq_NO2=list(np.ravel(no2).transpose())\n    \n    # CO\n    co=df_cmaq.variables['CO'][:].values[k, 0]\n    cmaq_CO=list(np.ravel(co).transpose())\n    \n    # PM25_CO\n    pm25=df_cmaq.variables['PM25_OC'][:].values[k, 0]\n    cmaq_PM25_CO=list(np.ravel(pm25).transpose())\n    \n    # EMIS data\n    co_emis=df_emis.variables['CO'][:].values[k, 0]\n    CO_emi=list(np.ravel(co_emis).transpose())    \n    \n    # MCIP data\n    # CO variable\n    prsfc=df_mcip.variables['PRSFC'][:].values[k, 0]\n    PRSFC=list(np.ravel(prsfc).transpose())\n    \n    # NO2\n    pbl=df_mcip.variables['PBL'][:].values[k, 0]\n    PBL=list(np.ravel(pbl).transpose())\n    \n    # TEMP2\n    temp2=df_mcip.variables['TEMP2'][:].values[k, 0]\n    TEMP2=list(np.ravel(temp2).transpose())\n    \n    # WSPD10\n    wspd10=df_mcip.variables['WSPD10'][:].values[k, 0]\n    WSPD10=list(np.ravel(wspd10).transpose())\n    \n    # WDIR10\n    wdir10=df_mcip.variables['WDIR10'][:].values[k, 0]\n    WDIR10=list(np.ravel(wdir10).transpose())\n    \n    # RGRND\n    rgrnd=df_mcip.variables['RGRND'][:].values[k, 0]\n    RGRND=list(np.ravel(rgrnd).transpose())\n    \n    # CFRAC\n    cfrac=df_mcip.variables['CFRAC'][:].values[k, 0]\n    CFRAC=list(np.ravel(cfrac).transpose())\n    \n    ## LAT/LON data\n    df_coords = xr.open_dataset('/home/yli74/scripts/plots/2020fire/GRIDCRO2D')\n    \n    lat = df_coords.variables['LAT'][:].values[0,0]\n    print(\"lat shape\", lat.shape)\n    lat_flt=np.ravel(lat)\n    LAT=lat_flt #np.tile(lat_flt,1)\n    \n    lon = df_coords.variables['LON'][:].values[0,0]\n    lon_flt=np.ravel(lon)\n    LON=lon_flt #np.tile(lon_flt,1)\n    \n    df_hourly['Latitude'] = LAT\n    df_hourly['Longitude'] = LON\n    df_hourly['YYYYMMDDHH'] = day+turn_2_digits(real_hour_value)\n    df_hourly['CMAQ12KM_O3(ppb)'] = cmaq_O3\n    df_hourly['CMAQ12KM_NO2(ppb)'] = cmaq_NO2\n    df_hourly['CMAQ12KM_CO(ppm)'] = cmaq_CO\n    df_hourly['CMAQ_OC(ug/m3)'] = cmaq_PM25_CO\n    df_hourly['CO(moles/s)'] = CO_emi\n    df_hourly['PRSFC(Pa)'] = PRSFC\n    df_hourly['PBL(m)'] = PBL\n    df_hourly['TEMP2(K)'] = TEMP2\n    df_hourly['WSPD10(m/s)'] = WSPD10\n    df_hourly['WDIR10(degree)'] = WDIR10\n    df_hourly['RGRND(W/m2)'] = RGRND\n    df_hourly['CFRAC'] = CFRAC\n    df_hourly['month'] = df_hourly['YYYYMMDDHH'].str[4:6]\n    df_hourly['day'] = df_hourly['YYYYMMDDHH'].str[6:8]\n    df_hourly['hours'] = df_hourly['YYYYMMDDHH'].str[8:10]\n    print(f'Saving file: test_data_{day}_{turn_2_digits(real_hour_value)}.csv')\n    df_hourly.to_csv(f'{test_folder}/test_data_{day}_{turn_2_digits(real_hour_value)}.csv',index=False)\n\nprint('Done with preparing testing data!')",
  "history_output" : "Getting data for: 20221002\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221002_12.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221002_13.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221002_14.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221002_15.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221002_16.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221002_17.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221002_18.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221002_19.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221002_20.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221002_21.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221002_22.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221002_23.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221003_00.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221003_01.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221003_02.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221003_03.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221003_04.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221003_05.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221003_06.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221003_07.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221003_08.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221003_09.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221003_10.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221003_11.csv\nGetting data for: 20221003\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221003_12.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221003_13.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221003_14.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221003_15.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221003_16.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221003_17.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221003_18.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221003_19.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221003_20.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221003_21.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221003_22.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221003_23.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221004_00.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221004_01.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221004_02.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221004_03.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221004_04.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221004_05.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221004_06.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221004_07.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221004_08.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221004_09.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221004_10.csv\ndf_cmaq.variables['O3'] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:] shape:  (24, 35, 265, 442)\ndf_cmaq.variables['O3'][:].values[k, 0].shape (265, 442)\no3 shape:  (265, 442)\ncmaq_O3 shape:  (117130,)\nlat shape (265, 442)\nSaving file: test_data_20221004_11.csv\nDone with preparing testing data!\n",
  "history_begin_time" : 1665021842586,
  "history_end_time" : 1665023785743,
  "history_notes" : null,
  "history_process" : "ex3vh9",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "hg0y8d3q2gy",
  "history_input" : "# merge all hourly testing data into daily files\n\nimport pandas as pd\nimport glob\nimport os\nfrom pathlib import Path\nfrom cmaq_ai_utils import *\n\ntesting_path = f'{cmaq_folder}/testing_input_hourly'\nall_hourly_files = glob.glob(os.path.join(testing_path, \"test_data_*.csv\"))   \n# advisable to use os.path.join as this makes concatenation OS independent\n\ndf_from_each_hourly_file = (pd.read_csv(f) for f in all_hourly_files)\ncmaq = pd.concat(df_from_each_hourly_file, ignore_index=True)\n\n# dropping unnecessary variables\ncmaq['YYYYMMDDHH'] = cmaq['YYYYMMDDHH'].map(str)\ncmaq['month'] = cmaq['YYYYMMDDHH'].str[4:6]\ncmaq['day'] = cmaq['YYYYMMDDHH'].str[6:8]\ncmaq['hours'] = cmaq['YYYYMMDDHH'].str[8:10]\n\nremove_file(f\"{testing_path}/testing.csv\")\ncmaq.to_csv(f\"{testing_path}/testing.csv\",index=False)\n\nprint('Done with generating testing.csv!')",
  "history_output" : "remove old files/groups/ESS3/aalnaim/cmaq//testing_input_hourly/testing.csv\nDone with generating testing.csv!\n",
  "history_begin_time" : 1665022136669,
  "history_end_time" : 1665023785744,
  "history_notes" : null,
  "history_process" : "b8uv5z",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "ga0h0hewvyx",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1665023785746,
  "history_notes" : null,
  "history_process" : "iicy7w",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "7gu357t1xot",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1665023785750,
  "history_notes" : null,
  "history_process" : "fsk7f2",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "d18s8fokdeh",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1665023785759,
  "history_notes" : null,
  "history_process" : "is1w3m",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "hxfav377zc7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665021842186,
  "history_end_time" : 1665023785765,
  "history_notes" : null,
  "history_process" : "h76ld0",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "wfwam9xckr5",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665021842216,
  "history_end_time" : 1665023785766,
  "history_notes" : null,
  "history_process" : "s6hbic",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "0log86ii787",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665021842241,
  "history_end_time" : 1665023785768,
  "history_notes" : null,
  "history_process" : "pvzabv",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
},{
  "history_id" : "ztmdk56u4q2",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1665021842254,
  "history_end_time" : 1665023785770,
  "history_notes" : null,
  "history_process" : "8i9ptn",
  "host_id" : "p6wvf2",
  "indicator" : "Stopped"
}]
