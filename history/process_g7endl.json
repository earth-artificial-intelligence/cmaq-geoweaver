[{
  "history_id" : "vrr1wndu5hi",
  "history_input" : "# importing necessary libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nfrom pathlib import Path\nimport geopandas as gpd\nimport cmaps\nfrom datetime import datetime\n\nimport imageio\nimport glob\nimport os\n\n\nmpl.rcParams['font.size'] = 25\n#os.system('module load ffmpeg') # Uncomment if running on HOPPER\n\n# home directory\nhome = str(Path.home())\n\n# Delete previous .tif images only (not folder) to reduce space if folder and files exist already.\nif Path(home + \"/cmaq/prediction_maps/\"):\n    for file in Path(home + \"/cmaq/prediction_maps/\").glob(\"*\"):\n        if file.is_file():\n          [f.unlink() for f in Path(home + \"/cmaq/prediction_maps/\").glob(\"*\") if f.is_file()] \n\n# importing data\ndf = raw_df = pd.read_csv(home + '/cmaq/prediction_files/prediction_rf.csv')\n\ntime_ = df['YYYYMMDDHH'].unique()\ndfs = dict(tuple(df.groupby('YYYYMMDDHH')))  # grouping the data by YYMMDDHH\n\ncmap = cmaps.WhiteBlueGreenYellowRed[0:262:12]\n\ncount = 0\n\nfor t in time_:\n  \n    dateObj = datetime.strptime(str(t), \"%Y%m%d%H\")\n    print(t)\n    \n    single_hour_df = raw_df.loc[raw_df['YYYYMMDDHH']==t]\n    #print(single_hour_df)\n    print(\"max: \", single_hour_df[\"prediction\"].max())\n    print(\"min: \", single_hour_df[\"prediction\"].min())\n    print(\"median: \", single_hour_df[\"prediction\"].median())\n    print(\"mean: \", single_hour_df[\"prediction\"].mean())\n    \n    count += 1\n    \n    df = dfs[t]\n    \n    gdf = gpd.GeoDataFrame(\n        df, geometry=gpd.points_from_xy(df.Longitude, df.Latitude))\n    gdf = gdf.set_crs(\"EPSG:4326\")\n    #gdf = gdf.to_crs(\"+proj=lcc +lat_1=2 +lat_2=33.000 +lat_0=45.000 +lon_0=-97.000 +x_0=-97.000 +y_0=40.000 +datum=NAD83 +units=m +no_defs\")\n\n    gdf.plot(column='prediction', legend=True, figsize=(20, 18),\n         cmap=cmap, vmin=0,vmax=80,)\n    \n    plotTitle = datetime.strftime(dateObj, \"%Y-%m-%d (Time: %H)\")\n    plt.title(plotTitle, fontdict={'fontsize': 35})\n    plt.savefig(home + \"/cmaq/prediction_maps/CMAQ_\" + str(t) + \".tif\")\n    \n    if count > 5:\n         break;\n",
  "history_output" : "Traceback (most recent call last):\n  File \"/Users/joe/gw-workspace/vrr1wndu5hi/cmaq_rf_vis.py\", line 8, in <module>\n    import cmaps\nModuleNotFoundError: No module named 'cmaps'\n",
  "history_begin_time" : 1654727118953,
  "history_end_time" : 1654727119959,
  "history_notes" : null,
  "history_process" : "g7endl",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "hykrvpwa54e",
  "history_input" : "# importing necessary libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nfrom pathlib import Path\nimport geopandas as gpd\nimport cmaps\nfrom datetime import datetime\n\nimport imageio\nimport glob\nimport os\n\n\nmpl.rcParams['font.size'] = 25\n#os.system('module load ffmpeg') # Uncomment if running on HOPPER\n\n# home directory\nhome = str(Path.home())\n\n# Delete previous .tif images only (not folder) to reduce space if folder and files exist already.\nif Path(home + \"/cmaq/prediction_maps/\"):\n    for file in Path(home + \"/cmaq/prediction_maps/\").glob(\"*\"):\n        if file.is_file():\n          [f.unlink() for f in Path(home + \"/cmaq/prediction_maps/\").glob(\"*\") if f.is_file()] \n\n# importing data\ndf = raw_df = pd.read_csv(home + '/cmaq/prediction_files/prediction_rf.csv')\n\ntime_ = df['YYYYMMDDHH'].unique()\ndfs = dict(tuple(df.groupby('YYYYMMDDHH')))  # grouping the data by YYMMDDHH\n\ncmap = cmaps.WhiteBlueGreenYellowRed[0:262:12]\n\ncount = 0\n\nfor t in time_:\n  \n    dateObj = datetime.strptime(str(t), \"%Y%m%d%H\")\n    print(t)\n    \n    single_hour_df = raw_df.loc[raw_df['YYYYMMDDHH']==t]\n    #print(single_hour_df)\n    print(\"max: \", single_hour_df[\"prediction\"].max())\n    print(\"min: \", single_hour_df[\"prediction\"].min())\n    print(\"median: \", single_hour_df[\"prediction\"].median())\n    print(\"mean: \", single_hour_df[\"prediction\"].mean())\n    \n    count += 1\n    \n    df = dfs[t]\n    \n    gdf = gpd.GeoDataFrame(\n        df, geometry=gpd.points_from_xy(df.Longitude, df.Latitude))\n    gdf = gdf.set_crs(\"EPSG:4326\")\n    #gdf = gdf.to_crs(\"+proj=lcc +lat_1=2 +lat_2=33.000 +lat_0=45.000 +lon_0=-97.000 +x_0=-97.000 +y_0=40.000 +datum=NAD83 +units=m +no_defs\")\n\n    gdf.plot(column='prediction', legend=True, figsize=(20, 18),\n         cmap=cmap, vmin=0,vmax=80,)\n    \n    plotTitle = datetime.strftime(dateObj, \"%Y-%m-%d (Time: %H)\")\n    plt.title(plotTitle, fontdict={'fontsize': 35})\n    plt.savefig(home + \"/cmaq/prediction_maps/CMAQ_\" + str(t) + \".tif\")\n    \n    if count > 5:\n         break;\n",
  "history_output" : "Traceback (most recent call last):\n  File \"cmaq_rf_vis.py\", line 29, in <module>\n    df = raw_df = pd.read_csv(home + '/cmaq/prediction_files/prediction_rf.csv')\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/io/parsers.py\", line 686, in read_csv\n    return _read(filepath_or_buffer, kwds)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/io/parsers.py\", line 452, in _read\n    parser = TextFileReader(fp_or_buf, **kwds)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/io/parsers.py\", line 946, in __init__\n    self._make_engine(self.engine)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/io/parsers.py\", line 1178, in _make_engine\n    self._engine = CParserWrapper(self.f, **self.options)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/io/parsers.py\", line 2008, in __init__\n    self._reader = parsers.TextReader(src, **kwds)\n  File \"pandas/_libs/parsers.pyx\", line 382, in pandas._libs.parsers.TextReader.__cinit__\n  File \"pandas/_libs/parsers.pyx\", line 674, in pandas._libs.parsers.TextReader._setup_parser_source\nFileNotFoundError: [Errno 2] No such file or directory: '/home/zsun/cmaq/prediction_files/prediction_rf.csv'\n",
  "history_begin_time" : 1654619696042,
  "history_end_time" : 1654619726638,
  "history_notes" : null,
  "history_process" : "g7endl",
  "host_id" : "aqt8fv",
  "indicator" : "Failed"
},{
  "history_id" : "ua07j5sdeap",
  "history_input" : "# importing necessary libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nfrom pathlib import Path\nimport geopandas as gpd\nimport cmaps\nfrom datetime import datetime\n\nimport imageio\nimport glob\nimport os\n\n\nmpl.rcParams['font.size'] = 25\n#os.system('module load ffmpeg') # Uncomment if running on HOPPER\n\n# home directory\nhome = str(Path.home())\n\n# Delete previous .tif images only (not folder) to reduce space if folder and files exist already.\nif Path(home + \"/cmaq/prediction_maps/\"):\n    for file in Path(home + \"/cmaq/prediction_maps/\").glob(\"*\"):\n        if file.is_file():\n          [f.unlink() for f in Path(home + \"/cmaq/prediction_maps/\").glob(\"*\") if f.is_file()] \n\n# importing data\ndf = raw_df = pd.read_csv(home + '/cmaq/prediction_files/prediction_rf.csv')\n\ntime_ = df['YYYYMMDDHH'].unique()\ndfs = dict(tuple(df.groupby('YYYYMMDDHH')))  # grouping the data by YYMMDDHH\n\ncmap = cmaps.WhiteBlueGreenYellowRed[0:262:12]\n\ncount = 0\n\nfor t in time_:\n  \n    dateObj = datetime.strptime(str(t), \"%Y%m%d%H\")\n    print(t)\n    \n    single_hour_df = raw_df.loc[raw_df['YYYYMMDDHH']==t]\n    #print(single_hour_df)\n    print(\"max: \", single_hour_df[\"prediction\"].max())\n    print(\"min: \", single_hour_df[\"prediction\"].min())\n    print(\"median: \", single_hour_df[\"prediction\"].median())\n    print(\"mean: \", single_hour_df[\"prediction\"].mean())\n    \n    count += 1\n    \n    df = dfs[t]\n    \n    gdf = gpd.GeoDataFrame(\n        df, geometry=gpd.points_from_xy(df.Longitude, df.Latitude))\n    gdf = gdf.set_crs(\"EPSG:4326\")\n    #gdf = gdf.to_crs(\"+proj=lcc +lat_1=2 +lat_2=33.000 +lat_0=45.000 +lon_0=-97.000 +x_0=-97.000 +y_0=40.000 +datum=NAD83 +units=m +no_defs\")\n\n    gdf.plot(column='prediction', legend=True, figsize=(20, 18),\n         cmap=cmap, vmin=0,vmax=80,)\n    \n    plotTitle = datetime.strftime(dateObj, \"%Y-%m-%d (Time: %H)\")\n    plt.title(plotTitle, fontdict={'fontsize': 35})\n    plt.savefig(home + \"/cmaq/prediction_maps/CMAQ_\" + str(t) + \".tif\")\n    \n    if count > 5:\n         break;\n",
  "history_output" : "Traceback (most recent call last):\n  File \"cmaq_rf_vis.py\", line 29, in <module>\n    df = raw_df = pd.read_csv(home + '/cmaq/prediction_files/prediction_rf.csv')\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/io/parsers.py\", line 686, in read_csv\n    return _read(filepath_or_buffer, kwds)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/io/parsers.py\", line 452, in _read\n    parser = TextFileReader(fp_or_buf, **kwds)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/io/parsers.py\", line 946, in __init__\n    self._make_engine(self.engine)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/io/parsers.py\", line 1178, in _make_engine\n    self._engine = CParserWrapper(self.f, **self.options)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/io/parsers.py\", line 2008, in __init__\n    self._reader = parsers.TextReader(src, **kwds)\n  File \"pandas/_libs/parsers.pyx\", line 382, in pandas._libs.parsers.TextReader.__cinit__\n  File \"pandas/_libs/parsers.pyx\", line 674, in pandas._libs.parsers.TextReader._setup_parser_source\nFileNotFoundError: [Errno 2] No such file or directory: '/home/zsun/cmaq/prediction_files/prediction_rf.csv'\n",
  "history_begin_time" : 1654477602055,
  "history_end_time" : 1654477637578,
  "history_notes" : null,
  "history_process" : "g7endl",
  "host_id" : "roeaa3",
  "indicator" : "Failed"
},{
  "history_id" : "mlpcqda80t8",
  "history_input" : "# importing necessary libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nfrom pathlib import Path\nimport geopandas as gpd\nimport cmaps\nfrom datetime import datetime\n\nimport imageio\nimport glob\nimport os\n\n\nmpl.rcParams['font.size'] = 25\n#os.system('module load ffmpeg') # Uncomment if running on HOPPER\n\n# home directory\nhome = str(Path.home())\n\n# Delete previous .tif images only (not folder) to reduce space if folder and files exist already.\nif Path(home + \"/cmaq/prediction_maps/\"):\n    for file in Path(home + \"/cmaq/prediction_maps/\").glob(\"*\"):\n        if file.is_file():\n          [f.unlink() for f in Path(home + \"/cmaq/prediction_maps/\").glob(\"*\") if f.is_file()] \n\n# importing data\ndf = raw_df = pd.read_csv(home + '/cmaq/prediction_files/prediction_rf.csv')\n\ntime_ = df['YYYYMMDDHH'].unique()\ndfs = dict(tuple(df.groupby('YYYYMMDDHH')))  # grouping the data by YYMMDDHH\n\ncmap = cmaps.WhiteBlueGreenYellowRed[0:262:12]\n\ncount = 0\n\nfor t in time_:\n  \n    dateObj = datetime.strptime(str(t), \"%Y%m%d%H\")\n    print(t)\n    \n    single_hour_df = raw_df.loc[raw_df['YYYYMMDDHH']==t]\n    #print(single_hour_df)\n    print(\"max: \", single_hour_df[\"prediction\"].max())\n    print(\"min: \", single_hour_df[\"prediction\"].min())\n    print(\"median: \", single_hour_df[\"prediction\"].median())\n    print(\"mean: \", single_hour_df[\"prediction\"].mean())\n    \n    count += 1\n    \n    df = dfs[t]\n    \n    gdf = gpd.GeoDataFrame(\n        df, geometry=gpd.points_from_xy(df.Longitude, df.Latitude))\n    gdf = gdf.set_crs(\"EPSG:4326\")\n    #gdf = gdf.to_crs(\"+proj=lcc +lat_1=2 +lat_2=33.000 +lat_0=45.000 +lon_0=-97.000 +x_0=-97.000 +y_0=40.000 +datum=NAD83 +units=m +no_defs\")\n\n    gdf.plot(column='prediction', legend=True, figsize=(20, 18),\n         cmap=cmap, vmin=0,vmax=80,)\n    \n    plotTitle = datetime.strftime(dateObj, \"%Y-%m-%d (Time: %H)\")\n    plt.title(plotTitle, fontdict={'fontsize': 35})\n    plt.savefig(home + \"/cmaq/prediction_maps/CMAQ_\" + str(t) + \".tif\")\n    \n    if count > 5:\n         break;\n",
  "history_output" : "Traceback (most recent call last):\n  File \"cmaq_rf_vis.py\", line 7, in <module>\n    import geopandas as gpd\nModuleNotFoundError: No module named 'geopandas'\n",
  "history_begin_time" : 1654466005613,
  "history_end_time" : 1654466006298,
  "history_notes" : null,
  "history_process" : "g7endl",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "cfn3p9sutvy",
  "history_input" : "# importing necessary libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nfrom pathlib import Path\nimport geopandas as gpd\nimport cmaps\nfrom datetime import datetime\n\nimport imageio\nimport glob\nimport os\n\n\nmpl.rcParams['font.size'] = 25\n#os.system('module load ffmpeg') # Uncomment if running on HOPPER\n\n# home directory\nhome = str(Path.home())\n\n# Delete previous .tif images only (not folder) to reduce space if folder and files exist already.\nif Path(home + \"/cmaq/prediction_maps/\"):\n    for file in Path(home + \"/cmaq/prediction_maps/\").glob(\"*\"):\n        if file.is_file():\n          [f.unlink() for f in Path(home + \"/cmaq/prediction_maps/\").glob(\"*\") if f.is_file()] \n\n# importing data\ndf = raw_df = pd.read_csv(home + '/cmaq/prediction_files/prediction_rf.csv')\n\ntime_ = df['YYYYMMDDHH'].unique()\ndfs = dict(tuple(df.groupby('YYYYMMDDHH')))  # grouping the data by YYMMDDHH\n\ncmap = cmaps.WhiteBlueGreenYellowRed[0:262:12]\n\ncount = 0\n\nfor t in time_:\n  \n    dateObj = datetime.strptime(str(t), \"%Y%m%d%H\")\n    print(t)\n    \n    single_hour_df = raw_df.loc[raw_df['YYYYMMDDHH']==t]\n    #print(single_hour_df)\n    print(\"max: \", single_hour_df[\"prediction\"].max())\n    print(\"min: \", single_hour_df[\"prediction\"].min())\n    print(\"median: \", single_hour_df[\"prediction\"].median())\n    print(\"mean: \", single_hour_df[\"prediction\"].mean())\n    \n    count += 1\n    \n    df = dfs[t]\n    \n    gdf = gpd.GeoDataFrame(\n        df, geometry=gpd.points_from_xy(df.Longitude, df.Latitude))\n    gdf = gdf.set_crs(\"EPSG:4326\")\n    #gdf = gdf.to_crs(\"+proj=lcc +lat_1=2 +lat_2=33.000 +lat_0=45.000 +lon_0=-97.000 +x_0=-97.000 +y_0=40.000 +datum=NAD83 +units=m +no_defs\")\n\n    gdf.plot(column='prediction', legend=True, figsize=(20, 18),\n         cmap=cmap, vmin=0,vmax=80,)\n    \n    plotTitle = datetime.strftime(dateObj, \"%Y-%m-%d (Time: %H)\")\n    plt.title(plotTitle, fontdict={'fontsize': 35})\n    plt.savefig(home + \"/cmaq/prediction_maps/CMAQ_\" + str(t) + \".tif\")\n    \n    if count > 5:\n         break;\n",
  "history_output" : "Traceback (most recent call last):\n  File \"cmaq_rf_vis.py\", line 29, in <module>\n    df = raw_df = pd.read_csv(home + '/cmaq/prediction_files/prediction_rf.csv')\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/io/parsers.py\", line 686, in read_csv\n    return _read(filepath_or_buffer, kwds)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/io/parsers.py\", line 452, in _read\n    parser = TextFileReader(fp_or_buf, **kwds)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/io/parsers.py\", line 946, in __init__\n    self._make_engine(self.engine)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/io/parsers.py\", line 1178, in _make_engine\n    self._engine = CParserWrapper(self.f, **self.options)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/pandas/io/parsers.py\", line 2008, in __init__\n    self._reader = parsers.TextReader(src, **kwds)\n  File \"pandas/_libs/parsers.pyx\", line 382, in pandas._libs.parsers.TextReader.__cinit__\n  File \"pandas/_libs/parsers.pyx\", line 674, in pandas._libs.parsers.TextReader._setup_parser_source\nFileNotFoundError: [Errno 2] No such file or directory: '/home/zsun/cmaq/prediction_files/prediction_rf.csv'\n",
  "history_begin_time" : 1654456209112,
  "history_end_time" : 1654456240727,
  "history_notes" : null,
  "history_process" : "g7endl",
  "host_id" : "roeaa3",
  "indicator" : "Failed"
},]
